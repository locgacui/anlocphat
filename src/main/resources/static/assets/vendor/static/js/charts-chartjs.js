/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/charts-chartjs.js":
/*!*************************************!*\
  !*** ./static/js/charts-chartjs.js ***!
  \*************************************/
/***/ (function() {

eval("/**\n * Charts ChartsJS\n */\n\n\n(function () {\n  // Color Variables\n  var purpleColor = '#836AF9',\n    yellowColor = '#ffe800',\n    cyanColor = '#28dac6',\n    orangeColor = '#FF8132',\n    orangeLightColor = '#FDAC34',\n    oceanBlueColor = '#299AFF',\n    greyColor = '#4F5D70',\n    greyLightColor = '#EDF1F4',\n    blueColor = '#2B9AFF',\n    blueLightColor = '#84D0FF';\n  var cardColor, headingColor, labelColor, borderColor, legendColor;\n  if (isDarkStyle) {\n    cardColor = config.colors_dark.cardColor;\n    headingColor = config.colors_dark.headingColor;\n    labelColor = config.colors_dark.textMuted;\n    legendColor = config.colors_dark.bodyColor;\n    borderColor = config.colors_dark.borderColor;\n  } else {\n    cardColor = config.colors.cardColor;\n    headingColor = config.colors.headingColor;\n    labelColor = config.colors.textMuted;\n    legendColor = config.colors.bodyColor;\n    borderColor = config.colors.borderColor;\n  }\n\n  // Set height according to their data-height\n  // --------------------------------------------------------------------\n  var chartList = document.querySelectorAll('.chartjs');\n  chartList.forEach(function (chartListItem) {\n    chartListItem.height = chartListItem.dataset.height;\n  });\n\n  // Bar Chart\n  // --------------------------------------------------------------------\n  var barChart = document.getElementById('barChart');\n  if (barChart) {\n    var barChartVar = new Chart(barChart, {\n      type: 'bar',\n      data: {\n        labels: ['7/12', '8/12', '9/12', '10/12', '11/12', '12/12', '13/12', '14/12', '15/12', '16/12', '17/12', '18/12', '19/12'],\n        datasets: [{\n          data: [275, 90, 190, 205, 125, 85, 55, 87, 127, 150, 230, 280, 190],\n          backgroundColor: cyanColor,\n          borderColor: 'transparent',\n          maxBarThickness: 15,\n          borderRadius: {\n            topRight: 15,\n            topLeft: 15\n          }\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          duration: 500\n        },\n        plugins: {\n          tooltip: {\n            rtl: isRtl,\n            backgroundColor: cardColor,\n            titleColor: headingColor,\n            bodyColor: legendColor,\n            borderWidth: 1,\n            borderColor: borderColor\n          },\n          legend: {\n            display: false\n          }\n        },\n        scales: {\n          x: {\n            grid: {\n              color: borderColor,\n              drawBorder: false,\n              borderColor: borderColor\n            },\n            ticks: {\n              color: labelColor\n            }\n          },\n          y: {\n            min: 0,\n            max: 400,\n            grid: {\n              color: borderColor,\n              drawBorder: false,\n              borderColor: borderColor\n            },\n            ticks: {\n              stepSize: 100,\n              color: labelColor\n            }\n          }\n        }\n      }\n    });\n  }\n\n  // Horizontal Bar Chart\n  // --------------------------------------------------------------------\n\n  var horizontalBarChart = document.getElementById('horizontalBarChart');\n  if (horizontalBarChart) {\n    var horizontalBarChartVar = new Chart(horizontalBarChart, {\n      type: 'bar',\n      data: {\n        labels: ['MON', 'TUE', 'WED ', 'THU', 'FRI', 'SAT', 'SUN'],\n        datasets: [{\n          data: [710, 350, 470, 580, 230, 460, 120],\n          backgroundColor: config.colors.info,\n          borderColor: 'transparent',\n          maxBarThickness: 15\n        }]\n      },\n      options: {\n        indexAxis: 'y',\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          duration: 500\n        },\n        elements: {\n          bar: {\n            borderRadius: {\n              topRight: 15,\n              bottomRight: 15\n            }\n          }\n        },\n        plugins: {\n          tooltip: {\n            rtl: isRtl,\n            backgroundColor: cardColor,\n            titleColor: headingColor,\n            bodyColor: legendColor,\n            borderWidth: 1,\n            borderColor: borderColor\n          },\n          legend: {\n            display: false\n          }\n        },\n        scales: {\n          x: {\n            min: 0,\n            grid: {\n              color: borderColor,\n              borderColor: borderColor\n            },\n            ticks: {\n              color: labelColor\n            }\n          },\n          y: {\n            grid: {\n              borderColor: borderColor,\n              display: false,\n              drawBorder: false\n            },\n            ticks: {\n              color: labelColor\n            }\n          }\n        }\n      }\n    });\n  }\n\n  // Line Chart\n  // --------------------------------------------------------------------\n\n  var lineChart = document.getElementById('lineChart');\n  if (lineChart) {\n    var lineChartVar = new Chart(lineChart, {\n      type: 'line',\n      data: {\n        labels: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140],\n        datasets: [{\n          data: [80, 150, 180, 270, 210, 160, 160, 202, 265, 210, 270, 255, 290, 360, 375],\n          label: 'Europe',\n          borderColor: config.colors.danger,\n          tension: 0.5,\n          pointStyle: 'circle',\n          backgroundColor: config.colors.danger,\n          fill: false,\n          pointRadius: 1,\n          pointHoverRadius: 5,\n          pointHoverBorderWidth: 5,\n          pointBorderColor: 'transparent',\n          pointHoverBorderColor: cardColor,\n          pointHoverBackgroundColor: config.colors.danger\n        }, {\n          data: [80, 125, 105, 130, 215, 195, 140, 160, 230, 300, 220, 170, 210, 200, 280],\n          label: 'Asia',\n          borderColor: config.colors.primary,\n          tension: 0.5,\n          pointStyle: 'circle',\n          backgroundColor: config.colors.primary,\n          fill: false,\n          pointRadius: 1,\n          pointHoverRadius: 5,\n          pointHoverBorderWidth: 5,\n          pointBorderColor: 'transparent',\n          pointHoverBorderColor: cardColor,\n          pointHoverBackgroundColor: config.colors.primary\n        }, {\n          data: [80, 99, 82, 90, 115, 115, 74, 75, 130, 155, 125, 90, 140, 130, 180],\n          label: 'Africa',\n          borderColor: yellowColor,\n          tension: 0.5,\n          pointStyle: 'circle',\n          backgroundColor: yellowColor,\n          fill: false,\n          pointRadius: 1,\n          pointHoverRadius: 5,\n          pointHoverBorderWidth: 5,\n          pointBorderColor: 'transparent',\n          pointHoverBorderColor: cardColor,\n          pointHoverBackgroundColor: yellowColor\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            grid: {\n              color: borderColor,\n              drawBorder: false,\n              borderColor: borderColor\n            },\n            ticks: {\n              color: labelColor\n            }\n          },\n          y: {\n            scaleLabel: {\n              display: true\n            },\n            min: 0,\n            max: 400,\n            ticks: {\n              color: labelColor,\n              stepSize: 100\n            },\n            grid: {\n              color: borderColor,\n              drawBorder: false,\n              borderColor: borderColor\n            }\n          }\n        },\n        plugins: {\n          tooltip: {\n            // Updated default tooltip UI\n            rtl: isRtl,\n            backgroundColor: cardColor,\n            titleColor: headingColor,\n            bodyColor: legendColor,\n            borderWidth: 1,\n            borderColor: borderColor\n          },\n          legend: {\n            position: 'top',\n            align: 'start',\n            rtl: isRtl,\n            labels: {\n              usePointStyle: true,\n              padding: 35,\n              boxWidth: 6,\n              boxHeight: 6,\n              color: legendColor\n            }\n          }\n        }\n      }\n    });\n  }\n\n  // Radar Chart\n  // --------------------------------------------------------------------\n\n  var radarChart = document.getElementById('radarChart');\n  if (radarChart) {\n    // For radar gradient color\n    var gradientBlue = radarChart.getContext('2d').createLinearGradient(0, 0, 0, 150);\n    gradientBlue.addColorStop(0, 'rgba(85, 85, 255, 0.9)');\n    gradientBlue.addColorStop(1, 'rgba(151, 135, 255, 0.8)');\n    var gradientRed = radarChart.getContext('2d').createLinearGradient(0, 0, 0, 150);\n    gradientRed.addColorStop(0, 'rgba(255, 85, 184, 0.9)');\n    gradientRed.addColorStop(1, 'rgba(255, 135, 135, 0.8)');\n    var radarChartVar = new Chart(radarChart, {\n      type: 'radar',\n      data: {\n        labels: ['STA', 'STR', 'AGI', 'VIT', 'CHA', 'INT'],\n        datasets: [{\n          label: 'Donté Panlin',\n          data: [25, 59, 90, 81, 60, 82],\n          fill: true,\n          pointStyle: 'dash',\n          backgroundColor: gradientRed,\n          borderColor: 'transparent',\n          pointBorderColor: 'transparent'\n        }, {\n          label: 'Mireska Sunbreeze',\n          data: [40, 100, 40, 90, 40, 90],\n          fill: true,\n          pointStyle: 'dash',\n          backgroundColor: gradientBlue,\n          borderColor: 'transparent',\n          pointBorderColor: 'transparent'\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          duration: 500\n        },\n        scales: {\n          r: {\n            ticks: {\n              maxTicksLimit: 1,\n              display: false,\n              color: labelColor\n            },\n            grid: {\n              color: borderColor\n            },\n            angleLines: {\n              color: borderColor\n            },\n            pointLabels: {\n              color: labelColor\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            rtl: isRtl,\n            position: 'top',\n            labels: {\n              padding: 25,\n              color: legendColor\n            }\n          },\n          tooltip: {\n            // Updated default tooltip UI\n            rtl: isRtl,\n            backgroundColor: cardColor,\n            titleColor: headingColor,\n            bodyColor: legendColor,\n            borderWidth: 1,\n            borderColor: borderColor\n          }\n        }\n      }\n    });\n  }\n\n  // Polar Chart\n  // --------------------------------------------------------------------\n\n  var polarChart = document.getElementById('polarChart');\n  if (polarChart) {\n    var polarChartVar = new Chart(polarChart, {\n      type: 'polarArea',\n      data: {\n        labels: ['Africa', 'Asia', 'Europe', 'America', 'Antarctica', 'Australia'],\n        datasets: [{\n          label: 'Population (millions)',\n          backgroundColor: [purpleColor, yellowColor, orangeColor, oceanBlueColor, greyColor, cyanColor],\n          data: [19, 17.5, 15, 13.5, 11, 9],\n          borderWidth: 0\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          duration: 500\n        },\n        scales: {\n          r: {\n            ticks: {\n              display: false,\n              color: labelColor\n            },\n            grid: {\n              display: false\n            }\n          }\n        },\n        plugins: {\n          tooltip: {\n            // Updated default tooltip UI\n            rtl: isRtl,\n            backgroundColor: cardColor,\n            titleColor: headingColor,\n            bodyColor: legendColor,\n            borderWidth: 1,\n            borderColor: borderColor\n          },\n          legend: {\n            rtl: isRtl,\n            position: 'right',\n            labels: {\n              usePointStyle: true,\n              padding: 25,\n              boxWidth: 8,\n              boxHeight: 8,\n              color: legendColor\n            }\n          }\n        }\n      }\n    });\n  }\n\n  // Bubble Chart\n  // --------------------------------------------------------------------\n\n  var bubbleChart = document.getElementById('bubbleChart');\n  if (bubbleChart) {\n    var bubbleChartVar = new Chart(bubbleChart, {\n      type: 'bubble',\n      data: {\n        animation: {\n          duration: 10000\n        },\n        datasets: [{\n          label: 'Dataset 1',\n          backgroundColor: purpleColor,\n          borderColor: purpleColor,\n          data: [{\n            x: 20,\n            y: 74,\n            r: 10\n          }, {\n            x: 10,\n            y: 110,\n            r: 5\n          }, {\n            x: 30,\n            y: 165,\n            r: 7\n          }, {\n            x: 40,\n            y: 200,\n            r: 20\n          }, {\n            x: 90,\n            y: 185,\n            r: 7\n          }, {\n            x: 50,\n            y: 240,\n            r: 7\n          }, {\n            x: 60,\n            y: 275,\n            r: 10\n          }, {\n            x: 70,\n            y: 305,\n            r: 5\n          }, {\n            x: 80,\n            y: 325,\n            r: 4\n          }, {\n            x: 100,\n            y: 310,\n            r: 5\n          }, {\n            x: 110,\n            y: 240,\n            r: 5\n          }, {\n            x: 120,\n            y: 270,\n            r: 7\n          }, {\n            x: 130,\n            y: 300,\n            r: 6\n          }]\n        }, {\n          label: 'Dataset 2',\n          backgroundColor: yellowColor,\n          borderColor: yellowColor,\n          data: [{\n            x: 30,\n            y: 72,\n            r: 5\n          }, {\n            x: 40,\n            y: 110,\n            r: 7\n          }, {\n            x: 20,\n            y: 135,\n            r: 6\n          }, {\n            x: 10,\n            y: 160,\n            r: 12\n          }, {\n            x: 50,\n            y: 285,\n            r: 5\n          }, {\n            x: 60,\n            y: 235,\n            r: 5\n          }, {\n            x: 70,\n            y: 275,\n            r: 7\n          }, {\n            x: 80,\n            y: 290,\n            r: 4\n          }, {\n            x: 90,\n            y: 250,\n            r: 10\n          }, {\n            x: 100,\n            y: 220,\n            r: 7\n          }, {\n            x: 120,\n            y: 230,\n            r: 4\n          }, {\n            x: 110,\n            y: 320,\n            r: 15\n          }, {\n            x: 130,\n            y: 330,\n            r: 7\n          }]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            min: 0,\n            max: 140,\n            grid: {\n              color: borderColor,\n              drawBorder: false,\n              borderColor: borderColor\n            },\n            ticks: {\n              stepSize: 10,\n              color: labelColor\n            }\n          },\n          y: {\n            min: 0,\n            max: 400,\n            grid: {\n              color: borderColor,\n              drawBorder: false,\n              borderColor: borderColor\n            },\n            ticks: {\n              stepSize: 100,\n              color: labelColor\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            // Updated default tooltip UI\n            rtl: isRtl,\n            backgroundColor: cardColor,\n            titleColor: headingColor,\n            bodyColor: legendColor,\n            borderWidth: 1,\n            borderColor: borderColor\n          }\n        }\n      }\n    });\n  }\n\n  // LineArea Chart\n  // --------------------------------------------------------------------\n\n  var lineAreaChart = document.getElementById('lineAreaChart');\n  if (lineAreaChart) {\n    var lineAreaChartVar = new Chart(lineAreaChart, {\n      type: 'line',\n      data: {\n        labels: ['7/12', '8/12', '9/12', '10/12', '11/12', '12/12', '13/12', '14/12', '15/12', '16/12', '17/12', '18/12', '19/12', '20/12', ''],\n        datasets: [{\n          label: 'Africa',\n          data: [40, 55, 45, 75, 65, 55, 70, 60, 100, 98, 90, 120, 125, 140, 155],\n          tension: 0,\n          fill: true,\n          backgroundColor: blueColor,\n          pointStyle: 'circle',\n          borderColor: 'transparent',\n          pointRadius: 0.5,\n          pointHoverRadius: 5,\n          pointHoverBorderWidth: 5,\n          pointBorderColor: 'transparent',\n          pointHoverBackgroundColor: blueColor,\n          pointHoverBorderColor: cardColor\n        }, {\n          label: 'Asia',\n          data: [70, 85, 75, 150, 100, 140, 110, 105, 160, 150, 125, 190, 200, 240, 275],\n          tension: 0,\n          fill: true,\n          backgroundColor: blueLightColor,\n          pointStyle: 'circle',\n          borderColor: 'transparent',\n          pointRadius: 0.5,\n          pointHoverRadius: 5,\n          pointHoverBorderWidth: 5,\n          pointBorderColor: 'transparent',\n          pointHoverBackgroundColor: blueLightColor,\n          pointHoverBorderColor: cardColor\n        }, {\n          label: 'Europe',\n          data: [240, 195, 160, 215, 185, 215, 185, 200, 250, 210, 195, 250, 235, 300, 315],\n          tension: 0,\n          fill: true,\n          backgroundColor: greyLightColor,\n          pointStyle: 'circle',\n          borderColor: 'transparent',\n          pointRadius: 0.5,\n          pointHoverRadius: 5,\n          pointHoverBorderWidth: 5,\n          pointBorderColor: 'transparent',\n          pointHoverBackgroundColor: greyLightColor,\n          pointHoverBorderColor: cardColor\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'top',\n            rtl: isRtl,\n            align: 'start',\n            labels: {\n              usePointStyle: true,\n              padding: 35,\n              boxWidth: 6,\n              boxHeight: 6,\n              color: legendColor\n            }\n          },\n          tooltip: {\n            // Updated default tooltip UI\n            rtl: isRtl,\n            backgroundColor: cardColor,\n            titleColor: headingColor,\n            bodyColor: legendColor,\n            borderWidth: 1,\n            borderColor: borderColor\n          }\n        },\n        scales: {\n          x: {\n            grid: {\n              color: 'transparent',\n              borderColor: borderColor\n            },\n            ticks: {\n              color: labelColor\n            }\n          },\n          y: {\n            min: 0,\n            max: 400,\n            grid: {\n              color: 'transparent',\n              borderColor: borderColor\n            },\n            ticks: {\n              stepSize: 100,\n              color: labelColor\n            }\n          }\n        }\n      }\n    });\n  }\n\n  // Doughnut Chart\n  // --------------------------------------------------------------------\n\n  var doughnutChart = document.getElementById('doughnutChart');\n  if (doughnutChart) {\n    var doughnutChartVar = new Chart(doughnutChart, {\n      type: 'doughnut',\n      data: {\n        labels: ['Tablet', 'Mobile', 'Desktop'],\n        datasets: [{\n          data: [10, 10, 80],\n          backgroundColor: [cyanColor, orangeLightColor, config.colors.primary],\n          borderWidth: 0,\n          pointStyle: 'rectRounded'\n        }]\n      },\n      options: {\n        responsive: true,\n        animation: {\n          duration: 500\n        },\n        cutout: '68%',\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            callbacks: {\n              label: function label(context) {\n                var label = context.labels || '',\n                  value = context.parsed;\n                var output = ' ' + label + ' : ' + value + ' %';\n                return output;\n              }\n            },\n            // Updated default tooltip UI\n            rtl: isRtl,\n            backgroundColor: cardColor,\n            titleColor: headingColor,\n            bodyColor: legendColor,\n            borderWidth: 1,\n            borderColor: borderColor\n          }\n        }\n      }\n    });\n  }\n\n  // Scatter Chart\n  // --------------------------------------------------------------------\n\n  var scatterChart = document.getElementById('scatterChart');\n  if (scatterChart) {\n    var scatterChartVar = new Chart(scatterChart, {\n      type: 'scatter',\n      data: {\n        datasets: [{\n          label: 'iPhone',\n          data: [{\n            x: 72,\n            y: 225\n          }, {\n            x: 81,\n            y: 270\n          }, {\n            x: 90,\n            y: 230\n          }, {\n            x: 103,\n            y: 305\n          }, {\n            x: 103,\n            y: 245\n          }, {\n            x: 108,\n            y: 275\n          }, {\n            x: 110,\n            y: 290\n          }, {\n            x: 111,\n            y: 315\n          }, {\n            x: 109,\n            y: 350\n          }, {\n            x: 116,\n            y: 340\n          }, {\n            x: 113,\n            y: 260\n          }, {\n            x: 117,\n            y: 275\n          }, {\n            x: 117,\n            y: 295\n          }, {\n            x: 126,\n            y: 280\n          }, {\n            x: 127,\n            y: 340\n          }, {\n            x: 133,\n            y: 330\n          }],\n          backgroundColor: config.colors.primary,\n          borderColor: 'transparent',\n          pointBorderWidth: 2,\n          pointHoverBorderWidth: 2,\n          pointRadius: 5\n        }, {\n          label: 'Samsung Note',\n          data: [{\n            x: 13,\n            y: 95\n          }, {\n            x: 22,\n            y: 105\n          }, {\n            x: 17,\n            y: 115\n          }, {\n            x: 19,\n            y: 130\n          }, {\n            x: 21,\n            y: 125\n          }, {\n            x: 35,\n            y: 125\n          }, {\n            x: 13,\n            y: 155\n          }, {\n            x: 21,\n            y: 165\n          }, {\n            x: 25,\n            y: 155\n          }, {\n            x: 18,\n            y: 190\n          }, {\n            x: 26,\n            y: 180\n          }, {\n            x: 43,\n            y: 180\n          }, {\n            x: 53,\n            y: 202\n          }, {\n            x: 61,\n            y: 165\n          }, {\n            x: 67,\n            y: 225\n          }],\n          backgroundColor: yellowColor,\n          borderColor: 'transparent',\n          pointRadius: 5\n        }, {\n          label: 'OnePlus',\n          data: [{\n            x: 70,\n            y: 195\n          }, {\n            x: 72,\n            y: 270\n          }, {\n            x: 98,\n            y: 255\n          }, {\n            x: 100,\n            y: 215\n          }, {\n            x: 87,\n            y: 240\n          }, {\n            x: 94,\n            y: 280\n          }, {\n            x: 99,\n            y: 300\n          }, {\n            x: 102,\n            y: 290\n          }, {\n            x: 110,\n            y: 275\n          }, {\n            x: 111,\n            y: 250\n          }, {\n            x: 94,\n            y: 280\n          }, {\n            x: 92,\n            y: 340\n          }, {\n            x: 100,\n            y: 335\n          }, {\n            x: 108,\n            y: 330\n          }],\n          backgroundColor: cyanColor,\n          borderColor: 'transparent',\n          pointBorderWidth: 2,\n          pointHoverBorderWidth: 2,\n          pointRadius: 5\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          duration: 800\n        },\n        plugins: {\n          legend: {\n            position: 'top',\n            rtl: isRtl,\n            align: 'start',\n            labels: {\n              usePointStyle: true,\n              padding: 25,\n              boxWidth: 6,\n              boxHeight: 6,\n              color: legendColor\n            }\n          },\n          tooltip: {\n            // Updated default tooltip UI\n            rtl: isRtl,\n            backgroundColor: cardColor,\n            titleColor: headingColor,\n            bodyColor: legendColor,\n            borderWidth: 1,\n            borderColor: borderColor\n          }\n        },\n        scales: {\n          x: {\n            min: 0,\n            max: 140,\n            grid: {\n              color: borderColor,\n              drawTicks: false,\n              drawBorder: false,\n              borderColor: borderColor\n            },\n            ticks: {\n              stepSize: 10,\n              color: labelColor\n            }\n          },\n          y: {\n            min: 0,\n            max: 400,\n            grid: {\n              color: borderColor,\n              drawTicks: false,\n              drawBorder: false,\n              borderColor: borderColor\n            },\n            ticks: {\n              stepSize: 100,\n              color: labelColor\n            }\n          }\n        }\n      }\n    });\n  }\n})();\n\n//# sourceURL=webpack://Sneat/./static/js/charts-chartjs.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/charts-chartjs.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});