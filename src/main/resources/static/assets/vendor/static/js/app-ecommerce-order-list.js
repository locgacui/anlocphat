/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/app-ecommerce-order-list.js":
/*!***********************************************!*\
  !*** ./static/js/app-ecommerce-order-list.js ***!
  \***********************************************/
/***/ (function() {

eval("/**\n * app-ecommerce-order-list Script\n */\n\n\n\n// Datatable (jquery)\n$(function () {\n  var borderColor, bodyBg, headingColor;\n  if (isDarkStyle) {\n    borderColor = config.colors_dark.borderColor;\n    bodyBg = config.colors_dark.bodyBg;\n    headingColor = config.colors_dark.headingColor;\n  } else {\n    borderColor = config.colors.borderColor;\n    bodyBg = config.colors.bodyBg;\n    headingColor = config.colors.headingColor;\n  }\n\n  // Variable declaration for table\n\n  var dt_order_table = $('.datatables-order'),\n    statusObj = {\n      1: {\n        title: 'Dispatched',\n        class: 'bg-label-warning'\n      },\n      2: {\n        title: 'Delivered',\n        class: 'bg-label-success'\n      },\n      3: {\n        title: 'Out for Delivery',\n        class: 'bg-label-primary'\n      },\n      4: {\n        title: 'Ready to Pickup',\n        class: 'bg-label-info'\n      }\n    },\n    paymentObj = {\n      1: {\n        title: 'Paid',\n        class: 'text-success'\n      },\n      2: {\n        title: 'Pending',\n        class: 'text-warning'\n      },\n      3: {\n        title: 'Failed',\n        class: 'text-danger'\n      },\n      4: {\n        title: 'Cancelled',\n        class: 'text-secondary'\n      }\n    };\n\n  // E-commerce Products datatable\n\n  if (dt_order_table.length) {\n    var dt_products = dt_order_table.DataTable({\n      ajax: assetsPath + 'json/ecommerce-customer-order.json',\n      // JSON file to add data\n      columns: [\n      // columns according to JSON\n      {\n        data: 'id'\n      }, {\n        data: 'id'\n      }, {\n        data: 'order'\n      }, {\n        data: 'date'\n      }, {\n        data: 'customer'\n      },\n      //email //avatar\n      {\n        data: 'payment'\n      }, {\n        data: 'status'\n      }, {\n        data: 'method'\n      },\n      //method_number\n      {\n        data: ''\n      }],\n      columnDefs: [{\n        // For Responsive\n        className: 'control',\n        searchable: false,\n        orderable: false,\n        responsivePriority: 2,\n        targets: 0,\n        render: function render(data, type, full, meta) {\n          return '';\n        }\n      }, {\n        // For Checkboxes\n        targets: 1,\n        orderable: false,\n        checkboxes: {\n          selectAllRender: '<input type=\"checkbox\" class=\"form-check-input\">'\n        },\n        render: function render() {\n          return '<input type=\"checkbox\" class=\"dt-checkboxes form-check-input\" >';\n        },\n        searchable: false\n      }, {\n        // Order ID\n        targets: 2,\n        render: function render(data, type, full, meta) {\n          var $order_id = full['order'];\n          // Creates full output for row\n          var $row_output = '<a href=\"app-ecommerce-order-details.html\"><span class=\"fw-medium\">#' + $order_id + '</span></a>';\n          return $row_output;\n        }\n      }, {\n        // Date and Time\n        targets: 3,\n        render: function render(data, type, full, meta) {\n          var date = new Date(full.date); // convert the date string to a Date object\n          var timeX = full['time'].substring(0, 5);\n          var formattedDate = date.toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric',\n            time: 'numeric'\n          });\n          return '<span class=\"text-nowrap\">' + formattedDate + ', ' + timeX + '</span>';\n        }\n      }, {\n        // Customers\n        targets: 4,\n        responsivePriority: 1,\n        render: function render(data, type, full, meta) {\n          var $name = full['customer'],\n            $email = full['email'],\n            $avatar = full['avatar'];\n          if ($avatar) {\n            // For Avatar image\n            var $output = '<img src=\"' + assetsPath + 'img/avatars/' + $avatar + '\" alt=\"Avatar\" class=\"rounded-circle\">';\n          } else {\n            // For Avatar badge\n            var stateNum = Math.floor(Math.random() * 6);\n            var states = ['success', 'danger', 'warning', 'info', 'dark', 'primary', 'secondary'];\n            var $state = states[stateNum],\n              $name = full['customer'],\n              $initials = $name.match(/\\b\\w/g) || [];\n            $initials = (($initials.shift() || '') + ($initials.pop() || '')).toUpperCase();\n            $output = '<span class=\"avatar-initial rounded-circle bg-label-' + $state + '\">' + $initials + '</span>';\n          }\n          // Creates full output for row\n          var $row_output = '<div class=\"d-flex justify-content-start align-items-center order-name text-nowrap\">' + '<div class=\"avatar-wrapper\">' + '<div class=\"avatar me-2\">' + $output + '</div>' + '</div>' + '<div class=\"d-flex flex-column\">' + '<h6 class=\"m-0\"><a href=\"pages-profile-user.html\" class=\"text-body\">' + $name + '</a></h6>' + '<small class=\"text-muted\">' + $email + '</small>' + '</div>' + '</div>';\n          return $row_output;\n        }\n      }, {\n        targets: 5,\n        render: function render(data, type, full, meta) {\n          var $payment = full['payment'],\n            $paymentObj = paymentObj[$payment];\n          if ($paymentObj) {\n            return '<h6 class=\"mb-0 w-px-100 ' + $paymentObj.class + '\">' + '<i class=\"bx bxs-circle fs-tiny me-2\"></i>' + $paymentObj.title + '</h6>';\n          }\n          return data;\n        }\n      }, {\n        // Status\n        targets: -3,\n        render: function render(data, type, full, meta) {\n          var $status = full['status'];\n          return '<span class=\"badge px-2 ' + statusObj[$status].class + '\" text-capitalized>' + statusObj[$status].title + '</span>';\n        }\n      }, {\n        // Payment Method\n        targets: -2,\n        render: function render(data, type, full, meta) {\n          var $method = full['method'];\n          var $method_number = full['method_number'];\n          if ($method == 'paypal_logo') {\n            $method_number = '@gmail.com';\n          }\n          return '<div class=\"d-flex align-items-center text-nowrap\">' + '<img src=\"' + assetsPath + 'img/icons/payments/' + $method + '.png\" alt=\"' + $method + '\" class=\"me-2\" width=\"16\">' + '<span><i class=\"bx bx-dots-horizontal-rounded\"></i>' + $method_number + '</span>' + '</div>';\n        }\n      }, {\n        // Actions\n        targets: -1,\n        title: 'Actions',\n        searchable: false,\n        orderable: false,\n        render: function render(data, type, full, meta) {\n          return '<div class=\"d-flex justify-content-sm-center align-items-sm-center\">' + '<button class=\"btn btn-sm btn-icon dropdown-toggle hide-arrow\" data-bs-toggle=\"dropdown\"><i class=\"bx bx-dots-vertical-rounded\"></i></button>' + '<div class=\"dropdown-menu dropdown-menu-end m-0\">' + '<a href=\"app-ecommerce-order-details.html\" class=\"dropdown-item\">View</a>' + '<a href=\"javascript:0;\" class=\"dropdown-item delete-record\">' + 'Delete' + '</a>' + '</div>' + '</div>';\n        }\n      }],\n      order: [3, 'asc'],\n      //set any columns order asc/desc\n      dom: '<\"card-header d-flex flex-column flex-md-row align-items-start align-items-md-center\"<\"ms-n2\"f><\"d-flex align-items-md-center justify-content-md-end mt-2 mt-md-0\"l<\"dt-action-buttons\"B>>' + '>t' + '<\"row mx-2\"' + '<\"col-sm-12 col-md-6\"i>' + '<\"col-sm-12 col-md-6\"p>' + '>',\n      lengthMenu: [10, 40, 60, 80, 100],\n      //for length of menu\n      language: {\n        sLengthMenu: '_MENU_',\n        search: '',\n        searchPlaceholder: 'Search Order',\n        info: 'Displaying _START_ to _END_ of _TOTAL_ entries'\n      },\n      // Buttons with Dropdown\n      buttons: [{\n        extend: 'collection',\n        className: 'btn btn-label-secondary dropdown-toggle',\n        text: '<i class=\"bx bx-export me-1\"></i>Export',\n        buttons: [{\n          extend: 'print',\n          text: '<i class=\"bx bx-printer me-2\" ></i>Print',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [2, 3, 4, 5, 6, 7],\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('order-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          },\n          customize: function customize(win) {\n            // Customize print view for dark\n            $(win.document.body).css('color', headingColor).css('border-color', borderColor).css('background-color', bodyBg);\n            $(win.document.body).find('table').addClass('compact').css('color', 'inherit').css('border-color', 'inherit').css('background-color', 'inherit');\n          }\n        }, {\n          extend: 'csv',\n          text: '<i class=\"bx bx-file me-2\" ></i>Csv',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [2, 3, 4, 5, 6, 7],\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('order-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }, {\n          extend: 'excel',\n          text: '<i class=\"bx bxs-file-export me-2\"></i>Excel',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [2, 3, 4, 5, 6, 7],\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('order-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }, {\n          extend: 'pdf',\n          text: '<i class=\"bx bxs-file-pdf me-2\"></i>Pdf',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [2, 3, 4, 5, 6, 7],\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('order-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }, {\n          extend: 'copy',\n          text: '<i class=\"bx bx-copy me-2\" ></i>Copy',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [2, 3, 4, 5, 6, 7],\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('order-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }]\n      }],\n      // For responsive popup\n      responsive: {\n        details: {\n          display: $.fn.dataTable.Responsive.display.modal({\n            header: function header(row) {\n              var data = row.data();\n              return 'Details of ' + data['customer'];\n            }\n          }),\n          type: 'column',\n          renderer: function renderer(api, rowIdx, columns) {\n            var data = $.map(columns, function (col, i) {\n              return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)\n              ? '<tr data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>' : '';\n            }).join('');\n            return data ? $('<table class=\"table\"/><tbody />').append(data) : false;\n          }\n        }\n      }\n    });\n    $('.dataTables_length').addClass('mt-0 mt-md-3 me-3');\n    $('.dt-action-buttons').addClass('pt-0');\n    // To remove default btn-secondary in export buttons\n    $('.dt-buttons > .btn-group > button').removeClass('btn-secondary');\n  }\n\n  // Delete Record\n  $('.datatables-order tbody').on('click', '.delete-record', function () {\n    dt_products.row($(this).parents('tr')).remove().draw();\n  });\n\n  // Filter form control to default size\n  // ? setTimeout used for multilingual table initialization\n  setTimeout(function () {\n    $('.dataTables_filter .form-control').removeClass('form-control-sm');\n    $('.dataTables_length .form-select').removeClass('form-select-sm');\n  }, 300);\n});\n\n//# sourceURL=webpack://Sneat/./static/js/app-ecommerce-order-list.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/app-ecommerce-order-list.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});