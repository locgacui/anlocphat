/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/app-kanban.js":
/*!*********************************!*\
  !*** ./static/js/app-kanban.js ***!
  \*********************************/
/***/ (function() {

eval("/**\n * App Kanban\n */\n\n\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n  var boards, kanbanSidebar, kanbanWrapper, commentEditor, kanbanAddNewBoard, kanbanAddNewInput, kanbanAddBoardBtn, datePicker, select2, assetsPath, kanbanOffcanvas, kanbanResponse, renderLabels, renderBoardDropdown, renderDropdown, renderHeader, renderAvatar, renderFooter, kanban, kanbanContainer, kanbanTitleBoard, kanbanItem, tooltipTriggerList, tasksItemDropdown, deleteBoards, deleteTask, cancelAddNew;\n  return _regeneratorRuntime().wrap(function _callee$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        renderFooter = function _renderFooter(attachments, comments, assigned, members) {\n          return \"<div class='d-flex justify-content-between align-items-center flex-wrap mt-2 pt-1'>\" + \"<div class='d-flex'> <span class='d-flex align-items-center me-2'><i class='bx bx-paperclip me-1'></i>\" + \"<span class='attachments'>\" + attachments + '</span>' + \"</span> <span class='d-flex align-items-center'><i class='bx bx-chat me-1'></i>\" + '<span> ' + comments + ' </span>' + '</span></div>' + \"<div class='avatar-group d-flex align-items-center assigned-avatar'>\" + renderAvatar(assigned, true, 'xs', null, members) + '</div>' + '</div>';\n        };\n        renderAvatar = function _renderAvatar(images, pullUp, size, margin, members) {\n          var $transition = pullUp ? ' pull-up' : '',\n            $size = size ? 'avatar-' + size + '' : '',\n            member = members == undefined ? ' ' : members.split(',');\n          return images == undefined ? ' ' : images.split(',').map(function (img, index, arr) {\n            var $margin = margin && index !== arr.length - 1 ? ' me-' + margin + '' : '';\n            return \"<div class='avatar \" + $size + $margin + \"'\" + \"data-bs-toggle='tooltip' data-bs-placement='top'\" + \"title='\" + member[index] + \"'\" + '>' + \"<img src='\" + assetsPath + 'img/avatars/' + img + \"' alt='Avatar' class='rounded-circle \" + $transition + \"'>\" + '</div>';\n          }).join(' ');\n        };\n        renderHeader = function _renderHeader(color, text) {\n          return \"<div class='d-flex justify-content-between flex-wrap align-items-center mb-2 pb-1'>\" + \"<div class='item-badges'> \" + \"<div class='badge rounded-pill bg-label-\" + color + \"'> \" + text + '</div>' + '</div>' + renderDropdown() + '</div>';\n        };\n        renderDropdown = function _renderDropdown() {\n          return \"<div class='dropdown kanban-tasks-item-dropdown'>\" + \"<i class='dropdown-toggle bx bx-dots-vertical-rounded' id='kanban-tasks-item-dropdown' data-bs-toggle='dropdown' aria-haspopup='true' aria-expanded='false'></i>\" + \"<div class='dropdown-menu dropdown-menu-end' aria-labelledby='kanban-tasks-item-dropdown'>\" + \"<a class='dropdown-item' href='javascript:void(0)'>Copy task link</a>\" + \"<a class='dropdown-item' href='javascript:void(0)'>Duplicate task</a>\" + \"<a class='dropdown-item delete-task' href='javascript:void(0)'>Delete</a>\" + '</div>' + '</div>';\n        };\n        renderBoardDropdown = function _renderBoardDropdown() {\n          return \"<div class='dropdown'>\" + \"<i class='dropdown-toggle bx bx-dots-vertical-rounded cursor-pointer fs-4' id='board-dropdown' data-bs-toggle='dropdown' aria-haspopup='true' aria-expanded='false'></i>\" + \"<div class='dropdown-menu dropdown-menu-end' aria-labelledby='board-dropdown'>\" + \"<a class='dropdown-item delete-board' href='javascript:void(0)'> <i class='bx bx-trash bx-xs'></i> <span class='align-middle'>Delete</span></a>\" + \"<a class='dropdown-item' href='javascript:void(0)'><i class='bx bx-rename bx-xs'></i> <span class='align-middle'>Rename</span></a>\" + \"<a class='dropdown-item' href='javascript:void(0)'><i class='bx bx-archive bx-xs'></i> <span class='align-middle'>Archive</span></a>\" + '</div>' + '</div>';\n        };\n        kanbanSidebar = document.querySelector('.kanban-update-item-sidebar'), kanbanWrapper = document.querySelector('.kanban-wrapper'), commentEditor = document.querySelector('.comment-editor'), kanbanAddNewBoard = document.querySelector('.kanban-add-new-board'), kanbanAddNewInput = [].slice.call(document.querySelectorAll('.kanban-add-board-input')), kanbanAddBoardBtn = document.querySelector('.kanban-add-board-btn'), datePicker = document.querySelector('#due-date'), select2 = $('.select2'), assetsPath = document.querySelector('html').getAttribute('data-assets-path'); // Init kanban Offcanvas\n        kanbanOffcanvas = new bootstrap.Offcanvas(kanbanSidebar); // Get kanban data\n        _context.next = 9;\n        return fetch(assetsPath + 'json/kanban.json');\n      case 9:\n        kanbanResponse = _context.sent;\n        if (!kanbanResponse.ok) {\n          console.error('error', kanbanResponse);\n        }\n        _context.next = 13;\n        return kanbanResponse.json();\n      case 13:\n        boards = _context.sent;\n        // datepicker init\n        if (datePicker) {\n          datePicker.flatpickr({\n            monthSelectorType: 'static',\n            altInput: true,\n            altFormat: 'j F, Y',\n            dateFormat: 'Y-m-d'\n          });\n        }\n\n        //! TODO: Update Event label and guest code to JS once select removes jQuery dependency\n        // select2\n        if (select2.length) {\n          renderLabels = function renderLabels(option) {\n            if (!option.id) {\n              return option.text;\n            }\n            var $badge = \"<div class='badge \" + $(option.element).data('color') + \" rounded-pill'> \" + option.text + '</div>';\n            return $badge;\n          };\n          select2.each(function () {\n            var $this = $(this);\n            $this.wrap(\"<div class='position-relative'></div>\").select2({\n              placeholder: 'Select Label',\n              dropdownParent: $this.parent(),\n              templateResult: renderLabels,\n              templateSelection: renderLabels,\n              escapeMarkup: function escapeMarkup(es) {\n                return es;\n              }\n            });\n          });\n        }\n\n        // Comment editor\n        if (commentEditor) {\n          new Quill(commentEditor, {\n            modules: {\n              toolbar: '.comment-toolbar'\n            },\n            placeholder: 'Write a Comment... ',\n            theme: 'snow'\n          });\n        }\n\n        // Render board dropdown\n\n        // Render item dropdown\n\n        // Render header\n\n        // Render avatar\n\n        // Render footer\n        // Init kanban\n        kanban = new jKanban({\n          element: '.kanban-wrapper',\n          gutter: '15px',\n          widthBoard: '250px',\n          dragItems: true,\n          boards: boards,\n          dragBoards: true,\n          addItemButton: true,\n          buttonContent: '+ Add Item',\n          itemAddOptions: {\n            enabled: true,\n            // add a button to board for easy item creation\n            content: '+ Add New Item',\n            // text or html content of the board button\n            class: 'kanban-title-button btn btn-default btn-xs',\n            // default class of the button\n            footer: false // position the button on footer\n          },\n          click: function click(el) {\n            var element = el;\n            var title = element.getAttribute('data-eid') ? element.querySelector('.kanban-text').textContent : element.textContent,\n              date = element.getAttribute('data-due-date'),\n              dateObj = new Date(),\n              year = dateObj.getFullYear(),\n              dateToUse = date ? date + ', ' + year : dateObj.getDate() + ' ' + dateObj.toLocaleString('en', {\n                month: 'long'\n              }) + ', ' + year,\n              label = element.getAttribute('data-badge-text'),\n              avatars = element.getAttribute('data-assigned');\n\n            // Show kanban offcanvas\n            kanbanOffcanvas.show();\n\n            // To get data on sidebar\n            kanbanSidebar.querySelector('#title').value = title;\n            kanbanSidebar.querySelector('#due-date').nextSibling.value = dateToUse;\n\n            // ! Using jQuery method to get sidebar due to select2 dependency\n            $('.kanban-update-item-sidebar').find(select2).val(label).trigger('change');\n\n            // Remove & Update assigned\n            kanbanSidebar.querySelector('.assigned').innerHTML = '';\n            kanbanSidebar.querySelector('.assigned').insertAdjacentHTML('afterbegin', renderAvatar(avatars, false, 'sm', '0', el.getAttribute('data-members')) + \"<div class='avatar avatar-sm'>\" + \"<span class='avatar-initial rounded-circle bg-label-secondary'><i class='bx bx-plus'></i></span>\" + '</div>');\n          },\n          buttonClick: function buttonClick(el, boardId) {\n            var addNew = document.createElement('form');\n            addNew.setAttribute('class', 'new-item-form');\n            addNew.innerHTML = '<div class=\"mb-3\">' + '<textarea class=\"form-control add-new-item\" rows=\"2\" placeholder=\"Add Content\" autofocus required></textarea>' + '</div>' + '<div class=\"mb-3\">' + '<button type=\"submit\" class=\"btn btn-primary btn-sm me-2\">Add</button>' + '<button type=\"button\" class=\"btn btn-label-secondary btn-sm cancel-add-item\">Cancel</button>' + '</div>';\n            kanban.addForm(boardId, addNew);\n            addNew.addEventListener('submit', function (e) {\n              e.preventDefault();\n              var currentBoard = [].slice.call(document.querySelectorAll('.kanban-board[data-id=' + boardId + '] .kanban-item'));\n              kanban.addElement(boardId, {\n                title: \"<span class='kanban-text'>\" + e.target[0].value + '</span>',\n                id: boardId + '-' + currentBoard.length + 1\n              });\n\n              // add dropdown in new boards\n              var kanbanText = [].slice.call(document.querySelectorAll('.kanban-board[data-id=' + boardId + '] .kanban-text'));\n              kanbanText.forEach(function (e) {\n                e.insertAdjacentHTML('beforebegin', renderDropdown());\n              });\n\n              // prevent sidebar to open onclick dropdown buttons of new tasks\n              var newTaskDropdown = [].slice.call(document.querySelectorAll('.kanban-item .kanban-tasks-item-dropdown'));\n              if (newTaskDropdown) {\n                newTaskDropdown.forEach(function (e) {\n                  e.addEventListener('click', function (el) {\n                    el.stopPropagation();\n                  });\n                });\n              }\n\n              // delete tasks for new boards\n              var deleteTask = [].slice.call(document.querySelectorAll('.kanban-board[data-id=' + boardId + '] .delete-task'));\n              deleteTask.forEach(function (e) {\n                e.addEventListener('click', function () {\n                  var id = this.closest('.kanban-item').getAttribute('data-eid');\n                  kanban.removeElement(id);\n                });\n              });\n              addNew.remove();\n            });\n\n            // Remove form on clicking cancel button\n            addNew.querySelector('.cancel-add-item').addEventListener('click', function (e) {\n              addNew.remove();\n            });\n          }\n        }); // Kanban Wrapper scrollbar\n        if (kanbanWrapper) {\n          new PerfectScrollbar(kanbanWrapper);\n        }\n        kanbanContainer = document.querySelector('.kanban-container'), kanbanTitleBoard = [].slice.call(document.querySelectorAll('.kanban-title-board')), kanbanItem = [].slice.call(document.querySelectorAll('.kanban-item')); // Render custom items\n        if (kanbanItem) {\n          kanbanItem.forEach(function (el) {\n            var element = \"<span class='kanban-text'>\" + el.textContent + '</span>';\n            var img = '';\n            if (el.getAttribute('data-image') !== null) {\n              img = \"<img class='img-fluid rounded-3 mb-2' src='\" + assetsPath + 'img/elements/' + el.getAttribute('data-image') + \"'>\";\n            }\n            el.textContent = '';\n            if (el.getAttribute('data-badge') !== undefined && el.getAttribute('data-badge-text') !== undefined) {\n              el.insertAdjacentHTML('afterbegin', renderHeader(el.getAttribute('data-badge'), el.getAttribute('data-badge-text')) + img + element);\n            }\n            if (el.getAttribute('data-comments') !== undefined || el.getAttribute('data-due-date') !== undefined || el.getAttribute('data-assigned') !== undefined) {\n              el.insertAdjacentHTML('beforeend', renderFooter(el.getAttribute('data-attachments'), el.getAttribute('data-comments'), el.getAttribute('data-assigned'), el.getAttribute('data-members')));\n            }\n          });\n        }\n\n        // To initialize tooltips for rendered items\n        tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n        tooltipTriggerList.map(function (tooltipTriggerEl) {\n          return new bootstrap.Tooltip(tooltipTriggerEl);\n        });\n\n        // prevent sidebar to open onclick dropdown buttons of tasks\n        tasksItemDropdown = [].slice.call(document.querySelectorAll('.kanban-tasks-item-dropdown'));\n        if (tasksItemDropdown) {\n          tasksItemDropdown.forEach(function (e) {\n            e.addEventListener('click', function (el) {\n              el.stopPropagation();\n            });\n          });\n        }\n\n        // Toggle add new input and actions add-new-btn\n        if (kanbanAddBoardBtn) {\n          kanbanAddBoardBtn.addEventListener('click', function () {\n            kanbanAddNewInput.forEach(function (el) {\n              el.value = '';\n              el.classList.toggle('d-none');\n            });\n          });\n        }\n\n        // Render add new inline with boards\n        if (kanbanContainer) {\n          kanbanContainer.appendChild(kanbanAddNewBoard);\n        }\n\n        // Makes kanban title editable for rendered boards\n        if (kanbanTitleBoard) {\n          kanbanTitleBoard.forEach(function (elem) {\n            elem.addEventListener('mouseenter', function () {\n              this.contentEditable = 'true';\n            });\n\n            // Appends delete icon with title\n            elem.insertAdjacentHTML('afterend', renderBoardDropdown());\n          });\n        }\n\n        // To delete Board for rendered boards\n        deleteBoards = [].slice.call(document.querySelectorAll('.delete-board'));\n        if (deleteBoards) {\n          deleteBoards.forEach(function (elem) {\n            elem.addEventListener('click', function () {\n              var id = this.closest('.kanban-board').getAttribute('data-id');\n              kanban.removeBoard(id);\n            });\n          });\n        }\n\n        // Delete task for rendered boards\n        deleteTask = [].slice.call(document.querySelectorAll('.delete-task'));\n        if (deleteTask) {\n          deleteTask.forEach(function (e) {\n            e.addEventListener('click', function () {\n              var id = this.closest('.kanban-item').getAttribute('data-eid');\n              kanban.removeElement(id);\n            });\n          });\n        }\n\n        // Cancel btn add new input\n        cancelAddNew = document.querySelector('.kanban-add-board-cancel-btn');\n        if (cancelAddNew) {\n          cancelAddNew.addEventListener('click', function () {\n            kanbanAddNewInput.forEach(function (el) {\n              el.classList.toggle('d-none');\n            });\n          });\n        }\n\n        // Add new board\n        if (kanbanAddNewBoard) {\n          kanbanAddNewBoard.addEventListener('submit', function (e) {\n            e.preventDefault();\n            var thisEle = this,\n              value = thisEle.querySelector('.form-control').value,\n              id = value.replace(/\\s+/g, '-').toLowerCase();\n            kanban.addBoards([{\n              id: id,\n              title: value\n            }]);\n\n            // Adds delete board option to new board, delete new boards & updates data-order\n            var kanbanBoardLastChild = document.querySelectorAll('.kanban-board:last-child')[0];\n            if (kanbanBoardLastChild) {\n              var header = kanbanBoardLastChild.querySelector('.kanban-title-board');\n              header.insertAdjacentHTML('afterend', renderBoardDropdown());\n\n              // To make newly added boards title editable\n              kanbanBoardLastChild.querySelector('.kanban-title-board').addEventListener('mouseenter', function () {\n                this.contentEditable = 'true';\n              });\n            }\n\n            // Add delete event to delete newly added boards\n            var deleteNewBoards = kanbanBoardLastChild.querySelector('.delete-board');\n            if (deleteNewBoards) {\n              deleteNewBoards.addEventListener('click', function () {\n                var id = this.closest('.kanban-board').getAttribute('data-id');\n                kanban.removeBoard(id);\n              });\n            }\n\n            // Remove current append new add new form\n            if (kanbanAddNewInput) {\n              kanbanAddNewInput.forEach(function (el) {\n                el.classList.add('d-none');\n              });\n            }\n\n            // To place inline add new btn after clicking add btn\n            if (kanbanContainer) {\n              kanbanContainer.appendChild(kanbanAddNewBoard);\n            }\n          });\n        }\n\n        // Clear comment editor on close\n        kanbanSidebar.addEventListener('hidden.bs.offcanvas', function () {\n          kanbanSidebar.querySelector('.ql-editor').firstElementChild.innerHTML = '';\n        });\n\n        // Re-init tooltip when offcanvas opens(Bootstrap bug)\n        if (kanbanSidebar) {\n          kanbanSidebar.addEventListener('shown.bs.offcanvas', function () {\n            var tooltipTriggerList = [].slice.call(kanbanSidebar.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n            tooltipTriggerList.map(function (tooltipTriggerEl) {\n              return new bootstrap.Tooltip(tooltipTriggerEl);\n            });\n          });\n        }\n      case 37:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _callee);\n}))();\n\n//# sourceURL=webpack://Sneat/./static/js/app-kanban.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/app-kanban.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});