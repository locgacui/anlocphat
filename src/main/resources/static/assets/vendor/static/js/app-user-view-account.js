/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/app-user-view-account.js":
/*!********************************************!*\
  !*** ./static/js/app-user-view-account.js ***!
  \********************************************/
/***/ (function() {

eval("/**\n * App User View - Account (jquery)\n */\n\n$(function () {\n  'use strict';\n\n  // Variable declaration for table\n  var dt_project_table = $('.datatable-project'),\n    dt_invoice_table = $('.datatable-invoice');\n\n  // Project datatable\n  // --------------------------------------------------------------------\n  if (dt_project_table.length) {\n    var dt_project = dt_project_table.DataTable({\n      ajax: assetsPath + 'json/projects-list.json',\n      // JSON file to add data\n      columns: [\n      // columns according to JSON\n      {\n        data: 'hours'\n      }, {\n        data: 'hours'\n      }, {\n        data: 'project_name'\n      }, {\n        data: 'total_task'\n      }, {\n        data: 'progress'\n      }, {\n        data: 'hours'\n      }],\n      columnDefs: [{\n        // For Responsive\n        className: 'control',\n        searchable: false,\n        orderable: false,\n        responsivePriority: 2,\n        targets: 0,\n        render: function render(data, type, full, meta) {\n          return '';\n        }\n      }, {\n        // For Checkboxes\n        targets: 1,\n        orderable: false,\n        checkboxes: {\n          selectAllRender: '<input type=\"checkbox\" class=\"form-check-input\">'\n        },\n        render: function render() {\n          return '<input type=\"checkbox\" class=\"dt-checkboxes form-check-input\" >';\n        },\n        searchable: false\n      }, {\n        // User full name and email\n        targets: 2,\n        responsivePriority: 1,\n        render: function render(data, type, full, meta) {\n          var $name = full['project_name'],\n            $framework = full['framework'],\n            $image = full['project_image'];\n          if ($image) {\n            // For Avatar image\n            var $output = '<img src=\"' + assetsPath + 'img/icons/brands/' + $image + '\" alt=\"Project Image\" class=\"rounded-circle\">';\n          } else {\n            // For Avatar badge\n            var stateNum = Math.floor(Math.random() * 6) + 1;\n            var states = ['success', 'danger', 'warning', 'info', 'dark', 'primary', 'secondary'];\n            var $state = states[stateNum],\n              $name = full['full_name'],\n              $initials = $name.match(/\\b\\w/g) || [];\n            $initials = (($initials.shift() || '') + ($initials.pop() || '')).toUpperCase();\n            $output = '<span class=\"avatar-initial rounded-circle bg-label-' + $state + '\">' + $initials + '</span>';\n          }\n          // Creates full output for row\n          var $row_output = '<div class=\"d-flex justify-content-left align-items-center\">' + '<div class=\"avatar-wrapper\">' + '<div class=\"avatar avatar-sm me-3\">' + $output + '</div>' + '</div>' + '<div class=\"d-flex flex-column\">' + '<span class=\"text-truncate fw-medium\">' + $name + '</span>' + '<small class=\"text-muted\">' + $framework + '</small>' + '</div>' + '</div>';\n          return $row_output;\n        }\n      }, {\n        targets: 3,\n        orderable: false\n      }, {\n        // Label\n        targets: 4,\n        responsivePriority: 3,\n        render: function render(data, type, full, meta) {\n          var $progress = full['progress'] + '%',\n            $color;\n          switch (true) {\n            case full['progress'] < 25:\n              $color = 'bg-danger';\n              break;\n            case full['progress'] < 50:\n              $color = 'bg-warning';\n              break;\n            case full['progress'] < 75:\n              $color = 'bg-info';\n              break;\n            case full['progress'] <= 100:\n              $color = 'bg-success';\n              break;\n          }\n          return '<div class=\"d-flex flex-column\"><small class=\"mb-1\">' + $progress + '</small>' + '<div class=\"progress w-100 me-3\" style=\"height: 6px;\">' + '<div class=\"progress-bar ' + $color + '\" style=\"width: ' + $progress + '\" aria-valuenow=\"' + $progress + '\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>' + '</div>' + '</div>';\n        }\n      }, {\n        targets: 5,\n        orderable: false\n      }],\n      order: [[2, 'desc']],\n      dom: '<\"d-flex justify-content-between align-items-center flex-column flex-sm-row mx-4 row\"' + '<\"col-sm-4 col-12 d-flex align-items-center justify-content-sm-start justify-content-center\"l>' + '<\"col-sm-8 col-12 d-flex align-items-center justify-content-sm-end justify-content-center\"f>' + '>t' + '<\"d-flex justify-content-between mx-4 row\"' + '<\"col-sm-12 col-md-6\"i>' + '<\"col-sm-12 col-md-6\"p>' + '>',\n      displayLength: 7,\n      lengthMenu: [7, 10, 25, 50, 75, 100],\n      language: {\n        sLengthMenu: 'Show _MENU_',\n        // search: '',\n        searchPlaceholder: 'Search Project'\n      },\n      // For responsive popup\n      responsive: {\n        details: {\n          display: $.fn.dataTable.Responsive.display.modal({\n            header: function header(row) {\n              var data = row.data();\n              return 'Details of ' + data['full_name'];\n            }\n          }),\n          type: 'column',\n          renderer: function renderer(api, rowIdx, columns) {\n            var data = $.map(columns, function (col, i) {\n              return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)\n              ? '<tr data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>' : '';\n            }).join('');\n            return data ? $('<table class=\"table\"/><tbody />').append(data) : false;\n          }\n        }\n      }\n    });\n  }\n\n  // Invoice datatable\n  // --------------------------------------------------------------------\n  if (dt_invoice_table.length) {\n    var dt_invoice = dt_invoice_table.DataTable({\n      ajax: assetsPath + 'json/invoice-list.json',\n      // JSON file to add data\n      columns: [\n      // columns according to JSON\n      {\n        data: ''\n      }, {\n        data: 'invoice_id'\n      }, {\n        data: 'invoice_status'\n      }, {\n        data: 'total'\n      }, {\n        data: 'issued_date'\n      }, {\n        data: 'action'\n      }],\n      columnDefs: [{\n        // For Responsive\n        className: 'control',\n        responsivePriority: 2,\n        targets: 0,\n        render: function render(data, type, full, meta) {\n          return '';\n        }\n      }, {\n        // Invoice ID\n        targets: 1,\n        render: function render(data, type, full, meta) {\n          var $invoice_id = full['invoice_id'];\n          // Creates full output for row\n          var $row_output = '<a href=\"app-invoice-preview.html\"><span class=\"fw-medium\">#' + $invoice_id + '</span></a>';\n          return $row_output;\n        }\n      }, {\n        // Invoice status\n        targets: 2,\n        render: function render(data, type, full, meta) {\n          var $invoice_status = full['invoice_status'],\n            $due_date = full['due_date'],\n            $balance = full['balance'];\n          var roleBadgeObj = {\n            Sent: '<span class=\"badge badge-center rounded-pill bg-label-secondary w-px-30 h-px-30 \"><i class=\"bx bx-mail-send bx-xs\"></i></span>',\n            Draft: '<span class=\"badge badge-center rounded-pill bg-label-primary w-px-30 h-px-30\"><i class=\"bx bxs-save bx-xs\"></i></span>',\n            'Past Due': '<span class=\"badge badge-center rounded-pill bg-label-danger w-px-30 h-px-30\"><i class=\"bx bx-info-circle bx-xs\"></i></span>',\n            'Partial Payment': '<span class=\"badge badge-center rounded-pill bg-label-success w-px-30 h-px-30\"><i class=\"bx bx-adjust bx-xs\"></i></span>',\n            Paid: '<span class=\"badge badge-center rounded-pill bg-label-warning w-px-30 h-px-30\"><i class=\"bx bx-pie-chart-alt bx-xs\"></i></span>',\n            Downloaded: '<span class=\"badge badge-center rounded-pill bg-label-info w-px-30 h-px-30\"><i class=\"bx bx-down-arrow-circle bx-xs\"></i></span>'\n          };\n          return \"<span data-bs-toggle='tooltip' data-bs-html='true' title='<span>\" + $invoice_status + '<br> <span class=\"fw-medium\">Balance:</span> ' + $balance + '<br> <span class=\"fw-medium\">Due Date:</span> ' + $due_date + \"</span>'>\" + roleBadgeObj[$invoice_status] + '</span>';\n        }\n      }, {\n        // Total Invoice Amount\n        targets: 3,\n        render: function render(data, type, full, meta) {\n          var $total = full['total'];\n          return '$' + $total;\n        }\n      }, {\n        // Actions\n        targets: -1,\n        title: 'Actions',\n        orderable: false,\n        render: function render(data, type, full, meta) {\n          return '<div class=\"d-flex align-items-center\">' + '<a href=\"javascript:;\" class=\"text-body\" data-bs-toggle=\"tooltip\" title=\"Send Mail\"><i class=\"bx bx-paper-plane mx-1\"></i></a>' + '<a href=\"app-invoice-preview.html\" class=\"text-body\" data-bs-toggle=\"tooltip\" title=\"Preview\"><i class=\"bx bx-show-alt mx-1\"></i></a>' + '<a href=\"javascript:;\" class=\"text-body\" data-bs-toggle=\"tooltip\" title=\"Download\"><i class=\"bx bx-download mx-1\"></i></a>' + '</div>';\n        }\n      }],\n      order: [[1, 'desc']],\n      dom: '<\"row mx-4\"' + '<\"col-sm-6 col-12 d-flex align-items-center justify-content-center justify-content-sm-start mb-3 mb-md-0\"l>' + '<\"col-sm-6 col-12 d-flex align-items-center justify-content-center justify-content-sm-end\"B>' + '>t' + '<\"row mx-4\"' + '<\"col-md-12 col-lg-6 text-center text-lg-start pb-md-2 pb-lg-0\"i>' + '<\"col-md-12 col-lg-6 d-flex justify-content-center justify-content-lg-end\"p>' + '>',\n      language: {\n        sLengthMenu: '_MENU_',\n        search: '',\n        searchPlaceholder: 'Search Invoice'\n      },\n      // Buttons with Dropdown\n      buttons: [{\n        extend: 'collection',\n        className: 'btn btn-label-secondary dropdown-toggle float-sm-end mb-3 mb-sm-0',\n        text: '<i class=\"bx bx-upload me-2\"></i>Export',\n        buttons: [{\n          extend: 'print',\n          text: '<i class=\"bx bx-printer me-2\" ></i>Print',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4]\n          }\n        }, {\n          extend: 'csv',\n          text: '<i class=\"bx bx-file me-2\" ></i>Csv',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4]\n          }\n        }, {\n          extend: 'excel',\n          text: '<i class=\"bx bxs-file-export me-2\"></i>Excel',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4]\n          }\n        }, {\n          extend: 'pdf',\n          text: '<i class=\"bx bxs-file-pdf me-2\"></i>Pdf',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4]\n          }\n        }, {\n          extend: 'copy',\n          text: '<i class=\"bx bx-copy me-2\" ></i>Copy',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4]\n          }\n        }]\n      }],\n      // For responsive popup\n      responsive: {\n        details: {\n          display: $.fn.dataTable.Responsive.display.modal({\n            header: function header(row) {\n              var data = row.data();\n              return 'Details of ' + data['full_name'];\n            }\n          }),\n          type: 'column',\n          renderer: function renderer(api, rowIdx, columns) {\n            var data = $.map(columns, function (col, i) {\n              return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)\n              ? '<tr data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>' : '';\n            }).join('');\n            return data ? $('<table class=\"table\"/><tbody />').append(data) : false;\n          }\n        }\n      }\n    });\n    // To remove default btn-secondary in export buttons\n    $('.dt-buttons > .btn-group > button').removeClass('btn-secondary');\n  }\n  // On each datatable draw, initialize tooltip\n  dt_invoice_table.on('draw.dt', function () {\n    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n      return new bootstrap.Tooltip(tooltipTriggerEl, {\n        boundary: document.body\n      });\n    });\n  });\n\n  // Filter form control to default size\n  // ? setTimeout used for multilingual table initialization\n  setTimeout(function () {\n    $('.dataTables_filter .form-control').removeClass('form-control-sm');\n    $('.dataTables_length .form-select').removeClass('form-select-sm');\n  }, 300);\n});\n\n//# sourceURL=webpack://Sneat/./static/js/app-user-view-account.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/app-user-view-account.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});