/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/app-ecommerce-product-list.js":
/*!*************************************************!*\
  !*** ./static/js/app-ecommerce-product-list.js ***!
  \*************************************************/
/***/ (function() {

eval("/**\n * app-ecommerce-product-list\n */\n\n\n\n// Datatable (jquery)\n$(function () {\n  var borderColor, bodyBg, headingColor;\n  if (isDarkStyle) {\n    borderColor = config.colors_dark.borderColor;\n    bodyBg = config.colors_dark.bodyBg;\n    headingColor = config.colors_dark.headingColor;\n  } else {\n    borderColor = config.colors.borderColor;\n    bodyBg = config.colors.bodyBg;\n    headingColor = config.colors.headingColor;\n  }\n\n  // Variable declaration for table\n  var dt_product_table = $('.datatables-products'),\n    productAdd = 'app-ecommerce-product-add.html',\n    statusObj = {\n      1: {\n        title: 'Scheduled',\n        class: 'bg-label-warning'\n      },\n      2: {\n        title: 'Publish',\n        class: 'bg-label-success'\n      },\n      3: {\n        title: 'Inactive',\n        class: 'bg-label-danger'\n      }\n    },\n    categoryObj = {\n      0: {\n        title: 'Household'\n      },\n      1: {\n        title: 'Office'\n      },\n      2: {\n        title: 'Electronics'\n      },\n      3: {\n        title: 'Shoes'\n      },\n      4: {\n        title: 'Accessories'\n      },\n      5: {\n        title: 'Game'\n      }\n    },\n    stockObj = {\n      0: {\n        title: 'Out_of_Stock'\n      },\n      1: {\n        title: 'In_Stock'\n      }\n    },\n    stockFilterValObj = {\n      0: {\n        title: 'Out of Stock'\n      },\n      1: {\n        title: 'In Stock'\n      }\n    };\n\n  // E-commerce Products datatable\n\n  if (dt_product_table.length) {\n    var dt_products = dt_product_table.DataTable({\n      ajax: assetsPath + 'json/ecommerce-product-list.json',\n      // JSON file to add data\n      columns: [\n      // columns according to JSON\n      {\n        data: 'id'\n      }, {\n        data: 'id'\n      }, {\n        data: 'product_name'\n      }, {\n        data: 'category'\n      }, {\n        data: 'stock'\n      }, {\n        data: 'sku'\n      }, {\n        data: 'price'\n      }, {\n        data: 'quantity'\n      }, {\n        data: 'status'\n      }, {\n        data: ''\n      }],\n      columnDefs: [{\n        // For Responsive\n        className: 'control',\n        searchable: false,\n        orderable: false,\n        responsivePriority: 2,\n        targets: 0,\n        render: function render(data, type, full, meta) {\n          return '';\n        }\n      }, {\n        // For Checkboxes\n        targets: 1,\n        orderable: false,\n        checkboxes: {\n          selectAllRender: '<input type=\"checkbox\" class=\"form-check-input\">'\n        },\n        render: function render() {\n          return '<input type=\"checkbox\" class=\"dt-checkboxes form-check-input\" >';\n        },\n        searchable: false\n      }, {\n        // Product name and product_brand\n        targets: 2,\n        responsivePriority: 1,\n        render: function render(data, type, full, meta) {\n          var $name = full['product_name'],\n            $id = full['id'],\n            $product_brand = full['product_brand'],\n            $image = full['image'];\n          if ($image) {\n            // For Product image\n\n            var $output = '<img src=\"' + assetsPath + 'img/ecommerce-images/' + $image + '\" alt=\"Product-' + $id + '\" class=\"rounded-2\">';\n          } else {\n            // For Product badge\n            var stateNum = Math.floor(Math.random() * 6);\n            var states = ['success', 'danger', 'warning', 'info', 'dark', 'primary', 'secondary'];\n            var $state = states[stateNum],\n              $name = full['product_brand'],\n              $initials = $name.match(/\\b\\w/g) || [];\n            $initials = (($initials.shift() || '') + ($initials.pop() || '')).toUpperCase();\n            $output = '<span class=\"avatar-initial rounded-2 bg-label-' + $state + '\">' + $initials + '</span>';\n          }\n          // Creates full output for Product name and product_brand\n          var $row_output = '<div class=\"d-flex justify-content-start align-items-center product-name\">' + '<div class=\"avatar-wrapper\">' + '<div class=\"avatar avatar me-2 rounded-2 bg-label-secondary\">' + $output + '</div>' + '</div>' + '<div class=\"d-flex flex-column\">' + '<h6 class=\"text-body text-nowrap mb-0\">' + $name + '</h6>' + '<small class=\"text-muted text-truncate d-none d-sm-block\">' + $product_brand + '</small>' + '</div>' + '</div>';\n          return $row_output;\n        }\n      }, {\n        // Product Category\n\n        targets: 3,\n        responsivePriority: 5,\n        render: function render(data, type, full, meta) {\n          var $category = categoryObj[full['category']].title;\n          var categoryBadgeObj = {\n            Household: '<span class=\"avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-warning me-2\"><i class=\"bx bx-home-alt\"></i></span>',\n            Office: '<span class=\"avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-success me-2\"><i class=\"bx bx-briefcase\"></i></span>',\n            Electronics: '<span class=\"avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-primary me-2\"><i class=\"bx bx-mobile-alt\"></i></span>',\n            Shoes: '<span class=\"avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-info me-2\"><i class=\"bx bx-walk\"></i></span>',\n            Accessories: '<span class=\"avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-secondary me-2\"><i class=\"bx bxs-watch\"></i></span>',\n            Game: '<span class=\"avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-dark me-2\"><i class=\"bx bx-game\"></i></span>'\n          };\n          return \"<span class='text-truncate d-flex align-items-center'>\" + categoryBadgeObj[$category] + $category + '</span>';\n        }\n      }, {\n        // Stock\n        targets: 4,\n        orderable: false,\n        responsivePriority: 3,\n        render: function render(data, type, full, meta) {\n          var $stock = full['stock'];\n          var stockSwitchObj = {\n            Out_of_Stock: '<label class=\"switch switch-primary switch-sm\">' + '<input type=\"checkbox\" class=\"switch-input\" id=\"switch\">' + '<span class=\"switch-toggle-slider\">' + '<span class=\"switch-off\">' + '</span>' + '</span>' + '</label>',\n            In_Stock: '<label class=\"switch switch-primary switch-sm\">' + '<input type=\"checkbox\" class=\"switch-input\" checked=\"\">' + '<span class=\"switch-toggle-slider\">' + '<span class=\"switch-on\">' + '</span>' + '</span>' + '</label>'\n          };\n          return \"<span class='text-truncate'>\" + stockSwitchObj[stockObj[$stock].title] + '<span class=\"d-none\">' + stockObj[$stock].title + '</span>' + '</span>';\n        }\n      }, {\n        // Sku\n        targets: 5,\n        render: function render(data, type, full, meta) {\n          var $sku = full['sku'];\n          return '<span>' + $sku + '</span>';\n        }\n      }, {\n        // price\n        targets: 6,\n        render: function render(data, type, full, meta) {\n          var $price = full['price'];\n          return '<span>' + $price + '</span>';\n        }\n      }, {\n        // qty\n        targets: 7,\n        responsivePriority: 4,\n        render: function render(data, type, full, meta) {\n          var $qty = full['qty'];\n          return '<span>' + $qty + '</span>';\n        }\n      }, {\n        // Status\n        targets: -2,\n        render: function render(data, type, full, meta) {\n          var $status = full['status'];\n          return '<span class=\"badge ' + statusObj[$status].class + '\" text-capitalized>' + statusObj[$status].title + '</span>';\n        }\n      }, {\n        // Actions\n        targets: -1,\n        title: 'Actions',\n        searchable: false,\n        orderable: false,\n        render: function render(data, type, full, meta) {\n          return '<div class=\"d-inline-block text-nowrap\">' + '<button class=\"btn btn-sm btn-icon\"><i class=\"bx bx-edit\"></i></button>' + '<button class=\"btn btn-sm btn-icon dropdown-toggle hide-arrow\" data-bs-toggle=\"dropdown\"><i class=\"bx bx-dots-vertical-rounded me-2\"></i></button>' + '<div class=\"dropdown-menu dropdown-menu-end m-0\">' + '<a href=\"javascript:0;\" class=\"dropdown-item\">View</a>' + '<a href=\"javascript:0;\" class=\"dropdown-item\">Suspend</a>' + '</div>' + '</div>';\n        }\n      }],\n      order: [2, 'asc'],\n      //set any columns order asc/desc\n      dom: '<\"card-header d-flex border-top rounded-0 flex-wrap py-md-0\"' + '<\"me-5 ms-n2 pe-5\"f>' + '<\"d-flex justify-content-start justify-content-md-end align-items-baseline\"<\"dt-action-buttons d-flex align-items-start align-items-md-center justify-content-sm-center mb-3 mb-sm-0\"lB>>' + '>t' + '<\"row mx-2\"' + '<\"col-sm-12 col-md-6\"i>' + '<\"col-sm-12 col-md-6\"p>' + '>',\n      lengthMenu: [7, 10, 20, 50, 70, 100],\n      //for length of menu\n      language: {\n        sLengthMenu: '_MENU_',\n        search: '',\n        searchPlaceholder: 'Search Product',\n        info: 'Displaying _START_ to _END_ of _TOTAL_ entries'\n      },\n      // Buttons with Dropdown\n      buttons: [{\n        extend: 'collection',\n        className: 'btn btn-label-secondary dropdown-toggle me-3',\n        text: '<i class=\"bx bx-export me-1\"></i>Export',\n        buttons: [{\n          extend: 'print',\n          text: '<i class=\"bx bx-printer me-2\" ></i>Print',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4, 5, 6, 7],\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('product-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          },\n          customize: function customize(win) {\n            // Customize print view for dark\n            $(win.document.body).css('color', headingColor).css('border-color', borderColor).css('background-color', bodyBg);\n            $(win.document.body).find('table').addClass('compact').css('color', 'inherit').css('border-color', 'inherit').css('background-color', 'inherit');\n          }\n        }, {\n          extend: 'csv',\n          text: '<i class=\"bx bx-file me-2\" ></i>Csv',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4, 5, 6, 7],\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('product-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }, {\n          extend: 'excel',\n          text: '<i class=\"bx bxs-file-export me-2\"></i>Excel',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4, 5, 6, 7],\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('product-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }, {\n          extend: 'pdf',\n          text: '<i class=\"bx bxs-file-pdf me-2\"></i>Pdf',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4, 5, 6, 7],\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('product-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }, {\n          extend: 'copy',\n          text: '<i class=\"bx bx-copy me-2\" ></i>Copy',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4, 5, 6, 7],\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('product-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }]\n      }, {\n        text: '<i class=\"bx bx-plus me-0 me-sm-1\"></i><span class=\"d-none d-sm-inline-block\">Add Product</span>',\n        className: 'add-new btn btn-primary',\n        action: function action() {\n          window.location.href = productAdd;\n        }\n      }],\n      // For responsive popup\n      responsive: {\n        details: {\n          display: $.fn.dataTable.Responsive.display.modal({\n            header: function header(row) {\n              var data = row.data();\n              return 'Details of ' + data['product_name'];\n            }\n          }),\n          type: 'column',\n          renderer: function renderer(api, rowIdx, columns) {\n            var data = $.map(columns, function (col, i) {\n              return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)\n              ? '<tr data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>' : '';\n            }).join('');\n            return data ? $('<table class=\"table\"/><tbody />').append(data) : false;\n          }\n        }\n      },\n      initComplete: function initComplete() {\n        // Adding status filter once table initialized\n        this.api().columns(-2).every(function () {\n          var column = this;\n          var select = $('<select id=\"ProductStatus\" class=\"form-select text-capitalize\"><option value=\"\">Status</option></select>').appendTo('.product_status').on('change', function () {\n            var val = $.fn.dataTable.util.escapeRegex($(this).val());\n            column.search(val ? '^' + val + '$' : '', true, false).draw();\n          });\n          column.data().unique().sort().each(function (d, j) {\n            select.append('<option value=\"' + statusObj[d].title + '\">' + statusObj[d].title + '</option>');\n          });\n        });\n        // Adding category filter once table initialized\n        this.api().columns(3).every(function () {\n          var column = this;\n          var select = $('<select id=\"ProductCategory\" class=\"form-select text-capitalize\"><option value=\"\">Category</option></select>').appendTo('.product_category').on('change', function () {\n            var val = $.fn.dataTable.util.escapeRegex($(this).val());\n            column.search(val ? '^' + val + '$' : '', true, false).draw();\n          });\n          column.data().unique().sort().each(function (d, j) {\n            select.append('<option value=\"' + categoryObj[d].title + '\">' + categoryObj[d].title + '</option>');\n          });\n        });\n        // Adding stock filter once table initialized\n        this.api().columns(4).every(function () {\n          var column = this;\n          var select = $('<select id=\"ProductStock\" class=\"form-select text-capitalize\"><option value=\"\"> Stock </option></select>').appendTo('.product_stock').on('change', function () {\n            var val = $.fn.dataTable.util.escapeRegex($(this).val());\n            column.search(val ? '^' + val + '$' : '', true, false).draw();\n          });\n          column.data().unique().sort().each(function (d, j) {\n            select.append('<option value=\"' + stockObj[d].title + '\">' + stockFilterValObj[d].title + '</option>');\n          });\n        });\n      }\n    });\n    $('.dataTables_length').addClass('mt-0 mt-md-3 me-3');\n    // To remove default btn-secondary in export buttons\n    $('.dt-buttons > .btn-group > button').removeClass('btn-secondary');\n    $('.dt-buttons').addClass('d-flex flex-wrap');\n  }\n\n  // Delete Record\n  $('.datatables-products tbody').on('click', '.delete-record', function () {\n    dt_products.row($(this).parents('tr')).remove().draw();\n  });\n\n  // Filter form control to default size\n  // ? setTimeout used for multilingual table initialization\n  setTimeout(function () {\n    $('.dataTables_filter .form-control').removeClass('form-control-sm');\n    $('.dataTables_length .form-select').removeClass('form-select-sm');\n  }, 300);\n});\n\n//# sourceURL=webpack://Sneat/./static/js/app-ecommerce-product-list.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/app-ecommerce-product-list.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});