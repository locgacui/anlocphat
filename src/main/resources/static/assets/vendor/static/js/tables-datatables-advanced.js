/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/tables-datatables-advanced.js":
/*!*************************************************!*\
  !*** ./static/js/tables-datatables-advanced.js ***!
  \*************************************************/
/***/ (function() {

eval("/**\n * DataTables Advanced (jquery)\n */\n\n\n\n$(function () {\n  var dt_ajax_table = $('.datatables-ajax'),\n    dt_filter_table = $('.dt-column-search'),\n    dt_adv_filter_table = $('.dt-advanced-search'),\n    dt_responsive_table = $('.dt-responsive'),\n    startDateEle = $('.start_date'),\n    endDateEle = $('.end_date');\n\n  // Advanced Search Functions Starts\n  // --------------------------------------------------------------------\n\n  // Datepicker for advanced filter\n  var rangePickr = $('.flatpickr-range'),\n    dateFormat = 'MM/DD/YYYY';\n  if (rangePickr.length) {\n    rangePickr.flatpickr({\n      mode: 'range',\n      dateFormat: 'm/d/Y',\n      orientation: isRtl ? 'auto right' : 'auto left',\n      locale: {\n        format: dateFormat\n      },\n      onClose: function onClose(selectedDates, dateStr, instance) {\n        var startDate = '',\n          endDate = new Date();\n        if (selectedDates[0] != undefined) {\n          startDate = moment(selectedDates[0]).format('MM/DD/YYYY');\n          startDateEle.val(startDate);\n        }\n        if (selectedDates[1] != undefined) {\n          endDate = moment(selectedDates[1]).format('MM/DD/YYYY');\n          endDateEle.val(endDate);\n        }\n        $(rangePickr).trigger('change').trigger('keyup');\n      }\n    });\n  }\n\n  // Filter column wise function\n  function filterColumn(i, val) {\n    if (i == 5) {\n      var startDate = startDateEle.val(),\n        endDate = endDateEle.val();\n      if (startDate !== '' && endDate !== '') {\n        $.fn.dataTableExt.afnFiltering.length = 0; // Reset datatable filter\n        dt_adv_filter_table.dataTable().fnDraw(); // Draw table after filter\n        filterByDate(i, startDate, endDate); // We call our filter function\n      }\n      dt_adv_filter_table.dataTable().fnDraw();\n    } else {\n      dt_adv_filter_table.DataTable().column(i).search(val, false, true).draw();\n    }\n  }\n\n  // Advance filter function\n  // We pass the column location, the start date, and the end date\n  $.fn.dataTableExt.afnFiltering.length = 0;\n  var filterByDate = function filterByDate(column, startDate, endDate) {\n    // Custom filter syntax requires pushing the new filter to the global filter array\n    $.fn.dataTableExt.afnFiltering.push(function (oSettings, aData, iDataIndex) {\n      var rowDate = normalizeDate(aData[column]),\n        start = normalizeDate(startDate),\n        end = normalizeDate(endDate);\n\n      // If our date from the row is between the start and end\n      if (start <= rowDate && rowDate <= end) {\n        return true;\n      } else if (rowDate >= start && end === '' && start !== '') {\n        return true;\n      } else if (rowDate <= end && start === '' && end !== '') {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  // converts date strings to a Date object, then normalized into a YYYYMMMDD format (ex: 20131220). Makes comparing dates easier. ex: 20131220 > 20121220\n  var normalizeDate = function normalizeDate(dateString) {\n    var date = new Date(dateString);\n    var normalized = date.getFullYear() + '' + ('0' + (date.getMonth() + 1)).slice(-2) + '' + ('0' + date.getDate()).slice(-2);\n    return normalized;\n  };\n  // Advanced Search Functions Ends\n\n  // Ajax Sourced Server-side\n  // --------------------------------------------------------------------\n\n  if (dt_ajax_table.length) {\n    var dt_ajax = dt_ajax_table.dataTable({\n      processing: true,\n      ajax: assetsPath + 'json/ajax.php',\n      dom: '<\"row\"<\"col-sm-12 col-md-6\"l><\"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end\"f>><\"table-responsive\"t><\"row\"<\"col-sm-12 col-md-6\"i><\"col-sm-12 col-md-6\"p>>'\n    });\n  }\n\n  // Column Search\n  // --------------------------------------------------------------------\n\n  if (dt_filter_table.length) {\n    // Setup - add a text input to each footer cell\n    $('.dt-column-search thead tr').clone(true).appendTo('.dt-column-search thead');\n    $('.dt-column-search thead tr:eq(1) th').each(function (i) {\n      var title = $(this).text();\n      var $input = $('<input type=\"text\" class=\"form-control\" placeholder=\"Search ' + title + '\" />');\n\n      // Add left and right border styles to the parent element\n      $(this).css('border-left', 'none');\n      if (i === $('.dt-column-search thead tr:eq(1) th').length - 1) {\n        $(this).css('border-right', 'none');\n      }\n      $(this).html($input);\n      $('input', this).on('keyup change', function () {\n        if (dt_filter.column(i).search() !== this.value) {\n          dt_filter.column(i).search(this.value).draw();\n        }\n      });\n    });\n    var dt_filter = dt_filter_table.DataTable({\n      ajax: assetsPath + 'json/table-datatable.json',\n      columns: [{\n        data: 'full_name'\n      }, {\n        data: 'email'\n      }, {\n        data: 'post'\n      }, {\n        data: 'city'\n      }, {\n        data: 'start_date'\n      }, {\n        data: 'salary'\n      }],\n      orderCellsTop: true,\n      dom: '<\"row\"<\"col-sm-12 col-md-6\"l><\"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end\"f>><\"table-responsive\"t><\"row\"<\"col-sm-12 col-md-6\"i><\"col-sm-12 col-md-6\"p>>'\n    });\n  }\n\n  // Advanced Search\n  // --------------------------------------------------------------------\n\n  // Advanced Filter table\n  if (dt_adv_filter_table.length) {\n    var dt_adv_filter = dt_adv_filter_table.DataTable({\n      dom: \"<'row'<'col-sm-12'tr>><'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6 dataTables_pager'p>>\",\n      ajax: assetsPath + 'json/table-datatable.json',\n      columns: [{\n        data: ''\n      }, {\n        data: 'full_name'\n      }, {\n        data: 'email'\n      }, {\n        data: 'post'\n      }, {\n        data: 'city'\n      }, {\n        data: 'start_date'\n      }, {\n        data: 'salary'\n      }],\n      columnDefs: [{\n        className: 'control',\n        orderable: false,\n        targets: 0,\n        render: function render(data, type, full, meta) {\n          return '';\n        }\n      }],\n      orderCellsTop: true,\n      responsive: {\n        details: {\n          display: $.fn.dataTable.Responsive.display.modal({\n            header: function header(row) {\n              var data = row.data();\n              return 'Details of ' + data['full_name'];\n            }\n          }),\n          type: 'column',\n          renderer: function renderer(api, rowIdx, columns) {\n            var data = $.map(columns, function (col, i) {\n              return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)\n              ? '<tr data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>' : '';\n            }).join('');\n            return data ? $('<table class=\"table\"/><tbody />').append(data) : false;\n          }\n        }\n      }\n    });\n  }\n\n  // on key up from input field\n  $('input.dt-input').on('keyup', function () {\n    filterColumn($(this).attr('data-column'), $(this).val());\n  });\n\n  // Responsive Table\n  // --------------------------------------------------------------------\n\n  if (dt_responsive_table.length) {\n    var dt_responsive = dt_responsive_table.DataTable({\n      ajax: assetsPath + 'json/table-datatable.json',\n      columns: [{\n        data: ''\n      }, {\n        data: 'full_name'\n      }, {\n        data: 'email'\n      }, {\n        data: 'post'\n      }, {\n        data: 'city'\n      }, {\n        data: 'start_date'\n      }, {\n        data: 'salary'\n      }, {\n        data: 'age'\n      }, {\n        data: 'experience'\n      }, {\n        data: 'status'\n      }],\n      columnDefs: [{\n        className: 'control',\n        orderable: false,\n        targets: 0,\n        searchable: false,\n        render: function render(data, type, full, meta) {\n          return '';\n        }\n      }, {\n        // Label\n        targets: -1,\n        render: function render(data, type, full, meta) {\n          var $status_number = full['status'];\n          var $status = {\n            1: {\n              title: 'Current',\n              class: 'bg-label-primary'\n            },\n            2: {\n              title: 'Professional',\n              class: ' bg-label-success'\n            },\n            3: {\n              title: 'Rejected',\n              class: ' bg-label-danger'\n            },\n            4: {\n              title: 'Resigned',\n              class: ' bg-label-warning'\n            },\n            5: {\n              title: 'Applied',\n              class: ' bg-label-info'\n            }\n          };\n          if (typeof $status[$status_number] === 'undefined') {\n            return data;\n          }\n          return '<span class=\"badge rounded-pill ' + $status[$status_number].class + '\">' + $status[$status_number].title + '</span>';\n        }\n      }],\n      // scrollX: true,\n      destroy: true,\n      dom: '<\"row\"<\"col-sm-12 col-md-6\"l><\"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end\"f>>t<\"row\"<\"col-sm-12 col-md-6\"i><\"col-sm-12 col-md-6\"p>>',\n      responsive: {\n        details: {\n          display: $.fn.dataTable.Responsive.display.modal({\n            header: function header(row) {\n              var data = row.data();\n              return 'Details of ' + data['full_name'];\n            }\n          }),\n          type: 'column',\n          renderer: function renderer(api, rowIdx, columns) {\n            var data = $.map(columns, function (col, i) {\n              return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)\n              ? '<tr data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>' : '';\n            }).join('');\n            return data ? $('<table class=\"table\"/><tbody />').append(data) : false;\n          }\n        }\n      }\n    });\n  }\n\n  // Filter form control to default size\n  // ? setTimeout used for multilingual table initialization\n  setTimeout(function () {\n    $('.dataTables_filter .form-control').removeClass('form-control-sm');\n    $('.dataTables_length .form-select').removeClass('form-select-sm');\n  }, 200);\n});\n\n//# sourceURL=webpack://Sneat/./static/js/tables-datatables-advanced.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/tables-datatables-advanced.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});