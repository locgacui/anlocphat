/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/app-user-list.js":
/*!************************************!*\
  !*** ./static/js/app-user-list.js ***!
  \************************************/
/***/ (function() {

eval("/**\n * Page User List\n */\n\n\n\n// Datatable (jquery)\n$(function () {\n  var borderColor, bodyBg, headingColor;\n  if (isDarkStyle) {\n    borderColor = config.colors_dark.borderColor;\n    bodyBg = config.colors_dark.bodyBg;\n    headingColor = config.colors_dark.headingColor;\n  } else {\n    borderColor = config.colors.borderColor;\n    bodyBg = config.colors.bodyBg;\n    headingColor = config.colors.headingColor;\n  }\n\n  // Variable declaration for table\n  var dt_user_table = $('.datatables-users'),\n    select2 = $('.select2'),\n    userView = 'app-user-view-account.html',\n    statusObj = {\n      1: {\n        title: 'Pending',\n        class: 'bg-label-warning'\n      },\n      2: {\n        title: 'Active',\n        class: 'bg-label-success'\n      },\n      3: {\n        title: 'Inactive',\n        class: 'bg-label-secondary'\n      }\n    };\n  if (select2.length) {\n    var $this = select2;\n    $this.wrap('<div class=\"position-relative\"></div>').select2({\n      placeholder: 'Select Country',\n      dropdownParent: $this.parent()\n    });\n  }\n\n  // Users datatable\n  if (dt_user_table.length) {\n    var dt_user = dt_user_table.DataTable({\n      ajax: assetsPath + 'json/user-list.json',\n      // JSON file to add data\n      columns: [\n      // columns according to JSON\n      {\n        data: ''\n      }, {\n        data: 'full_name'\n      }, {\n        data: 'role'\n      }, {\n        data: 'current_plan'\n      }, {\n        data: 'billing'\n      }, {\n        data: 'status'\n      }, {\n        data: 'action'\n      }],\n      columnDefs: [{\n        // For Responsive\n        className: 'control',\n        searchable: false,\n        orderable: false,\n        responsivePriority: 2,\n        targets: 0,\n        render: function render(data, type, full, meta) {\n          return '';\n        }\n      }, {\n        // User full name and email\n        targets: 1,\n        responsivePriority: 4,\n        render: function render(data, type, full, meta) {\n          var $name = full['full_name'],\n            $email = full['email'],\n            $image = full['avatar'];\n          if ($image) {\n            // For Avatar image\n            var $output = '<img src=\"' + assetsPath + 'img/avatars/' + $image + '\" alt=\"Avatar\" class=\"rounded-circle\">';\n          } else {\n            // For Avatar badge\n            var stateNum = Math.floor(Math.random() * 6);\n            var states = ['success', 'danger', 'warning', 'info', 'dark', 'primary', 'secondary'];\n            var $state = states[stateNum],\n              $name = full['full_name'],\n              $initials = $name.match(/\\b\\w/g) || [];\n            $initials = (($initials.shift() || '') + ($initials.pop() || '')).toUpperCase();\n            $output = '<span class=\"avatar-initial rounded-circle bg-label-' + $state + '\">' + $initials + '</span>';\n          }\n          // Creates full output for row\n          var $row_output = '<div class=\"d-flex justify-content-start align-items-center user-name\">' + '<div class=\"avatar-wrapper\">' + '<div class=\"avatar avatar-sm me-3\">' + $output + '</div>' + '</div>' + '<div class=\"d-flex flex-column\">' + '<a href=\"' + userView + '\" class=\"text-body text-truncate\"><span class=\"fw-medium\">' + $name + '</span></a>' + '<small class=\"text-muted\">' + $email + '</small>' + '</div>' + '</div>';\n          return $row_output;\n        }\n      }, {\n        // User Role\n        targets: 2,\n        render: function render(data, type, full, meta) {\n          var $role = full['role'];\n          var roleBadgeObj = {\n            Subscriber: '<span class=\"badge badge-center rounded-pill bg-label-warning w-px-30 h-px-30 me-2\"><i class=\"bx bx-user bx-xs\"></i></span>',\n            Author: '<span class=\"badge badge-center rounded-pill bg-label-success w-px-30 h-px-30 me-2\"><i class=\"bx bx-cog bx-xs\"></i></span>',\n            Maintainer: '<span class=\"badge badge-center rounded-pill bg-label-primary w-px-30 h-px-30 me-2\"><i class=\"bx bx-pie-chart-alt bx-xs\"></i></span>',\n            Editor: '<span class=\"badge badge-center rounded-pill bg-label-info w-px-30 h-px-30 me-2\"><i class=\"bx bx-edit bx-xs\"></i></span>',\n            Admin: '<span class=\"badge badge-center rounded-pill bg-label-secondary w-px-30 h-px-30 me-2\"><i class=\"bx bx-mobile-alt bx-xs\"></i></span>'\n          };\n          return \"<span class='text-truncate d-flex align-items-center'>\" + roleBadgeObj[$role] + $role + '</span>';\n        }\n      }, {\n        // Plans\n        targets: 3,\n        render: function render(data, type, full, meta) {\n          var $plan = full['current_plan'];\n          return '<span class=\"fw-medium\">' + $plan + '</span>';\n        }\n      }, {\n        // User Status\n        targets: 5,\n        render: function render(data, type, full, meta) {\n          var $status = full['status'];\n          return '<span class=\"badge ' + statusObj[$status].class + '\">' + statusObj[$status].title + '</span>';\n        }\n      }, {\n        // Actions\n        targets: -1,\n        title: 'Actions',\n        searchable: false,\n        orderable: false,\n        render: function render(data, type, full, meta) {\n          return '<div class=\"d-inline-block text-nowrap\">' + '<button class=\"btn btn-sm btn-icon\"><i class=\"bx bx-edit\"></i></button>' + '<button class=\"btn btn-sm btn-icon delete-record\"><i class=\"bx bx-trash\"></i></button>' + '<button class=\"btn btn-sm btn-icon dropdown-toggle hide-arrow\" data-bs-toggle=\"dropdown\"><i class=\"bx bx-dots-vertical-rounded me-2\"></i></button>' + '<div class=\"dropdown-menu dropdown-menu-end m-0\">' + '<a href=\"' + userView + '\" class=\"dropdown-item\">View</a>' + '<a href=\"javascript:;\" class=\"dropdown-item\">Suspend</a>' + '</div>' + '</div>';\n        }\n      }],\n      order: [[1, 'desc']],\n      dom: '<\"row mx-2\"' + '<\"col-md-2\"<\"me-3\"l>>' + '<\"col-md-10\"<\"dt-action-buttons text-xl-end text-lg-start text-md-end text-start d-flex align-items-center justify-content-end flex-md-row flex-column mb-3 mb-md-0\"fB>>' + '>t' + '<\"row mx-2\"' + '<\"col-sm-12 col-md-6\"i>' + '<\"col-sm-12 col-md-6\"p>' + '>',\n      language: {\n        sLengthMenu: '_MENU_',\n        search: '',\n        searchPlaceholder: 'Search..'\n      },\n      // Buttons with Dropdown\n      buttons: [{\n        extend: 'collection',\n        className: 'btn btn-label-secondary dropdown-toggle mx-3',\n        text: '<i class=\"bx bx-export me-1\"></i>Export',\n        buttons: [{\n          extend: 'print',\n          text: '<i class=\"bx bx-printer me-2\" ></i>Print',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4, 5],\n            // prevent avatar to be print\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('user-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          },\n          customize: function customize(win) {\n            //customize print view for dark\n            $(win.document.body).css('color', headingColor).css('border-color', borderColor).css('background-color', bodyBg);\n            $(win.document.body).find('table').addClass('compact').css('color', 'inherit').css('border-color', 'inherit').css('background-color', 'inherit');\n          }\n        }, {\n          extend: 'csv',\n          text: '<i class=\"bx bx-file me-2\" ></i>Csv',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4, 5],\n            // prevent avatar to be display\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('user-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }, {\n          extend: 'excel',\n          text: '<i class=\"bx bxs-file-export me-2\"></i>Excel',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4, 5],\n            // prevent avatar to be display\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('user-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }, {\n          extend: 'pdf',\n          text: '<i class=\"bx bxs-file-pdf me-2\"></i>Pdf',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4, 5],\n            // prevent avatar to be display\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('user-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }, {\n          extend: 'copy',\n          text: '<i class=\"bx bx-copy me-2\" ></i>Copy',\n          className: 'dropdown-item',\n          exportOptions: {\n            columns: [1, 2, 3, 4, 5],\n            // prevent avatar to be display\n            format: {\n              body: function body(inner, coldex, rowdex) {\n                if (inner.length <= 0) return inner;\n                var el = $.parseHTML(inner);\n                var result = '';\n                $.each(el, function (index, item) {\n                  if (item.classList !== undefined && item.classList.contains('user-name')) {\n                    result = result + item.lastChild.firstChild.textContent;\n                  } else if (item.innerText === undefined) {\n                    result = result + item.textContent;\n                  } else result = result + item.innerText;\n                });\n                return result;\n              }\n            }\n          }\n        }]\n      }, {\n        text: '<i class=\"bx bx-plus me-0 me-sm-1\"></i><span class=\"d-none d-sm-inline-block\">Add New User</span>',\n        className: 'add-new btn btn-primary',\n        attr: {\n          'data-bs-toggle': 'offcanvas',\n          'data-bs-target': '#offcanvasAddUser'\n        }\n      }],\n      // For responsive popup\n      responsive: {\n        details: {\n          display: $.fn.dataTable.Responsive.display.modal({\n            header: function header(row) {\n              var data = row.data();\n              return 'Details of ' + data['full_name'];\n            }\n          }),\n          type: 'column',\n          renderer: function renderer(api, rowIdx, columns) {\n            var data = $.map(columns, function (col, i) {\n              return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)\n              ? '<tr data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>' : '';\n            }).join('');\n            return data ? $('<table class=\"table\"/><tbody />').append(data) : false;\n          }\n        }\n      },\n      initComplete: function initComplete() {\n        // Adding role filter once table initialized\n        this.api().columns(2).every(function () {\n          var column = this;\n          var select = $('<select id=\"UserRole\" class=\"form-select text-capitalize\"><option value=\"\"> Select Role </option></select>').appendTo('.user_role').on('change', function () {\n            var val = $.fn.dataTable.util.escapeRegex($(this).val());\n            column.search(val ? '^' + val + '$' : '', true, false).draw();\n          });\n          column.data().unique().sort().each(function (d, j) {\n            select.append('<option value=\"' + d + '\">' + d + '</option>');\n          });\n        });\n        // Adding plan filter once table initialized\n        this.api().columns(3).every(function () {\n          var column = this;\n          var select = $('<select id=\"UserPlan\" class=\"form-select text-capitalize\"><option value=\"\"> Select Plan </option></select>').appendTo('.user_plan').on('change', function () {\n            var val = $.fn.dataTable.util.escapeRegex($(this).val());\n            column.search(val ? '^' + val + '$' : '', true, false).draw();\n          });\n          column.data().unique().sort().each(function (d, j) {\n            select.append('<option value=\"' + d + '\">' + d + '</option>');\n          });\n        });\n        // Adding status filter once table initialized\n        this.api().columns(5).every(function () {\n          var column = this;\n          var select = $('<select id=\"FilterTransaction\" class=\"form-select text-capitalize\"><option value=\"\"> Select Status </option></select>').appendTo('.user_status').on('change', function () {\n            var val = $.fn.dataTable.util.escapeRegex($(this).val());\n            column.search(val ? '^' + val + '$' : '', true, false).draw();\n          });\n          column.data().unique().sort().each(function (d, j) {\n            select.append('<option value=\"' + statusObj[d].title + '\" class=\"text-capitalize\">' + statusObj[d].title + '</option>');\n          });\n        });\n      }\n    });\n    // To remove default btn-secondary in export buttons\n    $('.dt-buttons > .btn-group > button').removeClass('btn-secondary');\n  }\n\n  // Delete Record\n  $('.datatables-users tbody').on('click', '.delete-record', function () {\n    dt_user.row($(this).parents('tr')).remove().draw();\n  });\n\n  // Filter form control to default size\n  // ? setTimeout used for multilingual table initialization\n  setTimeout(function () {\n    $('.dataTables_filter .form-control').removeClass('form-control-sm');\n    $('.dataTables_length .form-select').removeClass('form-select-sm');\n  }, 300);\n});\n\n// Validation & Phone mask\n(function () {\n  var phoneMaskList = document.querySelectorAll('.phone-mask'),\n    addNewUserForm = document.getElementById('addNewUserForm');\n\n  // Phone Number\n  if (phoneMaskList) {\n    phoneMaskList.forEach(function (phoneMask) {\n      new Cleave(phoneMask, {\n        phone: true,\n        phoneRegionCode: 'US'\n      });\n    });\n  }\n  // Add New User Form Validation\n  var fv = FormValidation.formValidation(addNewUserForm, {\n    fields: {\n      userFullname: {\n        validators: {\n          notEmpty: {\n            message: 'Please enter fullname '\n          }\n        }\n      },\n      userEmail: {\n        validators: {\n          notEmpty: {\n            message: 'Please enter your email'\n          },\n          emailAddress: {\n            message: 'The value is not a valid email address'\n          }\n        }\n      }\n    },\n    plugins: {\n      trigger: new FormValidation.plugins.Trigger(),\n      bootstrap5: new FormValidation.plugins.Bootstrap5({\n        // Use this for enabling/changing valid/invalid class\n        eleValidClass: '',\n        rowSelector: function rowSelector(field, ele) {\n          // field is the field name & ele is the field element\n          return '.mb-3';\n        }\n      }),\n      submitButton: new FormValidation.plugins.SubmitButton(),\n      // Submit the form when all fields are valid\n      // defaultSubmit: new FormValidation.plugins.DefaultSubmit(),\n      autoFocus: new FormValidation.plugins.AutoFocus()\n    }\n  });\n})();\n\n//# sourceURL=webpack://Sneat/./static/js/app-user-list.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/app-user-list.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});