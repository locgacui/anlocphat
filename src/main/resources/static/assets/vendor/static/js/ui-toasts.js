/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/ui-toasts.js":
/*!********************************!*\
  !*** ./static/js/ui-toasts.js ***!
  \********************************/
/***/ (function() {

eval("/**\n * UI Toasts\n */\n\n\n\n(function () {\n  // Bootstrap toasts example\n  // --------------------------------------------------------------------\n  var toastAnimationExample = document.querySelector('.toast-ex'),\n    toastPlacementExample = document.querySelector('.toast-placement-ex'),\n    toastAnimationBtn = document.querySelector('#showToastAnimation'),\n    toastPlacementBtn = document.querySelector('#showToastPlacement');\n  var selectedType, selectedAnimation, selectedPlacement, toast, toastAnimation, toastPlacement;\n\n  // Animation Button click\n  if (toastAnimationBtn) {\n    toastAnimationBtn.onclick = function () {\n      if (toastAnimation) {\n        toastDispose(toastAnimation);\n      }\n      selectedType = document.querySelector('#selectType').value;\n      selectedAnimation = document.querySelector('#selectAnimation').value;\n      toastAnimationExample.classList.add(selectedType, selectedAnimation);\n      toastAnimation = new bootstrap.Toast(toastAnimationExample);\n      toastAnimation.show();\n    };\n  }\n\n  // Dispose toast when open another\n  function toastDispose(toast) {\n    if (toast && toast._element !== null) {\n      if (toastPlacementExample) {\n        toastPlacementExample.classList.remove(selectedType);\n        DOMTokenList.prototype.remove.apply(toastPlacementExample.classList, selectedPlacement);\n      }\n      if (toastAnimationExample) {\n        toastAnimationExample.classList.remove(selectedType, selectedAnimation);\n      }\n      toast.dispose();\n    }\n  }\n  // Placement Button click\n  if (toastPlacementBtn) {\n    toastPlacementBtn.onclick = function () {\n      if (toastPlacement) {\n        toastDispose(toastPlacement);\n      }\n      selectedType = document.querySelector('#selectTypeOpt').value;\n      selectedPlacement = document.querySelector('#selectPlacement').value.split(' ');\n      toastPlacementExample.classList.add(selectedType);\n      DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);\n      toastPlacement = new bootstrap.Toast(toastPlacementExample);\n      toastPlacement.show();\n    };\n  }\n})();\n\n//Toastr (jquery)\n// --------------------------------------------------------------------\n$(function () {\n  var i = -1;\n  var toastCount = 0;\n  var $toastlast;\n  var getMessage = function getMessage() {\n    var msgs = [\"Don't be pushed around by the fears in your mind. Be led by the dreams in your heart.\", '<div class=\"mb-3\"><input class=\"input-small form-control\" value=\"Textbox\"/>&nbsp;<a href=\"http://johnpapa.net\" target=\"_blank\">This is a hyperlink</a></div><div class=\"d-flex\"><button type=\"button\" id=\"okBtn\" class=\"btn btn-primary btn-sm me-2\">Close me</button><button type=\"button\" id=\"surpriseBtn\" class=\"btn btn-sm btn-secondary\">Surprise me</button></div>', 'Live the Life of Your Dreams', 'Believe in Your Self!', 'Be mindful. Be grateful. Be positive.', 'Accept yourself, love yourself!'];\n    i++;\n    if (i === msgs.length) {\n      i = 0;\n    }\n    return msgs[i];\n  };\n  var getMessageWithClearButton = function getMessageWithClearButton(msg) {\n    msg = msg ? msg : 'Clear itself?';\n    msg += '<br /><br /><button type=\"button\" class=\"btn btn-secondary clear\">Yes</button>';\n    return msg;\n  };\n  $('#closeButton').on('click', function () {\n    if ($(this).is(':checked')) {\n      $('#addBehaviorOnToastCloseClick').prop('disabled', false);\n    } else {\n      $('#addBehaviorOnToastCloseClick').prop('disabled', true);\n      $('#addBehaviorOnToastCloseClick').prop('checked', false);\n    }\n  });\n  $('#showtoast').on('click', function () {\n    var shortCutFunction = $('#toastTypeGroup input:radio:checked').val(),\n      isRtl = $('html').attr('dir') === 'rtl',\n      msg = $('#message').val(),\n      title = $('#title').val() || '',\n      $showDuration = $('#showDuration'),\n      $hideDuration = $('#hideDuration'),\n      $timeOut = $('#timeOut'),\n      $extendedTimeOut = $('#extendedTimeOut'),\n      $showEasing = $('#showEasing'),\n      $hideEasing = $('#hideEasing'),\n      $showMethod = $('#showMethod'),\n      $hideMethod = $('#hideMethod'),\n      toastIndex = toastCount++,\n      addClear = $('#addClear').prop('checked'),\n      prePositionClass = 'toast-top-right';\n    prePositionClass = typeof toastr.options.positionClass === 'undefined' ? 'toast-top-right' : toastr.options.positionClass;\n    toastr.options = {\n      maxOpened: 1,\n      autoDismiss: true,\n      closeButton: $('#closeButton').prop('checked'),\n      debug: $('#debugInfo').prop('checked'),\n      newestOnTop: $('#newestOnTop').prop('checked'),\n      progressBar: $('#progressBar').prop('checked'),\n      positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',\n      preventDuplicates: $('#preventDuplicates').prop('checked'),\n      onclick: null,\n      rtl: isRtl\n    };\n\n    //Add fix for multiple toast open while changing the position\n    if (prePositionClass != toastr.options.positionClass) {\n      toastr.options.hideDuration = 0;\n      toastr.clear();\n    }\n    if ($('#addBehaviorOnToastClick').prop('checked')) {\n      toastr.options.onclick = function () {\n        alert('You can perform some custom action after a toast goes away');\n      };\n    }\n    if ($('#addBehaviorOnToastCloseClick').prop('checked')) {\n      toastr.options.onCloseClick = function () {\n        alert('You can perform some custom action when the close button is clicked');\n      };\n    }\n    if ($showDuration.val().length) {\n      toastr.options.showDuration = parseInt($showDuration.val());\n    }\n    if ($hideDuration.val().length) {\n      toastr.options.hideDuration = parseInt($hideDuration.val());\n    }\n    if ($timeOut.val().length) {\n      toastr.options.timeOut = addClear ? 0 : parseInt($timeOut.val());\n    }\n    if ($extendedTimeOut.val().length) {\n      toastr.options.extendedTimeOut = addClear ? 0 : parseInt($extendedTimeOut.val());\n    }\n    if ($showEasing.val().length) {\n      toastr.options.showEasing = $showEasing.val();\n    }\n    if ($hideEasing.val().length) {\n      toastr.options.hideEasing = $hideEasing.val();\n    }\n    if ($showMethod.val().length) {\n      toastr.options.showMethod = $showMethod.val();\n    }\n    if ($hideMethod.val().length) {\n      toastr.options.hideMethod = $hideMethod.val();\n    }\n    if (addClear) {\n      msg = getMessageWithClearButton(msg);\n      toastr.options.tapToDismiss = false;\n    }\n    if (!msg) {\n      msg = getMessage();\n    }\n    var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists\n    $toastlast = $toast;\n    if (typeof $toast === 'undefined') {\n      return;\n    }\n    if ($toast.find('#okBtn').length) {\n      $toast.delegate('#okBtn', 'click', function () {\n        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');\n        $toast.remove();\n      });\n    }\n    if ($toast.find('#surpriseBtn').length) {\n      $toast.delegate('#surpriseBtn', 'click', function () {\n        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');\n      });\n    }\n    if ($toast.find('.clear').length) {\n      $toast.delegate('.clear', 'click', function () {\n        toastr.clear($toast, {\n          force: true\n        });\n      });\n    }\n  });\n  function getLastToast() {\n    return $toastlast;\n  }\n  $('#clearlasttoast').on('click', function () {\n    toastr.clear(getLastToast());\n  });\n  $('#cleartoasts').on('click', function () {\n    toastr.clear();\n  });\n});\n\n//# sourceURL=webpack://Sneat/./static/js/ui-toasts.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/ui-toasts.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});