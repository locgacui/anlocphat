/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/pages-auth-multisteps.js":
/*!********************************************!*\
  !*** ./static/js/pages-auth-multisteps.js ***!
  \********************************************/
/***/ (function() {

eval("/**\n *  Page auth register multi-steps\n */\n\n\n\n// Select2 (jquery)\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n$(function () {\n  var select2 = $('.select2');\n\n  // select2\n  if (select2.length) {\n    select2.each(function () {\n      var $this = $(this);\n      $this.wrap('<div class=\"position-relative\"></div>');\n      $this.select2({\n        placeholder: 'Select an country',\n        dropdownParent: $this.parent()\n      });\n    });\n  }\n});\n\n// Multi Steps Validation\n// --------------------------------------------------------------------\ndocument.addEventListener('DOMContentLoaded', function (e) {\n  (function () {\n    var stepsValidation = document.querySelector('#multiStepsValidation');\n    if (_typeof(stepsValidation) !== undefined && stepsValidation !== null) {\n      // Multi Steps form\n      var stepsValidationForm = stepsValidation.querySelector('#multiStepsForm');\n      // Form steps\n      var stepsValidationFormStep1 = stepsValidationForm.querySelector('#accountDetailsValidation');\n      var stepsValidationFormStep2 = stepsValidationForm.querySelector('#personalInfoValidation');\n      var stepsValidationFormStep3 = stepsValidationForm.querySelector('#billingLinksValidation');\n      // Multi steps next prev button\n      var stepsValidationNext = [].slice.call(stepsValidationForm.querySelectorAll('.btn-next'));\n      var stepsValidationPrev = [].slice.call(stepsValidationForm.querySelectorAll('.btn-prev'));\n      var multiStepsExDate = document.querySelector('.multi-steps-exp-date'),\n        multiStepsCvv = document.querySelector('.multi-steps-cvv'),\n        multiStepsMobile = document.querySelector('.multi-steps-mobile'),\n        multiStepsPincode = document.querySelector('.multi-steps-pincode'),\n        multiStepsCard = document.querySelector('.multi-steps-card');\n\n      // Expiry Date Mask\n      if (multiStepsExDate) {\n        new Cleave(multiStepsExDate, {\n          date: true,\n          delimiter: '/',\n          datePattern: ['m', 'y']\n        });\n      }\n\n      // CVV\n      if (multiStepsCvv) {\n        new Cleave(multiStepsCvv, {\n          numeral: true,\n          numeralPositiveOnly: true\n        });\n      }\n\n      // Mobile\n      if (multiStepsMobile) {\n        new Cleave(multiStepsMobile, {\n          phone: true,\n          phoneRegionCode: 'US'\n        });\n      }\n\n      // Pincode\n      if (multiStepsPincode) {\n        new Cleave(multiStepsPincode, {\n          delimiter: '',\n          numeral: true\n        });\n      }\n\n      // Credit Card\n      if (multiStepsCard) {\n        new Cleave(multiStepsCard, {\n          creditCard: true,\n          onCreditCardTypeChanged: function onCreditCardTypeChanged(type) {\n            if (type != '' && type != 'unknown') {\n              document.querySelector('.card-type').innerHTML = '<img src=\"' + assetsPath + 'img/icons/payments/' + type + '-cc.png\" height=\"28\"/>';\n            } else {\n              document.querySelector('.card-type').innerHTML = '';\n            }\n          }\n        });\n      }\n      var validationStepper = new Stepper(stepsValidation, {\n        linear: true\n      });\n\n      // Account details\n      var multiSteps1 = FormValidation.formValidation(stepsValidationFormStep1, {\n        fields: {\n          multiStepsUsername: {\n            validators: {\n              notEmpty: {\n                message: 'Please enter username'\n              },\n              stringLength: {\n                min: 6,\n                max: 30,\n                message: 'The name must be more than 6 and less than 30 characters long'\n              },\n              regexp: {\n                regexp: /^[a-zA-Z0-9 ]+$/,\n                message: 'The name can only consist of alphabetical, number and space'\n              }\n            }\n          },\n          multiStepsEmail: {\n            validators: {\n              notEmpty: {\n                message: 'Please enter email address'\n              },\n              emailAddress: {\n                message: 'The value is not a valid email address'\n              }\n            }\n          },\n          multiStepsPass: {\n            validators: {\n              notEmpty: {\n                message: 'Please enter password'\n              }\n            }\n          },\n          multiStepsConfirmPass: {\n            validators: {\n              notEmpty: {\n                message: 'Confirm Password is required'\n              },\n              identical: {\n                compare: function compare() {\n                  return stepsValidationFormStep1.querySelector('[name=\"multiStepsPass\"]').value;\n                },\n                message: 'The password and its confirm are not the same'\n              }\n            }\n          }\n        },\n        plugins: {\n          trigger: new FormValidation.plugins.Trigger(),\n          bootstrap5: new FormValidation.plugins.Bootstrap5({\n            // Use this for enabling/changing valid/invalid class\n            // eleInvalidClass: '',\n            eleValidClass: '',\n            rowSelector: '.col-sm-6'\n          }),\n          autoFocus: new FormValidation.plugins.AutoFocus(),\n          submitButton: new FormValidation.plugins.SubmitButton()\n        },\n        init: function init(instance) {\n          instance.on('plugins.message.placed', function (e) {\n            if (e.element.parentElement.classList.contains('input-group')) {\n              e.element.parentElement.insertAdjacentElement('afterend', e.messageElement);\n            }\n          });\n        }\n      }).on('core.form.valid', function () {\n        // Jump to the next step when all fields in the current step are valid\n        validationStepper.next();\n      });\n\n      // Personal info\n      var multiSteps2 = FormValidation.formValidation(stepsValidationFormStep2, {\n        fields: {\n          multiStepsFirstName: {\n            validators: {\n              notEmpty: {\n                message: 'Please enter first name'\n              }\n            }\n          },\n          multiStepsAddress: {\n            validators: {\n              notEmpty: {\n                message: 'Please enter your address'\n              }\n            }\n          }\n        },\n        plugins: {\n          trigger: new FormValidation.plugins.Trigger(),\n          bootstrap5: new FormValidation.plugins.Bootstrap5({\n            // Use this for enabling/changing valid/invalid class\n            // eleInvalidClass: '',\n            eleValidClass: '',\n            rowSelector: function rowSelector(field, ele) {\n              // field is the field name\n              // ele is the field element\n              switch (field) {\n                case 'multiStepsFirstName':\n                  return '.col-sm-6';\n                case 'multiStepsAddress':\n                  return '.col-md-12';\n                default:\n                  return '.row';\n              }\n            }\n          }),\n          autoFocus: new FormValidation.plugins.AutoFocus(),\n          submitButton: new FormValidation.plugins.SubmitButton()\n        }\n      }).on('core.form.valid', function () {\n        // Jump to the next step when all fields in the current step are valid\n        validationStepper.next();\n      });\n\n      // Social links\n      var multiSteps3 = FormValidation.formValidation(stepsValidationFormStep3, {\n        fields: {\n          multiStepsCard: {\n            validators: {\n              notEmpty: {\n                message: 'Please enter card number'\n              }\n            }\n          }\n        },\n        plugins: {\n          trigger: new FormValidation.plugins.Trigger(),\n          bootstrap5: new FormValidation.plugins.Bootstrap5({\n            // Use this for enabling/changing valid/invalid class\n            // eleInvalidClass: '',\n            eleValidClass: '',\n            rowSelector: function rowSelector(field, ele) {\n              // field is the field name\n              // ele is the field element\n              switch (field) {\n                case 'multiStepsCard':\n                  return '.col-md-12';\n                default:\n                  return '.col-dm-6';\n              }\n            }\n          }),\n          autoFocus: new FormValidation.plugins.AutoFocus(),\n          submitButton: new FormValidation.plugins.SubmitButton()\n        },\n        init: function init(instance) {\n          instance.on('plugins.message.placed', function (e) {\n            if (e.element.parentElement.classList.contains('input-group')) {\n              e.element.parentElement.insertAdjacentElement('afterend', e.messageElement);\n            }\n          });\n        }\n      }).on('core.form.valid', function () {\n        // You can submit the form\n        // stepsValidationForm.submit()\n        // or send the form data to server via an Ajax request\n        // To make the demo simple, I just placed an alert\n        alert('Submitted..!!');\n      });\n      stepsValidationNext.forEach(function (item) {\n        item.addEventListener('click', function (event) {\n          // When click the Next button, we will validate the current step\n          switch (validationStepper._currentIndex) {\n            case 0:\n              multiSteps1.validate();\n              break;\n            case 1:\n              multiSteps2.validate();\n              break;\n            case 2:\n              multiSteps3.validate();\n              break;\n            default:\n              break;\n          }\n        });\n      });\n      stepsValidationPrev.forEach(function (item) {\n        item.addEventListener('click', function (event) {\n          switch (validationStepper._currentIndex) {\n            case 2:\n              validationStepper.previous();\n              break;\n            case 1:\n              validationStepper.previous();\n              break;\n            case 0:\n            default:\n              break;\n          }\n        });\n      });\n    }\n  })();\n});\n\n//# sourceURL=webpack://Sneat/./static/js/pages-auth-multisteps.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/pages-auth-multisteps.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});