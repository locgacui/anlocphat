/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/app-invoice-list.js":
/*!***************************************!*\
  !*** ./static/js/app-invoice-list.js ***!
  \***************************************/
/***/ (function() {

eval("/**\n * App Invoice List (jquery)\n */\n\n\n\n$(function () {\n  // Variable declaration for table\n  var dt_invoice_table = $('.invoice-list-table');\n\n  // Invoice datatable\n  if (dt_invoice_table.length) {\n    var dt_invoice = dt_invoice_table.DataTable({\n      ajax: assetsPath + 'json/invoice-list.json',\n      // JSON file to add data\n      columns: [\n      // columns according to JSON\n      {\n        data: ''\n      }, {\n        data: 'invoice_id'\n      }, {\n        data: 'invoice_status'\n      }, {\n        data: 'issued_date'\n      }, {\n        data: 'client_name'\n      }, {\n        data: 'total'\n      }, {\n        data: 'balance'\n      }, {\n        data: 'invoice_status'\n      }, {\n        data: 'action'\n      }],\n      columnDefs: [{\n        // For Responsive\n        className: 'control',\n        responsivePriority: 2,\n        searchable: false,\n        targets: 0,\n        render: function render(data, type, full, meta) {\n          return '';\n        }\n      }, {\n        // Invoice ID\n        targets: 1,\n        render: function render(data, type, full, meta) {\n          var $invoice_id = full['invoice_id'];\n          // Creates full output for row\n          var $row_output = '<a href=\"app-invoice-preview.html\"><span class=\"fw-medium\">#' + $invoice_id + '</span></a>';\n          return $row_output;\n        }\n      }, {\n        // Invoice status\n        targets: 2,\n        render: function render(data, type, full, meta) {\n          var $invoice_status = full['invoice_status'],\n            $due_date = full['due_date'],\n            $balance = full['balance'];\n          var roleBadgeObj = {\n            Sent: '<span class=\"badge badge-center rounded-pill bg-label-secondary w-px-30 h-px-30\"><i class=\"bx bx-paper-plane bx-xs\"></i></span>',\n            Draft: '<span class=\"badge badge-center rounded-pill bg-label-primary w-px-30 h-px-30\"><i class=\"bx bxs-save bx-xs\"></i></span>',\n            'Past Due': '<span class=\"badge badge-center rounded-pill bg-label-danger w-px-30 h-px-30\"><i class=\"bx bx-info-circle bx-xs\"></i></span>',\n            'Partial Payment': '<span class=\"badge badge-center rounded-pill bg-label-success w-px-30 h-px-30\"><i class=\"bx bx-adjust bx-xs\"></i></span>',\n            Paid: '<span class=\"badge badge-center rounded-pill bg-label-warning w-px-30 h-px-30\"><i class=\"bx bx-pie-chart-alt bx-xs\"></i></span>',\n            Downloaded: '<span class=\"badge badge-center rounded-pill bg-label-info w-px-30 h-px-30\"><i class=\"bx bx-down-arrow-circle bx-xs\"></i></span>'\n          };\n          return \"<span data-bs-toggle='tooltip' data-bs-html='true' title='<span>\" + $invoice_status + '<br> <span class=\"fw-medium\">Balance:</span> ' + $balance + '<br> <span class=\"fw-medium\">Due Date:</span> ' + $due_date + \"</span>'>\" + roleBadgeObj[$invoice_status] + '</span>';\n        }\n      }, {\n        // Client name and Service\n        targets: 3,\n        responsivePriority: 4,\n        render: function render(data, type, full, meta) {\n          var $name = full['client_name'],\n            $service = full['service'],\n            $image = full['avatar_image'],\n            $rand_num = Math.floor(Math.random() * 11) + 1,\n            $user_img = $rand_num + '.png';\n          if ($image === true) {\n            // For Avatar image\n            var $output = '<img src=\"' + assetsPath + 'img/avatars/' + $user_img + '\" alt=\"Avatar\" class=\"rounded-circle\">';\n          } else {\n            // For Avatar badge\n            var stateNum = Math.floor(Math.random() * 6),\n              states = ['success', 'danger', 'warning', 'info', 'dark', 'primary', 'secondary'],\n              $state = states[stateNum],\n              $name = full['client_name'],\n              $initials = $name.match(/\\b\\w/g) || [];\n            $initials = (($initials.shift() || '') + ($initials.pop() || '')).toUpperCase();\n            $output = '<span class=\"avatar-initial rounded-circle bg-label-' + $state + '\">' + $initials + '</span>';\n          }\n          // Creates full output for avatar row\n          var $row_output = '<div class=\"d-flex justify-content-start align-items-center\">' + '<div class=\"avatar-wrapper\">' + '<div class=\"avatar avatar-sm me-2\">' + $output + '</div>' + '</div>' + '<div class=\"d-flex flex-column\">' + '<a href=\"pages-profile-user.html\" class=\"text-body text-truncate\"><span class=\"fw-medium\">' + $name + '</span></a>' + '<small class=\"text-truncate text-muted\">' + $service + '</small>' + '</div>' + '</div>';\n          return $row_output;\n        }\n      }, {\n        // Total Invoice Amount\n        targets: 4,\n        render: function render(data, type, full, meta) {\n          var $total = full['total'];\n          return '<span class=\"d-none\">' + $total + '</span>$' + $total;\n        }\n      }, {\n        // Due Date\n        targets: 5,\n        render: function render(data, type, full, meta) {\n          var $due_date = new Date(full['due_date']);\n          // Creates full output for row\n          var $row_output = '<span class=\"d-none\">' + moment($due_date).format('YYYYMMDD') + '</span>' + moment($due_date).format('DD MMM YYYY');\n          $due_date;\n          return $row_output;\n        }\n      }, {\n        // Client Balance/Status\n        targets: 6,\n        orderable: false,\n        render: function render(data, type, full, meta) {\n          var $balance = full['balance'];\n          if ($balance === 0) {\n            var $badge_class = 'bg-label-success';\n            return '<span class=\"badge ' + $badge_class + '\"> Paid </span>';\n          } else {\n            return '<span class=\"d-none\">' + $balance + '</span>' + $balance;\n          }\n        }\n      }, {\n        targets: 7,\n        visible: false\n      }, {\n        // Actions\n        targets: -1,\n        title: 'Actions',\n        searchable: false,\n        orderable: false,\n        render: function render(data, type, full, meta) {\n          return '<div class=\"d-flex align-items-center\">' + '<a href=\"javascript:;\" data-bs-toggle=\"tooltip\" class=\"text-body\" data-bs-placement=\"top\" title=\"Send Mail\"><i class=\"bx bx-send mx-1\"></i></a>' + '<a href=\"app-invoice-preview.html\" data-bs-toggle=\"tooltip\" class=\"text-body\" data-bs-placement=\"top\" title=\"Preview Invoice\"><i class=\"bx bx-show mx-1\"></i></a>' + '<div class=\"dropdown\">' + '<a href=\"javascript:;\" class=\"btn dropdown-toggle hide-arrow text-body p-0\" data-bs-toggle=\"dropdown\"><i class=\"bx bx-dots-vertical-rounded\"></i></a>' + '<div class=\"dropdown-menu dropdown-menu-end\">' + '<a href=\"javascript:;\" class=\"dropdown-item\">Download</a>' + '<a href=\"app-invoice-edit.html\" class=\"dropdown-item\">Edit</a>' + '<a href=\"javascript:;\" class=\"dropdown-item\">Duplicate</a>' + '<div class=\"dropdown-divider\"></div>' + '<a href=\"javascript:;\" class=\"dropdown-item delete-record text-danger\">Delete</a>' + '</div>' + '</div>' + '</div>';\n        }\n      }],\n      order: [[1, 'desc']],\n      dom: '<\"row mx-1\"' + '<\"col-12 col-md-6 d-flex align-items-center justify-content-center justify-content-md-start gap-3\"l<\"dt-action-buttons text-xl-end text-lg-start text-md-end text-start mt-md-0 mt-3\"B>>' + '<\"col-12 col-md-6 d-flex align-items-center justify-content-end flex-column flex-md-row pe-3 gap-md-3\"f<\"invoice_status mb-3 mb-md-0\">>' + '>t' + '<\"row mx-2\"' + '<\"col-sm-12 col-md-6\"i>' + '<\"col-sm-12 col-md-6\"p>' + '>',\n      language: {\n        sLengthMenu: '_MENU_',\n        search: '',\n        searchPlaceholder: 'Search Invoice'\n      },\n      // Buttons with Dropdown\n      buttons: [{\n        text: '<i class=\"bx bx-plus me-md-1\"></i><span class=\"d-md-inline-block d-none\">Create Invoice</span>',\n        className: 'btn btn-primary',\n        action: function action(e, dt, button, config) {\n          window.location = 'app-invoice-add.html';\n        }\n      }],\n      // For responsive popup\n      responsive: {\n        details: {\n          display: $.fn.dataTable.Responsive.display.modal({\n            header: function header(row) {\n              var data = row.data();\n              return 'Details of ' + data['full_name'];\n            }\n          }),\n          type: 'column',\n          renderer: function renderer(api, rowIdx, columns) {\n            var data = $.map(columns, function (col, i) {\n              return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)\n              ? '<tr data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>' : '';\n            }).join('');\n            return data ? $('<table class=\"table\"/><tbody />').append(data) : false;\n          }\n        }\n      },\n      initComplete: function initComplete() {\n        // Adding role filter once table initialized\n        this.api().columns(7).every(function () {\n          var column = this;\n          var select = $('<select id=\"UserRole\" class=\"form-select\"><option value=\"\"> Select Status </option></select>').appendTo('.invoice_status').on('change', function () {\n            var val = $.fn.dataTable.util.escapeRegex($(this).val());\n            column.search(val ? '^' + val + '$' : '', true, false).draw();\n          });\n          column.data().unique().sort().each(function (d, j) {\n            select.append('<option value=\"' + d + '\" class=\"text-capitalize\">' + d + '</option>');\n          });\n        });\n      }\n    });\n  }\n\n  // On each datatable draw, initialize tooltip\n  dt_invoice_table.on('draw.dt', function () {\n    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n      return new bootstrap.Tooltip(tooltipTriggerEl, {\n        boundary: document.body\n      });\n    });\n  });\n\n  // Delete Record\n  $('.invoice-list-table tbody').on('click', '.delete-record', function () {\n    dt_invoice.row($(this).parents('tr')).remove().draw();\n  });\n\n  // Filter form control to default size\n  // ? setTimeout used for multilingual table initialization\n  setTimeout(function () {\n    $('.dataTables_filter .form-control').removeClass('form-control-sm');\n    $('.dataTables_length .form-select').removeClass('form-select-sm');\n  }, 300);\n});\n\n//# sourceURL=webpack://Sneat/./static/js/app-invoice-list.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/app-invoice-list.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});