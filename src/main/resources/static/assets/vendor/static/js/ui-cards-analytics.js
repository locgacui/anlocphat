/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/ui-cards-analytics.js":
/*!*****************************************!*\
  !*** ./static/js/ui-cards-analytics.js ***!
  \*****************************************/
/***/ (function() {

eval("/**\n * Card Analytics\n */\n\n\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n(function () {\n  var cardColor, headingColor, labelColor, shadeColor, borderColor, legendColor, heatMap1, heatMap2, heatMap3, heatMap4;\n  if (isDarkStyle) {\n    cardColor = config.colors_dark.cardColor;\n    headingColor = config.colors_dark.headingColor;\n    labelColor = config.colors_dark.textMuted;\n    borderColor = config.colors_dark.borderColor;\n    legendColor = config.colors_dark.bodyColor;\n    shadeColor = 'dark';\n    heatMap1 = '#4f51c0';\n    heatMap2 = '#595cd9';\n    heatMap3 = '#8789ff';\n    heatMap4 = '#c3c4ff';\n  } else {\n    cardColor = config.colors.cardColor;\n    headingColor = config.colors.headingColor;\n    labelColor = config.colors.textMuted;\n    borderColor = config.colors.borderColor;\n    legendColor = config.colors.bodyColor;\n    shadeColor = '';\n    heatMap1 = '#e1e2ff';\n    heatMap2 = '#c3c4ff';\n    heatMap3 = '#a5a7ff';\n    heatMap4 = '#696cff';\n  }\n\n  // Chart Colors\n  var chartColors = {\n    donut: {\n      series1: config.colors.success,\n      series2: 'rgba(113, 221, 55, 0.6)',\n      series3: 'rgba(113, 221, 55, 0.4)',\n      series4: 'rgba(113, 221, 55, 0.2)'\n    }\n  };\n\n  // Customer Ratings - Line Charts\n  // --------------------------------------------------------------------\n  var customerRatingsChartEl = document.querySelector('#customerRatingsChart'),\n    customerRatingsChartOptions = {\n      chart: {\n        height: 200,\n        toolbar: {\n          show: false\n        },\n        zoom: {\n          enabled: false\n        },\n        type: 'line',\n        dropShadow: {\n          enabled: true,\n          enabledOnSeries: [1],\n          top: 13,\n          left: 4,\n          blur: 3,\n          color: config.colors.primary,\n          opacity: 0.09\n        }\n      },\n      series: [{\n        name: 'Last Month',\n        data: [20, 54, 20, 38, 22, 28, 16, 19]\n      }, {\n        name: 'This Month',\n        data: [20, 32, 22, 65, 40, 46, 34, 70]\n      }],\n      stroke: {\n        curve: 'smooth',\n        dashArray: [8, 0],\n        width: [3, 4]\n      },\n      legend: {\n        show: false\n      },\n      colors: [borderColor, config.colors.primary],\n      grid: {\n        show: false,\n        borderColor: borderColor,\n        padding: {\n          top: -20,\n          bottom: -10,\n          left: 0\n        }\n      },\n      markers: {\n        size: 6,\n        colors: 'transparent',\n        strokeColors: 'transparent',\n        strokeWidth: 5,\n        hover: {\n          size: 6\n        },\n        discrete: [{\n          fillColor: config.colors.white,\n          seriesIndex: 1,\n          dataPointIndex: 7,\n          strokeColor: config.colors.primary,\n          size: 6\n        }, {\n          fillColor: config.colors.white,\n          seriesIndex: 1,\n          dataPointIndex: 3,\n          strokeColor: config.colors.black,\n          size: 6\n        }]\n      },\n      xaxis: {\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        categories: ['', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n        axisBorder: {\n          show: false\n        }\n      },\n      yaxis: {\n        show: false\n      }\n    };\n  if (_typeof(customerRatingsChartEl) !== undefined && customerRatingsChartEl !== null) {\n    var customerRatingsChart = new ApexCharts(customerRatingsChartEl, customerRatingsChartOptions);\n    customerRatingsChart.render();\n  }\n\n  // Sale Stats - Radial Bar Chart\n  // --------------------------------------------------------------------\n  var salesStatsEl = document.querySelector('#salesStats'),\n    salesStatsOptions = {\n      chart: {\n        height: 300,\n        type: 'radialBar'\n      },\n      series: [75],\n      labels: ['Sales'],\n      plotOptions: {\n        radialBar: {\n          startAngle: 0,\n          endAngle: 360,\n          strokeWidth: '70',\n          hollow: {\n            margin: 50,\n            size: '75%',\n            image: assetsPath + 'img/icons/misc/arrow-star.png',\n            imageWidth: 65,\n            imageHeight: 55,\n            imageOffsetY: -35,\n            imageClipped: false\n          },\n          track: {\n            strokeWidth: '50%',\n            background: borderColor\n          },\n          dataLabels: {\n            show: true,\n            name: {\n              offsetY: 60,\n              show: true,\n              color: legendColor,\n              fontSize: '15px'\n            },\n            value: {\n              formatter: function formatter(val) {\n                return parseInt(val) + '%';\n              },\n              offsetY: 20,\n              color: headingColor,\n              fontSize: '32px',\n              show: true\n            }\n          }\n        }\n      },\n      fill: {\n        type: 'solid',\n        colors: config.colors.success\n      },\n      stroke: {\n        lineCap: 'round'\n      },\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(salesStatsEl) !== undefined && salesStatsEl !== null) {\n    var salesStats = new ApexCharts(salesStatsEl, salesStatsOptions);\n    salesStats.render();\n  }\n\n  // Sales Analytics - Heat map chart\n  // --------------------------------------------------------------------\n  var salesAnalyticsChartEl = document.querySelector('#salesAnalyticsChart'),\n    salesAnalyticsChartConfig = {\n      chart: {\n        height: 350,\n        type: 'heatmap',\n        parentHeightOffset: 0,\n        offsetX: -10,\n        offsetY: -15,\n        toolbar: {\n          show: false\n        }\n      },\n      series: [{\n        name: '1k',\n        data: [{\n          x: 'Jan',\n          y: '250'\n        }, {\n          x: 'Feb',\n          y: '350'\n        }, {\n          x: 'Mar',\n          y: '220'\n        }, {\n          x: 'Apr',\n          y: '290'\n        }, {\n          x: 'May',\n          y: '650'\n        }, {\n          x: 'Jun',\n          y: '260'\n        }, {\n          x: 'Jul',\n          y: '274'\n        }, {\n          x: 'Aug',\n          y: '850'\n        }]\n      }, {\n        name: '2k',\n        data: [{\n          x: 'Jan',\n          y: '750'\n        }, {\n          x: 'Feb',\n          y: '3350'\n        }, {\n          x: 'Mar',\n          y: '1220'\n        }, {\n          x: 'Apr',\n          y: '1290'\n        }, {\n          x: 'May',\n          y: '1650'\n        }, {\n          x: 'Jun',\n          y: '1260'\n        }, {\n          x: 'Jul',\n          y: '1274'\n        }, {\n          x: 'Aug',\n          y: '850'\n        }]\n      }, {\n        name: '3k',\n        data: [{\n          x: 'Jan',\n          y: '375'\n        }, {\n          x: 'Feb',\n          y: '1350'\n        }, {\n          x: 'Mar',\n          y: '3220'\n        }, {\n          x: 'Apr',\n          y: '2290'\n        }, {\n          x: 'May',\n          y: '2650'\n        }, {\n          x: 'Jun',\n          y: '2260'\n        }, {\n          x: 'Jul',\n          y: '1274'\n        }, {\n          x: 'Aug',\n          y: '815'\n        }]\n      }, {\n        name: '4k',\n        data: [{\n          x: 'Jan',\n          y: '575'\n        }, {\n          x: 'Feb',\n          y: '1350'\n        }, {\n          x: 'Mar',\n          y: '2220'\n        }, {\n          x: 'Apr',\n          y: '3290'\n        }, {\n          x: 'May',\n          y: '3650'\n        }, {\n          x: 'Jun',\n          y: '2260'\n        }, {\n          x: 'Jul',\n          y: '1274'\n        }, {\n          x: 'Aug',\n          y: '315'\n        }]\n      }, {\n        name: '5k',\n        data: [{\n          x: 'Jan',\n          y: '875'\n        }, {\n          x: 'Feb',\n          y: '1350'\n        }, {\n          x: 'Mar',\n          y: '2220'\n        }, {\n          x: 'Apr',\n          y: '3290'\n        }, {\n          x: 'May',\n          y: '3650'\n        }, {\n          x: 'Jun',\n          y: '2260'\n        }, {\n          x: 'Jul',\n          y: '1274'\n        }, {\n          x: 'Aug',\n          y: '965'\n        }]\n      }, {\n        name: '6k',\n        data: [{\n          x: 'Jan',\n          y: '575'\n        }, {\n          x: 'Feb',\n          y: '1350'\n        }, {\n          x: 'Mar',\n          y: '2220'\n        }, {\n          x: 'Apr',\n          y: '2290'\n        }, {\n          x: 'May',\n          y: '2650'\n        }, {\n          x: 'Jun',\n          y: '3260'\n        }, {\n          x: 'Jul',\n          y: '1274'\n        }, {\n          x: 'Aug',\n          y: '815'\n        }]\n      }, {\n        name: '7k',\n        data: [{\n          x: 'Jan',\n          y: '575'\n        }, {\n          x: 'Feb',\n          y: '1350'\n        }, {\n          x: 'Mar',\n          y: '1220'\n        }, {\n          x: 'Apr',\n          y: '1290'\n        }, {\n          x: 'May',\n          y: '1650'\n        }, {\n          x: 'Jun',\n          y: '1260'\n        }, {\n          x: 'Jul',\n          y: '3274'\n        }, {\n          x: 'Aug',\n          y: '815'\n        }]\n      }, {\n        name: '8k',\n        data: [{\n          x: 'Jan',\n          y: '575'\n        }, {\n          x: 'Feb',\n          y: '350'\n        }, {\n          x: 'Mar',\n          y: '220'\n        }, {\n          x: 'Apr',\n          y: '290'\n        }, {\n          x: 'May',\n          y: '650'\n        }, {\n          x: 'Jun',\n          y: '260'\n        }, {\n          x: 'Jul',\n          y: '274'\n        }, {\n          x: 'Aug',\n          y: '815'\n        }]\n      }],\n      plotOptions: {\n        heatmap: {\n          enableShades: false,\n          radius: '6px',\n          colorScale: {\n            ranges: [{\n              from: 0,\n              to: 1000,\n              name: '1k',\n              color: heatMap1\n            }, {\n              from: 1001,\n              to: 2000,\n              name: '2k',\n              color: heatMap2\n            }, {\n              from: 2001,\n              to: 3000,\n              name: '3k',\n              color: heatMap3\n            }, {\n              from: 3001,\n              to: 4000,\n              name: '4k',\n              color: heatMap4\n            }]\n          }\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 4,\n        colors: [cardColor]\n      },\n      legend: {\n        show: false\n      },\n      grid: {\n        show: false,\n        padding: {\n          top: -15,\n          left: 10,\n          bottom: -7\n        }\n      },\n      xaxis: {\n        labels: {\n          show: true,\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          }\n        },\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          }\n        }\n      },\n      responsive: [{\n        breakpoint: 1441,\n        options: {\n          chart: {\n            height: '325px'\n          },\n          grid: {\n            padding: {\n              right: -15\n            }\n          }\n        }\n      }, {\n        breakpoint: 1045,\n        options: {\n          chart: {\n            height: '300px'\n          },\n          grid: {\n            padding: {\n              right: -50\n            }\n          }\n        }\n      }, {\n        breakpoint: 992,\n        options: {\n          chart: {\n            height: '320px'\n          },\n          grid: {\n            padding: {\n              right: -50\n            }\n          }\n        }\n      }, {\n        breakpoint: 767,\n        options: {\n          chart: {\n            height: '400px'\n          },\n          grid: {\n            padding: {\n              right: 0\n            }\n          }\n        }\n      }, {\n        breakpoint: 568,\n        options: {\n          chart: {\n            height: '330px'\n          },\n          grid: {\n            padding: {\n              right: -20\n            }\n          }\n        }\n      }],\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(salesAnalyticsChartEl) !== undefined && salesAnalyticsChartEl !== null) {\n    var salesAnalyticsChart = new ApexCharts(salesAnalyticsChartEl, salesAnalyticsChartConfig);\n    salesAnalyticsChart.render();\n  }\n\n  // Overview & Sales Activity - Staked Bar Chart\n  // --------------------------------------------------------------------\n  var salesActivityChartEl = document.querySelector('#salesActivityChart'),\n    salesActivityChartConfig = {\n      chart: {\n        type: 'bar',\n        height: 235,\n        stacked: true,\n        toolbar: {\n          show: false\n        }\n      },\n      series: [{\n        name: 'PRODUCT A',\n        data: [75, 50, 55, 60, 48, 82, 59]\n      }, {\n        name: 'PRODUCT B',\n        data: [25, 29, 32, 35, 34, 18, 30]\n      }],\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: '40%',\n          borderRadius: 10,\n          startingShape: 'rounded',\n          endingShape: 'rounded'\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth',\n        width: 6,\n        lineCap: 'round',\n        colors: [cardColor]\n      },\n      legend: {\n        show: false\n      },\n      colors: [config.colors.danger, '#435971'],\n      fill: {\n        opacity: 1\n      },\n      grid: {\n        show: false,\n        strokeDashArray: 7,\n        padding: {\n          top: -40,\n          left: 0,\n          right: 0\n        }\n      },\n      xaxis: {\n        categories: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        labels: {\n          show: true,\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          }\n        },\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        }\n      },\n      yaxis: {\n        show: false\n      },\n      responsive: [{\n        breakpoint: 1440,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '50%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1300,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 11,\n              columnWidth: '55%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1200,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '45%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1040,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '50%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 992,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 12,\n              columnWidth: '40%'\n            }\n          },\n          chart: {\n            type: 'bar',\n            height: 320\n          }\n        }\n      }, {\n        breakpoint: 768,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 11,\n              columnWidth: '25%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 576,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '35%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 440,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '45%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 360,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 8,\n              columnWidth: '50%'\n            }\n          }\n        }\n      }],\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(salesActivityChartEl) !== undefined && salesActivityChartEl !== null) {\n    var salesActivityChart = new ApexCharts(salesActivityChartEl, salesActivityChartConfig);\n    salesActivityChart.render();\n  }\n\n  // Total Income - Area Chart\n  // --------------------------------------------------------------------\n  var totalIncomeEl = document.querySelector('#totalIncomeChart'),\n    totalIncomeConfig = {\n      chart: {\n        height: 220,\n        type: 'area',\n        toolbar: false,\n        dropShadow: {\n          enabled: true,\n          top: 14,\n          left: 2,\n          blur: 3,\n          color: config.colors.primary,\n          opacity: 0.15\n        }\n      },\n      series: [{\n        data: [3350, 3350, 4800, 4800, 2950, 2950, 1800, 1800, 3750, 3750, 5700, 5700]\n      }],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 3,\n        curve: 'straight'\n      },\n      colors: [config.colors.primary],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: shadeColor,\n          shadeIntensity: 0.8,\n          opacityFrom: 0.7,\n          opacityTo: 0.25,\n          stops: [0, 95, 100]\n        }\n      },\n      grid: {\n        show: true,\n        borderColor: borderColor,\n        padding: {\n          top: -15,\n          bottom: -10,\n          left: 0,\n          right: 0\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        labels: {\n          offsetX: 0,\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          }\n        },\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          offsetX: -15,\n          formatter: function formatter(val) {\n            return '$' + parseInt(val / 1000) + 'k';\n          },\n          style: {\n            fontSize: '13px',\n            colors: labelColor\n          }\n        },\n        min: 1000,\n        max: 6000,\n        tickAmount: 5\n      }\n    };\n  if (_typeof(totalIncomeEl) !== undefined && totalIncomeEl !== null) {\n    var totalIncome = new ApexCharts(totalIncomeEl, totalIncomeConfig);\n    totalIncome.render();\n  }\n\n  // Income Chart - Area chart\n  // --------------------------------------------------------------------\n  var incomeChartEl = document.querySelector('#incomeChart'),\n    incomeChartConfig = {\n      series: [{\n        data: [24, 21, 30, 22, 42, 26, 35, 29]\n      }],\n      chart: {\n        height: 200,\n        parentHeightOffset: 0,\n        parentWidthOffset: 0,\n        toolbar: {\n          show: false\n        },\n        type: 'area'\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 2,\n        curve: 'smooth'\n      },\n      legend: {\n        show: false\n      },\n      markers: {\n        size: 6,\n        colors: 'transparent',\n        strokeColors: 'transparent',\n        strokeWidth: 4,\n        discrete: [{\n          fillColor: config.colors.white,\n          seriesIndex: 0,\n          dataPointIndex: 7,\n          strokeColor: config.colors.primary,\n          strokeWidth: 2,\n          size: 6,\n          radius: 8\n        }],\n        hover: {\n          size: 7\n        }\n      },\n      colors: [config.colors.primary],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: shadeColor,\n          shadeIntensity: 0.6,\n          opacityFrom: 0.5,\n          opacityTo: 0.25,\n          stops: [0, 95, 100]\n        }\n      },\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 3,\n        padding: {\n          top: -20,\n          bottom: -8,\n          left: -10,\n          right: 8\n        }\n      },\n      xaxis: {\n        categories: ['', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          show: true,\n          style: {\n            fontSize: '13px',\n            colors: labelColor\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        },\n        min: 10,\n        max: 50,\n        tickAmount: 4\n      }\n    };\n  if (_typeof(incomeChartEl) !== undefined && incomeChartEl !== null) {\n    var incomeChart = new ApexCharts(incomeChartEl, incomeChartConfig);\n    incomeChart.render();\n  }\n\n  // Expenses Mini Chart - Radial Chart\n  // --------------------------------------------------------------------\n  var weeklyExpensesEl = document.querySelector('#expensesOfWeek'),\n    weeklyExpensesConfig = {\n      series: [65],\n      chart: {\n        width: 50,\n        height: 50,\n        type: 'radialBar'\n      },\n      plotOptions: {\n        radialBar: {\n          startAngle: 0,\n          endAngle: 360,\n          strokeWidth: '8',\n          hollow: {\n            margin: 2,\n            size: '40%'\n          },\n          track: {\n            strokeWidth: '50%',\n            background: borderColor\n          },\n          dataLabels: {\n            show: true,\n            name: {\n              show: false\n            },\n            value: {\n              formatter: function formatter(val) {\n                return '$' + parseInt(val);\n              },\n              offsetY: 5,\n              color: '#697a8d',\n              fontSize: '13px',\n              show: true\n            }\n          }\n        }\n      },\n      fill: {\n        type: 'solid',\n        colors: config.colors.primary\n      },\n      stroke: {\n        lineCap: 'round'\n      },\n      grid: {\n        padding: {\n          top: -10,\n          bottom: -15,\n          left: -10,\n          right: -10\n        }\n      },\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(weeklyExpensesEl) !== undefined && weeklyExpensesEl !== null) {\n    var weeklyExpenses = new ApexCharts(weeklyExpensesEl, weeklyExpensesConfig);\n    weeklyExpenses.render();\n  }\n\n  // Performance - Radar Chart\n  // --------------------------------------------------------------------\n  var performanceChartEl = document.querySelector('#performanceChart'),\n    performanceChartConfig = {\n      series: [{\n        name: 'Income',\n        data: [26, 29, 31, 40, 29, 24]\n      }, {\n        name: 'Earning',\n        data: [30, 26, 24, 26, 24, 40]\n      }],\n      chart: {\n        height: 270,\n        type: 'radar',\n        toolbar: {\n          show: false\n        },\n        dropShadow: {\n          enabled: true,\n          enabledOnSeries: undefined,\n          top: 6,\n          left: 0,\n          blur: 6,\n          color: '#000',\n          opacity: 0.14\n        }\n      },\n      plotOptions: {\n        radar: {\n          polygons: {\n            strokeColors: borderColor,\n            connectorColors: borderColor\n          }\n        }\n      },\n      stroke: {\n        show: false,\n        width: 0\n      },\n      legend: {\n        show: true,\n        fontSize: '13px',\n        position: 'bottom',\n        labels: {\n          colors: legendColor,\n          useSeriesColors: false\n        },\n        markers: {\n          height: 10,\n          width: 10,\n          offsetX: -3\n        },\n        itemMargin: {\n          horizontal: 10\n        },\n        onItemHover: {\n          highlightDataSeries: false\n        }\n      },\n      colors: [config.colors.primary, config.colors.info],\n      fill: {\n        opacity: [1, 0.85]\n      },\n      markers: {\n        size: 0\n      },\n      grid: {\n        show: false,\n        padding: {\n          top: -8,\n          bottom: -5\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n        labels: {\n          show: true,\n          style: {\n            colors: [labelColor, labelColor, labelColor, labelColor, labelColor, labelColor],\n            fontSize: '13px',\n            fontFamily: 'Public Sans'\n          }\n        }\n      },\n      yaxis: {\n        show: false,\n        min: 0,\n        max: 40,\n        tickAmount: 4\n      }\n    };\n  if (_typeof(performanceChartEl) !== undefined && performanceChartEl !== null) {\n    var performanceChart = new ApexCharts(performanceChartEl, performanceChartConfig);\n    performanceChart.render();\n  }\n\n  // Total Balance - Line Chart\n  // --------------------------------------------------------------------\n  var totalBalanceChartEl = document.querySelector('#totalBalanceChart'),\n    totalBalanceChartConfig = {\n      series: [{\n        data: [137, 210, 160, 275, 205, 315]\n      }],\n      chart: {\n        height: 225,\n        parentHeightOffset: 0,\n        parentWidthOffset: 0,\n        type: 'line',\n        dropShadow: {\n          enabled: true,\n          top: 10,\n          left: 5,\n          blur: 3,\n          color: config.colors.warning,\n          opacity: 0.15\n        },\n        toolbar: {\n          show: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 3,\n        curve: 'smooth'\n      },\n      legend: {\n        show: false\n      },\n      colors: [config.colors.warning],\n      markers: {\n        size: 6,\n        colors: 'transparent',\n        strokeColors: 'transparent',\n        strokeWidth: 4,\n        discrete: [{\n          fillColor: config.colors.white,\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          strokeColor: config.colors.warning,\n          strokeWidth: 8,\n          size: 6,\n          radius: 8\n        }],\n        hover: {\n          size: 7\n        }\n      },\n      grid: {\n        show: false,\n        padding: {\n          top: -10,\n          left: 0,\n          right: 0,\n          bottom: 10\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          show: true,\n          style: {\n            fontSize: '13px',\n            colors: labelColor\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      }\n    };\n  if (_typeof(totalBalanceChartEl) !== undefined && totalBalanceChartEl !== null) {\n    var totalBalanceChart = new ApexCharts(totalBalanceChartEl, totalBalanceChartConfig);\n    totalBalanceChart.render();\n  }\n\n  // Session Overview  Chart - Radial Bar\n  // --------------------------------------------------------------------\n  var sessionOverviewChartEl = document.querySelector('#sessionOverviewChart'),\n    sessionOverviewChartOptions = {\n      series: [78],\n      labels: ['Loss Rate'],\n      chart: {\n        height: 200,\n        type: 'radialBar'\n      },\n      colors: [config.colors.warning],\n      plotOptions: {\n        radialBar: {\n          offsetY: 0,\n          startAngle: -140,\n          endAngle: 140,\n          hollow: {\n            size: '70%'\n          },\n          track: {\n            strokeWidth: '40%',\n            background: borderColor\n          },\n          dataLabels: {\n            name: {\n              offsetY: 60,\n              color: legendColor,\n              fontSize: '13px',\n              fontFamily: 'Public Sans'\n            },\n            value: {\n              offsetY: -10,\n              color: headingColor,\n              fontSize: '26px',\n              fontWeight: '500',\n              fontFamily: 'Public Sans'\n            }\n          }\n        }\n      },\n      stroke: {\n        lineCap: 'round'\n      },\n      grid: {\n        padding: {\n          bottom: -20\n        }\n      },\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(sessionOverviewChartEl) !== undefined && sessionOverviewChartEl !== null) {\n    var sessionOverviewChart = new ApexCharts(sessionOverviewChartEl, sessionOverviewChartOptions);\n    sessionOverviewChart.render();\n  }\n\n  // Score Chart - Radial Bar Chart\n  // --------------------------------------------------------------------\n  var scoreChartEl = document.querySelector('#scoreChart'),\n    scoreChartOptions = {\n      series: [78],\n      labels: ['Out of 100'],\n      chart: {\n        height: 300,\n        type: 'radialBar'\n      },\n      plotOptions: {\n        radialBar: {\n          size: 150,\n          offsetY: 10,\n          startAngle: -150,\n          endAngle: 150,\n          hollow: {\n            size: '55%'\n          },\n          track: {\n            background: cardColor,\n            strokeWidth: '100%'\n          },\n          dataLabels: {\n            name: {\n              offsetY: 15,\n              color: legendColor,\n              fontSize: '13px',\n              fontFamily: 'Public Sans'\n            },\n            value: {\n              offsetY: -20,\n              color: headingColor,\n              fontSize: '22px',\n              fontWeight: '500',\n              fontFamily: 'Public Sans'\n            }\n          }\n        }\n      },\n      colors: [config.colors.primary],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          shadeIntensity: 0.5,\n          gradientToColors: [config.colors.primary],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 0.6,\n          stops: [30, 70, 100]\n        }\n      },\n      stroke: {\n        dashArray: 5\n      },\n      grid: {\n        padding: {\n          top: -35,\n          bottom: -10\n        }\n      },\n      responsive: [{\n        breakpoint: 991,\n        options: {\n          chart: {\n            height: '350px'\n          }\n        }\n      }],\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(scoreChartEl) !== undefined && scoreChartEl !== null) {\n    var scoreChart = new ApexCharts(scoreChartEl, scoreChartOptions);\n    scoreChart.render();\n  }\n\n  // Total Revenue Report Chart - Bar Chart\n  // --------------------------------------------------------------------\n  var totalRevenueChartEl = document.querySelector('#totalRevenueChart'),\n    totalRevenueChartOptions = {\n      series: [{\n        name: '2021',\n        data: [18, 7, 15, 29, 18, 12, 9]\n      }, {\n        name: '2020',\n        data: [-13, -18, -9, -14, -5, -17, -15]\n      }],\n      chart: {\n        height: 300,\n        stacked: true,\n        type: 'bar',\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: '30%',\n          borderRadius: 8,\n          startingShape: 'rounded',\n          endingShape: 'rounded'\n        }\n      },\n      colors: [config.colors.primary, config.colors.info],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth',\n        width: 6,\n        lineCap: 'round',\n        colors: [cardColor]\n      },\n      legend: {\n        show: true,\n        horizontalAlign: 'left',\n        position: 'top',\n        markers: {\n          height: 8,\n          width: 8,\n          radius: 12,\n          offsetX: -3\n        },\n        labels: {\n          colors: legendColor\n        },\n        itemMargin: {\n          horizontal: 10\n        }\n      },\n      grid: {\n        borderColor: borderColor,\n        padding: {\n          top: 0,\n          bottom: -8,\n          left: 20,\n          right: 20\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n        labels: {\n          style: {\n            fontSize: '13px',\n            colors: labelColor\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            fontSize: '13px',\n            colors: labelColor\n          }\n        }\n      },\n      responsive: [{\n        breakpoint: 1700,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '35%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1440,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 12,\n              columnWidth: '43%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1300,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 11,\n              columnWidth: '45%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1200,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 11,\n              columnWidth: '37%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1040,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 12,\n              columnWidth: '45%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 991,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 12,\n              columnWidth: '33%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 768,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 11,\n              columnWidth: '28%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 640,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 11,\n              columnWidth: '30%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 576,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '38%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 440,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '50%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 380,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 9,\n              columnWidth: '60%'\n            }\n          }\n        }\n      }],\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(totalRevenueChartEl) !== undefined && totalRevenueChartEl !== null) {\n    var totalRevenueChart = new ApexCharts(totalRevenueChartEl, totalRevenueChartOptions);\n    totalRevenueChart.render();\n  }\n\n  // Growth Chart - Radial Bar Chart\n  // --------------------------------------------------------------------\n  var growthChartEl = document.querySelector('#growthChart'),\n    growthChartOptions = {\n      series: [78],\n      labels: ['Growth'],\n      chart: {\n        height: 240,\n        type: 'radialBar'\n      },\n      plotOptions: {\n        radialBar: {\n          size: 150,\n          offsetY: 10,\n          startAngle: -150,\n          endAngle: 150,\n          hollow: {\n            size: '55%'\n          },\n          track: {\n            background: cardColor,\n            strokeWidth: '100%'\n          },\n          dataLabels: {\n            name: {\n              offsetY: 15,\n              color: legendColor,\n              fontSize: '15px',\n              fontWeight: '500',\n              fontFamily: 'Public Sans'\n            },\n            value: {\n              offsetY: -25,\n              color: headingColor,\n              fontSize: '22px',\n              fontWeight: '500',\n              fontFamily: 'Public Sans'\n            }\n          }\n        }\n      },\n      colors: [config.colors.primary],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          shadeIntensity: 0.5,\n          gradientToColors: [config.colors.primary],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 0.6,\n          stops: [30, 70, 100]\n        }\n      },\n      stroke: {\n        dashArray: 5\n      },\n      grid: {\n        padding: {\n          top: -35,\n          bottom: -10\n        }\n      },\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(growthChartEl) !== undefined && growthChartEl !== null) {\n    var growthChart = new ApexCharts(growthChartEl, growthChartOptions);\n    growthChart.render();\n  }\n  // datatbale horizontalBar chart\n\n  var horizontalBarChartEl = document.querySelector('#horizontalBarChart'),\n    horizontalBarChartConfig = {\n      chart: {\n        height: 270,\n        type: 'bar',\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n          barHeight: '70%',\n          distributed: true,\n          startingShape: 'rounded',\n          borderRadius: 7\n        }\n      },\n      grid: {\n        strokeDashArray: 10,\n        borderColor: borderColor,\n        xaxis: {\n          lines: {\n            show: true\n          }\n        },\n        yaxis: {\n          lines: {\n            show: false\n          }\n        },\n        padding: {\n          top: -35,\n          bottom: -12\n        }\n      },\n      colors: [config.colors.primary, config.colors.info, config.colors.success, config.colors.secondary, config.colors.danger, config.colors.warning],\n      dataLabels: {\n        enabled: true,\n        style: {\n          colors: ['#fff'],\n          fontWeight: 200,\n          fontSize: '13px',\n          fontFamily: 'Public Sans'\n        },\n        formatter: function formatter(val, opts) {\n          return horizontalBarChartConfig.labels[opts.dataPointIndex];\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: false\n        }\n      },\n      labels: ['UI Design', 'UX Design', 'Music', 'Animation', 'React', 'SEO'],\n      series: [{\n        data: [35, 20, 14, 12, 10, 9]\n      }],\n      xaxis: {\n        categories: ['6', '5', '4', '3', '2', '1'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          },\n          formatter: function formatter(val) {\n            return \"\".concat(val, \"%\");\n          }\n        }\n      },\n      yaxis: {\n        max: 35,\n        labels: {\n          style: {\n            colors: [labelColor],\n            fontFamily: 'Public Sans',\n            fontSize: '13px'\n          }\n        }\n      },\n      tooltip: {\n        enabled: true,\n        style: {\n          fontSize: '12px'\n        },\n        onDatasetHover: {\n          highlightDataSeries: false\n        },\n        custom: function custom(_ref) {\n          var series = _ref.series,\n            seriesIndex = _ref.seriesIndex,\n            dataPointIndex = _ref.dataPointIndex,\n            w = _ref.w;\n          return '<div class=\"px-3 py-2\">' + '<span>' + series[seriesIndex][dataPointIndex] + '%</span>' + '</div>';\n        }\n      },\n      legend: {\n        show: false\n      }\n    };\n  if (_typeof(horizontalBarChartEl) !== undefined && horizontalBarChartEl !== null) {\n    var horizontalBarChart = new ApexCharts(horizontalBarChartEl, horizontalBarChartConfig);\n    horizontalBarChart.render();\n  }\n\n  // Reasons for delivery exceptions Chart\n  // --------------------------------------------------------------------\n  var deliveryExceptionsChartE1 = document.querySelector('#deliveryExceptionsChart'),\n    deliveryExceptionsChartConfig = {\n      chart: {\n        height: 420,\n        parentHeightOffset: 0,\n        type: 'donut'\n      },\n      labels: ['Incorrect address', 'Weather conditions', 'Federal Holidays', 'Damage during transit'],\n      series: [13, 25, 22, 40],\n      colors: [chartColors.donut.series1, chartColors.donut.series2, chartColors.donut.series3, chartColors.donut.series4],\n      stroke: {\n        width: 0\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function formatter(val, opt) {\n          return parseInt(val) + '%';\n        }\n      },\n      legend: {\n        show: true,\n        position: 'bottom',\n        offsetY: 10,\n        markers: {\n          width: 8,\n          height: 8,\n          offsetX: -3\n        },\n        itemMargin: {\n          horizontal: 15,\n          vertical: 5\n        },\n        fontSize: '13px',\n        fontFamily: 'Public Sans',\n        fontWeight: 400,\n        labels: {\n          colors: headingColor,\n          useSeriesColors: false\n        }\n      },\n      tooltip: {\n        theme: false\n      },\n      grid: {\n        padding: {\n          top: 15\n        }\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: '75%',\n            labels: {\n              show: true,\n              value: {\n                fontSize: '26px',\n                fontFamily: 'Public Sans',\n                color: headingColor,\n                fontWeight: 500,\n                offsetY: -30,\n                formatter: function formatter(val) {\n                  return parseInt(val) + '%';\n                }\n              },\n              name: {\n                offsetY: 20,\n                fontFamily: 'Public Sans'\n              },\n              total: {\n                show: true,\n                fontSize: '0.7rem',\n                label: 'AVG. Exceptions',\n                color: labelColor,\n                formatter: function formatter(w) {\n                  return '30%';\n                }\n              }\n            }\n          }\n        }\n      },\n      responsive: [{\n        breakpoint: 420,\n        options: {\n          chart: {\n            height: 360\n          }\n        }\n      }]\n    };\n  if (_typeof(deliveryExceptionsChartE1) !== undefined && deliveryExceptionsChartE1 !== null) {\n    var deliveryExceptionsChart = new ApexCharts(deliveryExceptionsChartE1, deliveryExceptionsChartConfig);\n    deliveryExceptionsChart.render();\n  }\n})();\n\n//# sourceURL=webpack://Sneat/./static/js/ui-cards-analytics.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/ui-cards-analytics.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});