/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/app-ecommerce-dashboard.js":
/*!**********************************************!*\
  !*** ./static/js/app-ecommerce-dashboard.js ***!
  \**********************************************/
/***/ (function() {

eval("/**\n * Dashboard eCommerce\n */\n\n\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n(function () {\n  var cardColor, headingColor, labelColor, shadeColor, borderColor, heatMap1, heatMap2, heatMap3, heatMap4;\n  if (isDarkStyle) {\n    cardColor = config.colors_dark.cardColor;\n    headingColor = config.colors_dark.headingColor;\n    labelColor = config.colors_dark.textMuted;\n    borderColor = config.colors_dark.borderColor;\n    shadeColor = 'dark';\n    heatMap1 = '#4f51c0';\n    heatMap2 = '#595cd9';\n    heatMap3 = '#8789ff';\n    heatMap4 = '#c3c4ff';\n  } else {\n    cardColor = config.colors.cardColor;\n    headingColor = config.colors.headingColor;\n    labelColor = config.colors.textMuted;\n    borderColor = config.colors.borderColor;\n    shadeColor = '';\n    heatMap1 = '#e1e2ff';\n    heatMap2 = '#c3c4ff';\n    heatMap3 = '#a5a7ff';\n    heatMap4 = '#696cff';\n  }\n\n  // Visitor Bar Chart\n  // --------------------------------------------------------------------\n  var visitorBarChartEl = document.querySelector('#visitorsChart'),\n    visitorBarChartConfig = {\n      chart: {\n        height: 120,\n        width: 200,\n        parentHeightOffset: 0,\n        type: 'bar',\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          barHeight: '75%',\n          columnWidth: '60%',\n          startingShape: 'rounded',\n          endingShape: 'rounded',\n          borderRadius: 9,\n          distributed: true\n        }\n      },\n      grid: {\n        show: false,\n        padding: {\n          top: -25,\n          bottom: -12\n        }\n      },\n      colors: [config.colors_label.primary, config.colors_label.primary, config.colors_label.primary, config.colors_label.primary, config.colors_label.primary, config.colors.primary, config.colors_label.primary],\n      dataLabels: {\n        enabled: false\n      },\n      series: [{\n        data: [40, 95, 60, 45, 90, 50, 75]\n      }],\n      legend: {\n        show: false\n      },\n      responsive: [{\n        breakpoint: 1440,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 9,\n              columnWidth: '60%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1300,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 9,\n              columnWidth: '60%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1200,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 8,\n              columnWidth: '50%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1040,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 8,\n              columnWidth: '50%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 991,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 8,\n              columnWidth: '50%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 420,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 8,\n              columnWidth: '50%'\n            }\n          }\n        }\n      }],\n      xaxis: {\n        categories: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      }\n    };\n  if (_typeof(visitorBarChartEl) !== undefined && visitorBarChartEl !== null) {\n    var visitorBarChart = new ApexCharts(visitorBarChartEl, visitorBarChartConfig);\n    visitorBarChart.render();\n  }\n\n  // Activity Area Chart\n  // --------------------------------------------------------------------\n  var activityAreaChartEl = document.querySelector('#activityChart'),\n    activityAreaChartConfig = {\n      chart: {\n        height: 120,\n        width: 220,\n        parentHeightOffset: 0,\n        toolbar: {\n          show: false\n        },\n        type: 'area'\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 2,\n        curve: 'smooth'\n      },\n      series: [{\n        data: [15, 20, 14, 22, 17, 40, 12, 35, 25]\n      }],\n      colors: [config.colors.success],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: shadeColor,\n          shadeIntensity: 0.8,\n          opacityFrom: 0.8,\n          opacityTo: 0.25,\n          stops: [0, 85, 100]\n        }\n      },\n      grid: {\n        show: false,\n        padding: {\n          top: -20,\n          bottom: -8\n        }\n      },\n      legend: {\n        show: false\n      },\n      xaxis: {\n        categories: ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          style: {\n            fontSize: '13px',\n            colors: labelColor\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      }\n    };\n  if (_typeof(activityAreaChartEl) !== undefined && activityAreaChartEl !== null) {\n    var activityAreaChart = new ApexCharts(activityAreaChartEl, activityAreaChartConfig);\n    activityAreaChart.render();\n  }\n\n  // Profit Bar Chart\n  // --------------------------------------------------------------------\n  var profitBarChartEl = document.querySelector('#profitChart'),\n    profitBarChartConfig = {\n      series: [{\n        data: [58, 28, 50, 80]\n      }, {\n        data: [50, 22, 65, 72]\n      }],\n      chart: {\n        type: 'bar',\n        height: 80,\n        toolbar: {\n          tools: {\n            download: false\n          }\n        }\n      },\n      plotOptions: {\n        bar: {\n          columnWidth: '65%',\n          startingShape: 'rounded',\n          endingShape: 'rounded',\n          borderRadius: 3,\n          dataLabels: {\n            show: false\n          }\n        }\n      },\n      grid: {\n        show: false,\n        padding: {\n          top: -30,\n          bottom: -12,\n          left: -10,\n          right: 0\n        }\n      },\n      colors: [config.colors.success, config.colors_label.success],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: true,\n        width: 5,\n        colors: labelColor\n      },\n      legend: {\n        show: false\n      },\n      xaxis: {\n        categories: ['Jan', 'Apr', 'Jul', 'Oct'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      }\n    };\n  if (_typeof(profitBarChartEl) !== undefined && profitBarChartEl !== null) {\n    var profitBarChart = new ApexCharts(profitBarChartEl, profitBarChartConfig);\n    profitBarChart.render();\n  }\n\n  // Total Sales Radial Bar Chart\n  // --------------------------------------------------------------------\n  var expensesRadialChartEl = document.querySelector('#expensesChart'),\n    expensesRadialChartConfig = {\n      chart: {\n        height: 130,\n        sparkline: {\n          enabled: true\n        },\n        parentHeightOffset: 0,\n        type: 'radialBar'\n      },\n      colors: [config.colors.primary],\n      series: [78],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          hollow: {\n            size: '55%'\n          },\n          track: {\n            background: config.colors_label.secondary\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              fontSize: '22px',\n              color: headingColor,\n              fontWeight: 500,\n              offsetY: 0\n            }\n          }\n        }\n      },\n      grid: {\n        show: false,\n        padding: {\n          left: -10,\n          right: -10,\n          top: -10\n        }\n      },\n      stroke: {\n        lineCap: 'round'\n      },\n      labels: ['Progress']\n    };\n  if (_typeof(expensesRadialChartEl) !== undefined && expensesRadialChartEl !== null) {\n    var expensesRadialChart = new ApexCharts(expensesRadialChartEl, expensesRadialChartConfig);\n    expensesRadialChart.render();\n  }\n\n  // Total Income - Area Chart\n  // --------------------------------------------------------------------\n  var totalIncomeEl = document.querySelector('#totalIncomeChart'),\n    totalIncomeConfig = {\n      chart: {\n        height: 250,\n        type: 'area',\n        toolbar: false,\n        dropShadow: {\n          enabled: true,\n          top: 14,\n          left: 2,\n          blur: 3,\n          color: config.colors.primary,\n          opacity: 0.15\n        }\n      },\n      series: [{\n        data: [3350, 3350, 4800, 4800, 2950, 2950, 1800, 1800, 3750, 3750, 5700, 5700]\n      }],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 3,\n        curve: 'straight'\n      },\n      colors: [config.colors.primary],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: shadeColor,\n          shadeIntensity: 0.8,\n          opacityFrom: 0.7,\n          opacityTo: 0.25,\n          stops: [0, 95, 100]\n        }\n      },\n      grid: {\n        show: true,\n        borderColor: borderColor,\n        padding: {\n          top: -15,\n          bottom: -10,\n          left: 0,\n          right: 0\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        labels: {\n          offsetX: 0,\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          }\n        },\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          offsetX: -15,\n          formatter: function formatter(val) {\n            return '$' + parseInt(val / 1000) + 'k';\n          },\n          style: {\n            fontSize: '13px',\n            colors: labelColor\n          }\n        },\n        min: 1000,\n        max: 6000,\n        tickAmount: 5\n      }\n    };\n  if (_typeof(totalIncomeEl) !== undefined && totalIncomeEl !== null) {\n    var totalIncome = new ApexCharts(totalIncomeEl, totalIncomeConfig);\n    totalIncome.render();\n  }\n\n  // Performance - Radar Chart\n  // --------------------------------------------------------------------\n  var performanceChartEl = document.querySelector('#performanceChart'),\n    performanceChartConfig = {\n      series: [{\n        name: 'Income',\n        data: [26, 29, 31, 40, 29, 24]\n      }, {\n        name: 'Earning',\n        data: [30, 26, 24, 26, 24, 40]\n      }],\n      chart: {\n        height: 270,\n        type: 'radar',\n        toolbar: {\n          show: false\n        },\n        dropShadow: {\n          enabled: true,\n          enabledOnSeries: undefined,\n          top: 6,\n          left: 0,\n          blur: 6,\n          color: '#000',\n          opacity: 0.14\n        }\n      },\n      plotOptions: {\n        radar: {\n          polygons: {\n            strokeColors: borderColor,\n            connectorColors: borderColor\n          }\n        }\n      },\n      stroke: {\n        show: false,\n        width: 0\n      },\n      legend: {\n        show: true,\n        fontSize: '13px',\n        position: 'bottom',\n        labels: {\n          colors: '#aab3bf',\n          useSeriesColors: false\n        },\n        markers: {\n          height: 10,\n          width: 10,\n          offsetX: -3\n        },\n        itemMargin: {\n          horizontal: 10\n        },\n        onItemHover: {\n          highlightDataSeries: false\n        }\n      },\n      colors: [config.colors.primary, config.colors.info],\n      fill: {\n        opacity: [1, 0.85]\n      },\n      markers: {\n        size: 0\n      },\n      grid: {\n        show: false,\n        padding: {\n          top: -8,\n          bottom: -5\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n        labels: {\n          show: true,\n          style: {\n            colors: [labelColor, labelColor, labelColor, labelColor, labelColor, labelColor],\n            fontSize: '13px',\n            fontFamily: 'Public Sans'\n          }\n        }\n      },\n      yaxis: {\n        show: false,\n        min: 0,\n        max: 40,\n        tickAmount: 4\n      }\n    };\n  if (_typeof(performanceChartEl) !== undefined && performanceChartEl !== null) {\n    var performanceChart = new ApexCharts(performanceChartEl, performanceChartConfig);\n    performanceChart.render();\n  }\n\n  // Conversion rate Line Chart\n  // --------------------------------------------------------------------\n  var conversionLineChartEl = document.querySelector('#conversionRateChart'),\n    conversionLineChartConfig = {\n      chart: {\n        height: 80,\n        width: 140,\n        type: 'line',\n        toolbar: {\n          show: false\n        },\n        dropShadow: {\n          enabled: true,\n          top: 10,\n          left: 5,\n          blur: 3,\n          color: config.colors.primary,\n          opacity: 0.15\n        },\n        sparkline: {\n          enabled: true\n        }\n      },\n      markers: {\n        size: 6,\n        colors: 'transparent',\n        strokeColors: 'transparent',\n        strokeWidth: 4,\n        discrete: [{\n          fillColor: config.colors.white,\n          seriesIndex: 0,\n          dataPointIndex: 3,\n          strokeColor: config.colors.primary,\n          strokeWidth: 4,\n          size: 6,\n          radius: 2\n        }],\n        hover: {\n          size: 7\n        }\n      },\n      grid: {\n        show: false,\n        padding: {\n          right: 8\n        }\n      },\n      colors: [config.colors.primary],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 5,\n        curve: 'smooth'\n      },\n      series: [{\n        data: [137, 210, 160, 245]\n      }],\n      xaxis: {\n        show: false,\n        lines: {\n          show: false\n        },\n        labels: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      yaxis: {\n        show: false\n      }\n    };\n  if (_typeof(conversionLineChartEl) !== undefined && conversionLineChartEl !== null) {\n    var conversionLineChart = new ApexCharts(conversionLineChartEl, conversionLineChartConfig);\n    conversionLineChart.render();\n  }\n\n  // Conversion rate Line Chart\n  // --------------------------------------------------------------------\n  var expensesBarChartEl = document.querySelector('#expensesBarChart'),\n    expensesBarChartConfig = {\n      series: [{\n        name: '2021',\n        data: [15, 37, 14, 30, 38, 30, 20, 13, 14, 23]\n      }, {\n        name: '2020',\n        data: [-33, -23, -29, -21, -25, -21, -23, -19, -37, -22]\n      }],\n      chart: {\n        height: 150,\n        stacked: true,\n        type: 'bar',\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: '40%',\n          borderRadius: 5,\n          startingShape: 'rounded'\n        }\n      },\n      colors: [config.colors.primary, config.colors.warning],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth',\n        width: 2,\n        lineCap: 'round',\n        colors: [cardColor]\n      },\n      legend: {\n        show: false\n      },\n      grid: {\n        show: false,\n        padding: {\n          top: -10\n        }\n      },\n      xaxis: {\n        show: false,\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n        labels: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      yaxis: {\n        show: false\n      },\n      responsive: [{\n        breakpoint: 1440,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 5,\n              columnWidth: '60%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1300,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 5,\n              columnWidth: '70%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1200,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 4,\n              columnWidth: '50%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1040,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 4,\n              columnWidth: '60%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 991,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 4,\n              columnWidth: '40%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 420,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 5,\n              columnWidth: '60%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 360,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 5,\n              columnWidth: '70%'\n            }\n          }\n        }\n      }],\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(expensesBarChartEl) !== undefined && expensesBarChartEl !== null) {\n    var expensesBarChart = new ApexCharts(expensesBarChartEl, expensesBarChartConfig);\n    expensesBarChart.render();\n  }\n\n  // Total Balance - Line Chart\n  // --------------------------------------------------------------------\n  var totalBalanceChartEl = document.querySelector('#totalBalanceChart'),\n    totalBalanceChartConfig = {\n      series: [{\n        data: [137, 210, 160, 275, 205, 315]\n      }],\n      chart: {\n        height: 250,\n        parentHeightOffset: 0,\n        parentWidthOffset: 0,\n        type: 'line',\n        dropShadow: {\n          enabled: true,\n          top: 10,\n          left: 5,\n          blur: 3,\n          color: config.colors.warning,\n          opacity: 0.15\n        },\n        toolbar: {\n          show: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 4,\n        curve: 'smooth'\n      },\n      legend: {\n        show: false\n      },\n      colors: [config.colors.warning],\n      markers: {\n        size: 6,\n        colors: 'transparent',\n        strokeColors: 'transparent',\n        strokeWidth: 4,\n        discrete: [{\n          fillColor: config.colors.white,\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          strokeColor: config.colors.warning,\n          strokeWidth: 8,\n          size: 6,\n          radius: 8\n        }],\n        hover: {\n          size: 7\n        }\n      },\n      grid: {\n        show: false,\n        padding: {\n          top: -10,\n          left: 0,\n          right: 0,\n          bottom: 10\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          show: true,\n          style: {\n            fontSize: '13px',\n            colors: labelColor\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      }\n    };\n  if (_typeof(totalBalanceChartEl) !== undefined && totalBalanceChartEl !== null) {\n    var totalBalanceChart = new ApexCharts(totalBalanceChartEl, totalBalanceChartConfig);\n    totalBalanceChart.render();\n  }\n})();\n\n//# sourceURL=webpack://Sneat/./static/js/app-ecommerce-dashboard.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/app-ecommerce-dashboard.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});