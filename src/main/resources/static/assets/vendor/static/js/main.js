/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/main.js":
/*!***************************!*\
  !*** ./static/js/main.js ***!
  \***************************/
/***/ (function() {

eval("/**\n * Main\n */\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nwindow.isRtl = window.Helpers.isRtl();\nwindow.isDarkStyle = window.Helpers.isDarkStyle();\nvar menu,\n  animate,\n  isHorizontalLayout = false;\nif (document.getElementById('layout-menu')) {\n  isHorizontalLayout = document.getElementById('layout-menu').classList.contains('menu-horizontal');\n}\n(function (_window$templateCusto, _window$templateCusto2) {\n  setTimeout(function () {\n    window.Helpers.initCustomOptionCheck();\n  }, 1000);\n\n  // Initialize menu\n  //-----------------\n\n  var layoutMenuEl = document.querySelectorAll('#layout-menu');\n  layoutMenuEl.forEach(function (element) {\n    menu = new Menu(element, {\n      orientation: isHorizontalLayout ? 'horizontal' : 'vertical',\n      closeChildren: isHorizontalLayout ? true : false,\n      // ? This option only works with Horizontal menu\n      showDropdownOnHover: localStorage.getItem('templateCustomizer-' + templateName + '--ShowDropdownOnHover') // If value(showDropdownOnHover) is set in local storage\n      ? localStorage.getItem('templateCustomizer-' + templateName + '--ShowDropdownOnHover') === 'true' // Use the local storage value\n      : window.templateCustomizer !== undefined // If value is set in config.js\n      ? window.templateCustomizer.settings.defaultShowDropdownOnHover // Use the config.js value\n      : true // Use this if you are not using the config.js and want to set value directly from here\n    });\n    // Change parameter to true if you want scroll animation\n    window.Helpers.scrollToActive(animate = false);\n    window.Helpers.mainMenu = menu;\n  });\n\n  // Initialize menu togglers and bind click on each\n  var menuToggler = document.querySelectorAll('.layout-menu-toggle');\n  menuToggler.forEach(function (item) {\n    item.addEventListener('click', function (event) {\n      event.preventDefault();\n      window.Helpers.toggleCollapsed();\n      // Enable menu state with local storage support if enableMenuLocalStorage = true from config.js\n      if (config.enableMenuLocalStorage && !window.Helpers.isSmallScreen()) {\n        try {\n          localStorage.setItem('templateCustomizer-' + templateName + '--LayoutCollapsed', String(window.Helpers.isCollapsed()));\n          // Update customizer checkbox state on click of menu toggler\n          var layoutCollapsedCustomizerOptions = document.querySelector('.template-customizer-layouts-options');\n          if (layoutCollapsedCustomizerOptions) {\n            var layoutCollapsedVal = window.Helpers.isCollapsed() ? 'collapsed' : 'expanded';\n            layoutCollapsedCustomizerOptions.querySelector(\"input[value=\\\"\".concat(layoutCollapsedVal, \"\\\"]\")).click();\n          }\n        } catch (e) {}\n      }\n    });\n  });\n\n  // Display menu toggle (layout-menu-toggle) on hover with delay\n  var delay = function delay(elem, callback) {\n    var timeout = null;\n    elem.onmouseenter = function () {\n      // Set timeout to be a timer which will invoke callback after 300ms (not for small screen)\n      if (!Helpers.isSmallScreen()) {\n        timeout = setTimeout(callback, 300);\n      } else {\n        timeout = setTimeout(callback, 0);\n      }\n    };\n    elem.onmouseleave = function () {\n      // Clear any timers set to timeout\n      document.querySelector('.layout-menu-toggle').classList.remove('d-block');\n      clearTimeout(timeout);\n    };\n  };\n  if (document.getElementById('layout-menu')) {\n    delay(document.getElementById('layout-menu'), function () {\n      // not for small screen\n      if (!Helpers.isSmallScreen()) {\n        document.querySelector('.layout-menu-toggle').classList.add('d-block');\n      }\n    });\n  }\n\n  // Menu swipe gesture\n\n  // Detect swipe gesture on the target element and call swipe In\n  window.Helpers.swipeIn('.drag-target', function (e) {\n    window.Helpers.setCollapsed(false);\n  });\n\n  // Detect swipe gesture on the target element and call swipe Out\n  window.Helpers.swipeOut('#layout-menu', function (e) {\n    if (window.Helpers.isSmallScreen()) window.Helpers.setCollapsed(true);\n  });\n\n  // Display in main menu when menu scrolls\n  var menuInnerContainer = document.getElementsByClassName('menu-inner'),\n    menuInnerShadow = document.getElementsByClassName('menu-inner-shadow')[0];\n  if (menuInnerContainer.length > 0 && menuInnerShadow) {\n    menuInnerContainer[0].addEventListener('ps-scroll-y', function () {\n      if (this.querySelector('.ps__thumb-y').offsetTop) {\n        menuInnerShadow.style.display = 'block';\n      } else {\n        menuInnerShadow.style.display = 'none';\n      }\n    });\n  }\n\n  // Update light/dark image based on current style\n  function switchImage(style) {\n    if (style === 'system') {\n      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        style = 'dark';\n      } else {\n        style = 'light';\n      }\n    }\n    var switchImagesList = [].slice.call(document.querySelectorAll('[data-app-' + style + '-img]'));\n    switchImagesList.map(function (imageEl) {\n      var setImage = imageEl.getAttribute('data-app-' + style + '-img');\n      imageEl.src = assetsPath + 'img/' + setImage; // Using window.assetsPath to get the exact relative path\n    });\n  }\n\n  //Style Switcher (Light/Dark/System Mode)\n  var styleSwitcher = document.querySelector('.dropdown-style-switcher');\n\n  // Get style from local storage or use 'system' as default\n  var storedStyle = localStorage.getItem('templateCustomizer-' + templateName + '--Style') || ( //if no template style then use Customizer style\n  (_window$templateCusto = (_window$templateCusto2 = window.templateCustomizer) === null || _window$templateCusto2 === void 0 || (_window$templateCusto2 = _window$templateCusto2.settings) === null || _window$templateCusto2 === void 0 ? void 0 : _window$templateCusto2.defaultStyle) !== null && _window$templateCusto !== void 0 ? _window$templateCusto : 'light'); //!if there is no Customizer then use default style as light\n\n  // Set style on click of style switcher item if template customizer is enabled\n  if (window.templateCustomizer && styleSwitcher) {\n    var styleSwitcherItems = [].slice.call(styleSwitcher.children[1].querySelectorAll('.dropdown-item'));\n    styleSwitcherItems.forEach(function (item) {\n      item.addEventListener('click', function () {\n        var currentStyle = this.getAttribute('data-theme');\n        if (currentStyle === 'light') {\n          window.templateCustomizer.setStyle('light');\n        } else if (currentStyle === 'dark') {\n          window.templateCustomizer.setStyle('dark');\n        } else {\n          window.templateCustomizer.setStyle('system');\n        }\n      });\n    });\n\n    // Update style switcher icon based on the stored style\n\n    var styleSwitcherIcon = styleSwitcher.querySelector('i');\n    if (storedStyle === 'light') {\n      styleSwitcherIcon.classList.add('bx-sun');\n      new bootstrap.Tooltip(styleSwitcherIcon, {\n        title: 'Light Mode',\n        fallbackPlacements: ['bottom']\n      });\n    } else if (storedStyle === 'dark') {\n      styleSwitcherIcon.classList.add('bx-moon');\n      new bootstrap.Tooltip(styleSwitcherIcon, {\n        title: 'Dark Mode',\n        fallbackPlacements: ['bottom']\n      });\n    } else {\n      styleSwitcherIcon.classList.add('bx-desktop');\n      new bootstrap.Tooltip(styleSwitcherIcon, {\n        title: 'System Mode',\n        fallbackPlacements: ['bottom']\n      });\n    }\n  }\n\n  // Run switchImage function based on the stored style\n  switchImage(storedStyle);\n\n  // Internationalization (Language Dropdown)\n  // ---------------------------------------\n\n  if (typeof i18next !== 'undefined' && typeof i18NextHttpBackend !== 'undefined') {\n    i18next.use(i18NextHttpBackend).init({\n      lng: window.templateCustomizer ? window.templateCustomizer.settings.lang : 'en',\n      debug: false,\n      fallbackLng: 'en',\n      backend: {\n        loadPath: assetsPath + 'json/locales/{{lng}}.json'\n      },\n      returnObjects: true\n    }).then(function (t) {\n      localize();\n    });\n  }\n  var languageDropdown = document.getElementsByClassName('dropdown-language');\n  if (languageDropdown.length) {\n    var directionChange = function directionChange(textDirection) {\n      if (textDirection === 'rtl') {\n        if (localStorage.getItem('templateCustomizer-' + templateName + '--Rtl') !== 'true') window.templateCustomizer ? window.templateCustomizer.setRtl(true) : '';\n      } else {\n        if (localStorage.getItem('templateCustomizer-' + templateName + '--Rtl') === 'true') window.templateCustomizer ? window.templateCustomizer.setRtl(false) : '';\n      }\n    };\n    var dropdownItems = languageDropdown[0].querySelectorAll('.dropdown-item');\n    for (var i = 0; i < dropdownItems.length; i++) {\n      dropdownItems[i].addEventListener('click', function () {\n        var currentLanguage = this.getAttribute('data-language');\n        var textDirection = this.getAttribute('data-text-direction');\n        var _iterator = _createForOfIteratorHelper(this.parentNode.children),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var sibling = _step.value;\n            var siblingEle = sibling.parentElement.parentNode.firstChild;\n\n            // Loop through each sibling and push to the array\n            while (siblingEle) {\n              if (siblingEle.nodeType === 1 && siblingEle !== siblingEle.parentElement) {\n                siblingEle.querySelector('.dropdown-item').classList.remove('active');\n              }\n              siblingEle = siblingEle.nextSibling;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this.classList.add('active');\n        i18next.changeLanguage(currentLanguage, function (err, t) {\n          window.templateCustomizer ? window.templateCustomizer.setLang(currentLanguage) : '';\n          directionChange(textDirection);\n          if (err) return console.log('something went wrong loading', err);\n          localize();\n        });\n      });\n    }\n  }\n  function localize() {\n    var i18nList = document.querySelectorAll('[data-i18n]');\n    // Set the current language in dd\n    var currentLanguageEle = document.querySelector('.dropdown-item[data-language=\"' + i18next.language + '\"]');\n    if (currentLanguageEle) {\n      currentLanguageEle.click();\n    }\n    i18nList.forEach(function (item) {\n      item.innerHTML = i18next.t(item.dataset.i18n);\n    });\n  }\n\n  // Notification\n  // ------------\n  var notificationMarkAsReadAll = document.querySelector('.dropdown-notifications-all');\n  var notificationMarkAsReadList = document.querySelectorAll('.dropdown-notifications-read');\n\n  // Notification: Mark as all as read\n  if (notificationMarkAsReadAll) {\n    notificationMarkAsReadAll.addEventListener('click', function (event) {\n      notificationMarkAsReadList.forEach(function (item) {\n        item.closest('.dropdown-notifications-item').classList.add('marked-as-read');\n      });\n    });\n  }\n  // Notification: Mark as read/unread onclick of dot\n  if (notificationMarkAsReadList) {\n    notificationMarkAsReadList.forEach(function (item) {\n      item.addEventListener('click', function (event) {\n        item.closest('.dropdown-notifications-item').classList.toggle('marked-as-read');\n      });\n    });\n  }\n\n  // Notification: Mark as read/unread onclick of dot\n  var notificationArchiveMessageList = document.querySelectorAll('.dropdown-notifications-archive');\n  notificationArchiveMessageList.forEach(function (item) {\n    item.addEventListener('click', function (event) {\n      item.closest('.dropdown-notifications-item').remove();\n    });\n  });\n\n  // Init helpers & misc\n  // --------------------\n\n  // Init BS Tooltip\n  var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n  tooltipTriggerList.map(function (tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl);\n  });\n\n  // Accordion active class\n  var accordionActiveFunction = function accordionActiveFunction(e) {\n    if (e.type == 'show.bs.collapse' || e.type == 'show.bs.collapse') {\n      e.target.closest('.accordion-item').classList.add('active');\n    } else {\n      e.target.closest('.accordion-item').classList.remove('active');\n    }\n  };\n  var accordionTriggerList = [].slice.call(document.querySelectorAll('.accordion'));\n  var accordionList = accordionTriggerList.map(function (accordionTriggerEl) {\n    accordionTriggerEl.addEventListener('show.bs.collapse', accordionActiveFunction);\n    accordionTriggerEl.addEventListener('hide.bs.collapse', accordionActiveFunction);\n  });\n\n  // If layout is RTL add .dropdown-menu-end class to .dropdown-menu\n  // if (isRtl) {\n  //   Helpers._addClass('dropdown-menu-end', document.querySelectorAll('#layout-navbar .dropdown-menu'));\n  // }\n\n  // Auto update layout based on screen size\n  window.Helpers.setAutoUpdate(true);\n\n  // Toggle Password Visibility\n  window.Helpers.initPasswordToggle();\n\n  // Speech To Text\n  window.Helpers.initSpeechToText();\n\n  // Init PerfectScrollbar in Navbar Dropdown (i.e notification)\n  window.Helpers.initNavbarDropdownScrollbar();\n  var horizontalMenuTemplate = document.querySelector(\"[data-template^='horizontal-menu']\");\n  if (horizontalMenuTemplate) {\n    // if screen size is small then set navbar fixed\n    if (window.innerWidth < window.Helpers.LAYOUT_BREAKPOINT) {\n      window.Helpers.setNavbarFixed('fixed');\n    } else {\n      window.Helpers.setNavbarFixed('');\n    }\n  }\n\n  // On window resize listener\n  // -------------------------\n  window.addEventListener('resize', function (event) {\n    // Hide open search input and set value blank\n    if (window.innerWidth >= window.Helpers.LAYOUT_BREAKPOINT) {\n      if (document.querySelector('.search-input-wrapper')) {\n        document.querySelector('.search-input-wrapper').classList.add('d-none');\n        document.querySelector('.search-input').value = '';\n      }\n    }\n    // Horizontal Layout : Update menu based on window size\n    if (horizontalMenuTemplate) {\n      // if screen size is small then set navbar fixed\n      if (window.innerWidth < window.Helpers.LAYOUT_BREAKPOINT) {\n        window.Helpers.setNavbarFixed('fixed');\n      } else {\n        window.Helpers.setNavbarFixed('');\n      }\n      setTimeout(function () {\n        if (window.innerWidth < window.Helpers.LAYOUT_BREAKPOINT) {\n          if (document.getElementById('layout-menu')) {\n            if (document.getElementById('layout-menu').classList.contains('menu-horizontal')) {\n              menu.switchMenu('vertical');\n            }\n          }\n        } else {\n          if (document.getElementById('layout-menu')) {\n            if (document.getElementById('layout-menu').classList.contains('menu-vertical')) {\n              menu.switchMenu('horizontal');\n            }\n          }\n        }\n      }, 100);\n    }\n  }, true);\n\n  // Manage menu expanded/collapsed with templateCustomizer & local storage\n  //------------------------------------------------------------------\n\n  // If current layout is horizontal OR current window screen is small (overlay menu) than return from here\n  if (isHorizontalLayout || window.Helpers.isSmallScreen()) {\n    return;\n  }\n\n  // If current layout is vertical and current window screen is > small\n\n  // Auto update menu collapsed/expanded based on the themeConfig\n  if (typeof TemplateCustomizer !== 'undefined') {\n    if (window.templateCustomizer.settings.defaultMenuCollapsed) {\n      window.Helpers.setCollapsed(true, false);\n    } else {\n      window.Helpers.setCollapsed(false, false);\n    }\n  }\n\n  // Manage menu expanded/collapsed state with local storage support If enableMenuLocalStorage = true in config.js\n  if (typeof config !== 'undefined') {\n    if (config.enableMenuLocalStorage) {\n      try {\n        if (localStorage.getItem('templateCustomizer-' + templateName + '--LayoutCollapsed') !== null) window.Helpers.setCollapsed(localStorage.getItem('templateCustomizer-' + templateName + '--LayoutCollapsed') === 'true', false);\n      } catch (e) {}\n    }\n  }\n})();\n\n// ! Removed following code if you do't wish to use jQuery. Remember that navbar search functionality will stop working on removal.\nif (typeof $ !== 'undefined') {\n  $(function () {\n    // ! TODO: Required to load after DOM is ready, did this now with jQuery ready.\n    window.Helpers.initSidebarToggle();\n    // Toggle Universal Sidebar\n\n    // Navbar Search with autosuggest (typeahead)\n    // ? You can remove the following JS if you don't want to use search functionality.\n    //----------------------------------------------------------------------------------\n\n    var searchToggler = $('.search-toggler'),\n      searchInputWrapper = $('.search-input-wrapper'),\n      searchInput = $('.search-input'),\n      contentBackdrop = $('.content-backdrop');\n\n    // Open search input on click of search icon\n    if (searchToggler.length) {\n      searchToggler.on('click', function () {\n        if (searchInputWrapper.length) {\n          searchInputWrapper.toggleClass('d-none');\n          searchInput.focus();\n        }\n      });\n    }\n    // Open search on 'CTRL+/'\n    $(document).on('keydown', function (event) {\n      var ctrlKey = event.ctrlKey,\n        slashKey = event.which === 191;\n      if (ctrlKey && slashKey) {\n        if (searchInputWrapper.length) {\n          searchInputWrapper.toggleClass('d-none');\n          searchInput.focus();\n        }\n      }\n    });\n    // Note: Following code is required to update container class of typeahead dropdown width on focus of search input. setTimeout is required to allow time to initiate Typeahead UI.\n    setTimeout(function () {\n      var twitterTypeahead = $('.twitter-typeahead');\n      searchInput.on('focus', function () {\n        if (searchInputWrapper.hasClass('container-xxl')) {\n          searchInputWrapper.find(twitterTypeahead).addClass('container-xxl');\n          twitterTypeahead.removeClass('container-fluid');\n        } else if (searchInputWrapper.hasClass('container-fluid')) {\n          searchInputWrapper.find(twitterTypeahead).addClass('container-fluid');\n          twitterTypeahead.removeClass('container-xxl');\n        }\n      });\n    }, 10);\n    if (searchInput.length) {\n      // Filter config\n      var filterConfig = function filterConfig(data) {\n        return function findMatches(q, cb) {\n          var matches;\n          matches = [];\n          data.filter(function (i) {\n            if (i.name.toLowerCase().startsWith(q.toLowerCase())) {\n              matches.push(i);\n            } else if (!i.name.toLowerCase().startsWith(q.toLowerCase()) && i.name.toLowerCase().includes(q.toLowerCase())) {\n              matches.push(i);\n              matches.sort(function (a, b) {\n                return b.name < a.name ? 1 : -1;\n              });\n            } else {\n              return [];\n            }\n          });\n          cb(matches);\n        };\n      };\n\n      // Search JSON\n      var searchJson = 'search-vertical.json'; // For vertical layout\n      if ($('#layout-menu').hasClass('menu-horizontal')) {\n        var searchJson = 'search-horizontal.json'; // For vertical layout\n      }\n      // Search API AJAX call\n      var searchData = $.ajax({\n        url: assetsPath + 'json/' + searchJson,\n        //? Use your own search api instead\n        dataType: 'json',\n        async: false\n      }).responseJSON;\n      // Init typeahead on searchInput\n      searchInput.each(function () {\n        var $this = $(this);\n        searchInput.typeahead({\n          hint: false,\n          classNames: {\n            menu: 'tt-menu navbar-search-suggestion',\n            cursor: 'active',\n            suggestion: 'suggestion d-flex justify-content-between px-3 py-2 w-100'\n          }\n        },\n        // ? Add/Update blocks as per need\n        // Pages\n        {\n          name: 'pages',\n          display: 'name',\n          limit: 5,\n          source: filterConfig(searchData.pages),\n          templates: {\n            header: '<h6 class=\"suggestions-header text-primary mb-0 mx-3 mt-3 pb-2\">Pages</h6>',\n            suggestion: function suggestion(_ref) {\n              var url = _ref.url,\n                icon = _ref.icon,\n                name = _ref.name;\n              return '<a href=\"' + url + '\">' + '<div>' + '<i class=\"bx ' + icon + ' me-2\"></i>' + '<span class=\"align-middle\">' + name + '</span>' + '</div>' + '</a>';\n            },\n            notFound: '<div class=\"not-found px-3 py-2\">' + '<h6 class=\"suggestions-header text-primary mb-2\">Pages</h6>' + '<p class=\"py-2 mb-0\"><i class=\"bx bx-error-circle bx-xs me-2\"></i> No Results Found</p>' + '</div>'\n          }\n        },\n        // Files\n        {\n          name: 'files',\n          display: 'name',\n          limit: 4,\n          source: filterConfig(searchData.files),\n          templates: {\n            header: '<h6 class=\"suggestions-header text-primary mb-0 mx-3 mt-3 pb-2\">Files</h6>',\n            suggestion: function suggestion(_ref2) {\n              var src = _ref2.src,\n                name = _ref2.name,\n                subtitle = _ref2.subtitle,\n                meta = _ref2.meta;\n              return '<a href=\"javascript:;\">' + '<div class=\"d-flex w-50\">' + '<img class=\"me-3\" src=\"' + assetsPath + src + '\" alt=\"' + name + '\" height=\"32\">' + '<div class=\"w-75\">' + '<h6 class=\"mb-0\">' + name + '</h6>' + '<small class=\"text-muted\">' + subtitle + '</small>' + '</div>' + '</div>' + '<small class=\"text-muted\">' + meta + '</small>' + '</a>';\n            },\n            notFound: '<div class=\"not-found px-3 py-2\">' + '<h6 class=\"suggestions-header text-primary mb-2\">Files</h6>' + '<p class=\"py-2 mb-0\"><i class=\"bx bx-error-circle bx-xs me-2\"></i> No Results Found</p>' + '</div>'\n          }\n        },\n        // Members\n        {\n          name: 'members',\n          display: 'name',\n          limit: 4,\n          source: filterConfig(searchData.members),\n          templates: {\n            header: '<h6 class=\"suggestions-header text-primary mb-0 mx-3 mt-3 pb-2\">Members</h6>',\n            suggestion: function suggestion(_ref3) {\n              var name = _ref3.name,\n                src = _ref3.src,\n                subtitle = _ref3.subtitle;\n              return '<a href=\"app-user-view-account.html\">' + '<div class=\"d-flex align-items-center\">' + '<img class=\"rounded-circle me-3\" src=\"' + assetsPath + src + '\" alt=\"' + name + '\" height=\"32\">' + '<div class=\"user-info\">' + '<h6 class=\"mb-0\">' + name + '</h6>' + '<small class=\"text-muted\">' + subtitle + '</small>' + '</div>' + '</div>' + '</a>';\n            },\n            notFound: '<div class=\"not-found px-3 py-2\">' + '<h6 class=\"suggestions-header text-primary mb-2\">Members</h6>' + '<p class=\"py-2 mb-0\"><i class=\"bx bx-error-circle bx-xs me-2\"></i> No Results Found</p>' + '</div>'\n          }\n        })\n        //On typeahead result render.\n        .bind('typeahead:render', function () {\n          // Show content backdrop,\n          contentBackdrop.addClass('show').removeClass('fade');\n        })\n        // On typeahead select\n        .bind('typeahead:select', function (ev, suggestion) {\n          // Open selected page\n          if (suggestion.url) {\n            window.location = suggestion.url;\n          }\n        })\n        // On typeahead close\n        .bind('typeahead:close', function () {\n          // Clear search\n          searchInput.val('');\n          $this.typeahead('val', '');\n          // Hide search input wrapper\n          searchInputWrapper.addClass('d-none');\n          // Fade content backdrop\n          contentBackdrop.addClass('fade').removeClass('show');\n        });\n\n        // On searchInput keyup, Fade content backdrop if search input is blank\n        searchInput.on('keyup', function () {\n          if (searchInput.val() == '') {\n            contentBackdrop.addClass('fade').removeClass('show');\n          }\n        });\n      });\n\n      // Init PerfectScrollbar in search result\n      var psSearch;\n      $('.navbar-search-suggestion').each(function () {\n        psSearch = new PerfectScrollbar($(this)[0], {\n          wheelPropagation: false,\n          suppressScrollX: true\n        });\n      });\n      searchInput.on('keyup', function () {\n        psSearch.update();\n      });\n    }\n  });\n}\n\n//# sourceURL=webpack://Sneat/./static/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/main.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});