/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/form-wizard-validation.js":
/*!*********************************************!*\
  !*** ./static/js/form-wizard-validation.js ***!
  \*********************************************/
/***/ (function() {

eval("/**\n *  Form Wizard\n */\n\n\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n(function () {\n  var select2 = $('.select2'),\n    selectPicker = $('.selectpicker');\n\n  // Wizard Validation\n  // --------------------------------------------------------------------\n  var wizardValidation = document.querySelector('#wizard-validation');\n  if (_typeof(wizardValidation) !== undefined && wizardValidation !== null) {\n    // Wizard form\n    var wizardValidationForm = wizardValidation.querySelector('#wizard-validation-form');\n    // Wizard steps\n    var wizardValidationFormStep1 = wizardValidationForm.querySelector('#account-details-validation');\n    var wizardValidationFormStep2 = wizardValidationForm.querySelector('#personal-info-validation');\n    var wizardValidationFormStep3 = wizardValidationForm.querySelector('#social-links-validation');\n    // Wizard next prev button\n    var wizardValidationNext = [].slice.call(wizardValidationForm.querySelectorAll('.btn-next'));\n    var wizardValidationPrev = [].slice.call(wizardValidationForm.querySelectorAll('.btn-prev'));\n    var validationStepper = new Stepper(wizardValidation, {\n      linear: true\n    });\n\n    // Account details\n    var FormValidation1 = FormValidation.formValidation(wizardValidationFormStep1, {\n      fields: {\n        formValidationUsername: {\n          validators: {\n            notEmpty: {\n              message: 'The name is required'\n            },\n            stringLength: {\n              min: 6,\n              max: 30,\n              message: 'The name must be more than 6 and less than 30 characters long'\n            },\n            regexp: {\n              regexp: /^[a-zA-Z0-9 ]+$/,\n              message: 'The name can only consist of alphabetical, number and space'\n            }\n          }\n        },\n        formValidationEmail: {\n          validators: {\n            notEmpty: {\n              message: 'The Email is required'\n            },\n            emailAddress: {\n              message: 'The value is not a valid email address'\n            }\n          }\n        },\n        formValidationPass: {\n          validators: {\n            notEmpty: {\n              message: 'The password is required'\n            }\n          }\n        },\n        formValidationConfirmPass: {\n          validators: {\n            notEmpty: {\n              message: 'The Confirm Password is required'\n            },\n            identical: {\n              compare: function compare() {\n                return wizardValidationFormStep1.querySelector('[name=\"formValidationPass\"]').value;\n              },\n              message: 'The password and its confirm are not the same'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap5: new FormValidation.plugins.Bootstrap5({\n          // Use this for enabling/changing valid/invalid class\n          // eleInvalidClass: '',\n          eleValidClass: '',\n          rowSelector: '.col-sm-6'\n        }),\n        autoFocus: new FormValidation.plugins.AutoFocus(),\n        submitButton: new FormValidation.plugins.SubmitButton()\n      },\n      init: function init(instance) {\n        instance.on('plugins.message.placed', function (e) {\n          //* Move the error message out of the `input-group` element\n          if (e.element.parentElement.classList.contains('input-group')) {\n            e.element.parentElement.insertAdjacentElement('afterend', e.messageElement);\n          }\n        });\n      }\n    }).on('core.form.valid', function () {\n      // Jump to the next step when all fields in the current step are valid\n      validationStepper.next();\n    });\n\n    // Personal info\n    var FormValidation2 = FormValidation.formValidation(wizardValidationFormStep2, {\n      fields: {\n        formValidationFirstName: {\n          validators: {\n            notEmpty: {\n              message: 'The first name is required'\n            }\n          }\n        },\n        formValidationLastName: {\n          validators: {\n            notEmpty: {\n              message: 'The last name is required'\n            }\n          }\n        },\n        formValidationCountry: {\n          validators: {\n            notEmpty: {\n              message: 'The Country is required'\n            }\n          }\n        },\n        formValidationLanguage: {\n          validators: {\n            notEmpty: {\n              message: 'The Languages is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap5: new FormValidation.plugins.Bootstrap5({\n          // Use this for enabling/changing valid/invalid class\n          // eleInvalidClass: '',\n          eleValidClass: '',\n          rowSelector: '.col-sm-6'\n        }),\n        autoFocus: new FormValidation.plugins.AutoFocus(),\n        submitButton: new FormValidation.plugins.SubmitButton()\n      }\n    }).on('core.form.valid', function () {\n      // Jump to the next step when all fields in the current step are valid\n      validationStepper.next();\n    });\n\n    // Bootstrap Select (i.e Language select)\n    if (selectPicker.length) {\n      selectPicker.each(function () {\n        var $this = $(this);\n        $this.selectpicker().on('change', function () {\n          FormValidation2.revalidateField('formValidationLanguage');\n        });\n      });\n    }\n\n    // select2\n    if (select2.length) {\n      select2.each(function () {\n        var $this = $(this);\n        $this.wrap('<div class=\"position-relative\"></div>');\n        $this.select2({\n          placeholder: 'Select an country',\n          dropdownParent: $this.parent()\n        }).on('change', function () {\n          // Revalidate the color field when an option is chosen\n          FormValidation2.revalidateField('formValidationCountry');\n        });\n      });\n    }\n\n    // Social links\n    var FormValidation3 = FormValidation.formValidation(wizardValidationFormStep3, {\n      fields: {\n        formValidationTwitter: {\n          validators: {\n            notEmpty: {\n              message: 'The Twitter URL is required'\n            },\n            uri: {\n              message: 'The URL is not proper'\n            }\n          }\n        },\n        formValidationFacebook: {\n          validators: {\n            notEmpty: {\n              message: 'The Facebook URL is required'\n            },\n            uri: {\n              message: 'The URL is not proper'\n            }\n          }\n        },\n        formValidationGoogle: {\n          validators: {\n            notEmpty: {\n              message: 'The Google URL is required'\n            },\n            uri: {\n              message: 'The URL is not proper'\n            }\n          }\n        },\n        formValidationLinkedIn: {\n          validators: {\n            notEmpty: {\n              message: 'The LinkedIn URL is required'\n            },\n            uri: {\n              message: 'The URL is not proper'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap5: new FormValidation.plugins.Bootstrap5({\n          // Use this for enabling/changing valid/invalid class\n          // eleInvalidClass: '',\n          eleValidClass: '',\n          rowSelector: '.col-sm-6'\n        }),\n        autoFocus: new FormValidation.plugins.AutoFocus(),\n        submitButton: new FormValidation.plugins.SubmitButton()\n      }\n    }).on('core.form.valid', function () {\n      // You can submit the form\n      // wizardValidationForm.submit()\n      // or send the form data to server via an Ajax request\n      // To make the demo simple, I just placed an alert\n      alert('Submitted..!!');\n    });\n    wizardValidationNext.forEach(function (item) {\n      item.addEventListener('click', function (event) {\n        // When click the Next button, we will validate the current step\n        switch (validationStepper._currentIndex) {\n          case 0:\n            FormValidation1.validate();\n            break;\n          case 1:\n            FormValidation2.validate();\n            break;\n          case 2:\n            FormValidation3.validate();\n            break;\n          default:\n            break;\n        }\n      });\n    });\n    wizardValidationPrev.forEach(function (item) {\n      item.addEventListener('click', function (event) {\n        switch (validationStepper._currentIndex) {\n          case 2:\n            validationStepper.previous();\n            break;\n          case 1:\n            validationStepper.previous();\n            break;\n          case 0:\n          default:\n            break;\n        }\n      });\n    });\n  }\n})();\n\n//# sourceURL=webpack://Sneat/./static/js/form-wizard-validation.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/form-wizard-validation.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});