/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/tables-datatables-extensions.js":
/*!***************************************************!*\
  !*** ./static/js/tables-datatables-extensions.js ***!
  \***************************************************/
/***/ (function() {

eval("/**\n * DataTables Extensions (jquery)\n */\n\n\n\n$(function () {\n  var dt_scrollable_table = $('.dt-scrollableTable'),\n    dt_fixedheader_table = $('.dt-fixedheader'),\n    dt_fixedcolumns_table = $('.dt-fixedcolumns'),\n    dt_select_table = $('.dt-select-table');\n\n  // Scrollable\n  // --------------------------------------------------------------------\n\n  if (dt_scrollable_table.length) {\n    var dt_scrollableTable = dt_scrollable_table.DataTable({\n      ajax: assetsPath + 'json/table-datatable.json',\n      columns: [{\n        data: 'full_name'\n      }, {\n        data: 'post'\n      }, {\n        data: 'email'\n      }, {\n        data: 'city'\n      }, {\n        data: 'start_date'\n      }, {\n        data: 'salary'\n      }, {\n        data: 'age'\n      }, {\n        data: 'experience'\n      }, {\n        data: ''\n      }, {\n        data: ''\n      }],\n      columnDefs: [{\n        // Label\n        targets: -2,\n        render: function render(data, type, full, meta) {\n          var $status_number = full['status'];\n          var $status = {\n            1: {\n              title: 'Current',\n              class: 'bg-label-primary'\n            },\n            2: {\n              title: 'Professional',\n              class: ' bg-label-success'\n            },\n            3: {\n              title: 'Rejected',\n              class: ' bg-label-danger'\n            },\n            4: {\n              title: 'Resigned',\n              class: ' bg-label-warning'\n            },\n            5: {\n              title: 'Applied',\n              class: ' bg-label-info'\n            }\n          };\n          if (typeof $status[$status_number] === 'undefined') {\n            return data;\n          }\n          return '<span class=\"badge ' + $status[$status_number].class + '\">' + $status[$status_number].title + '</span>';\n        }\n      }, {\n        // Actions\n        targets: -1,\n        title: 'Actions',\n        searchable: false,\n        orderable: false,\n        render: function render(data, type, full, meta) {\n          return '<div class=\"d-inline-block\">' + '<a href=\"javascript:;\" class=\"btn btn-sm btn-icon dropdown-toggle hide-arrow\" data-bs-toggle=\"dropdown\"><i class=\"bx bx-dots-vertical-rounded\"></i></a>' + '<div class=\"dropdown-menu dropdown-menu-end m-0\">' + '<a href=\"javascript:;\" class=\"dropdown-item\">Details</a>' + '<a href=\"javascript:;\" class=\"dropdown-item\">Archive</a>' + '<div class=\"dropdown-divider\"></div>' + '<a href=\"javascript:;\" class=\"dropdown-item text-danger delete-record\">Delete</a>' + '</div>' + '</div>' + '<a href=\"javascript:;\" class=\"item-edit text-body\"><i class=\"bx bxs-edit\"></i></a>';\n        }\n      }],\n      // Scroll options\n      scrollY: '300px',\n      scrollX: true,\n      dom: '<\"row\"<\"col-sm-12 col-md-6\"l><\"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end\"f>>t<\"row\"<\"col-sm-12 col-md-6\"i><\"col-sm-12 col-md-6\"p>>',\n      initComplete: function initComplete(settings, json) {\n        // Add the mti-n1 class to the first row in tbody\n        dt_scrollable_table.find('tbody tr:first').addClass('border-top-0');\n      }\n    });\n  }\n\n  // FixedHeader\n  // --------------------------------------------------------------------\n\n  if (dt_fixedheader_table.length) {\n    var dt_fixedheader = dt_fixedheader_table.DataTable({\n      ajax: assetsPath + 'json/table-datatable.json',\n      columns: [{\n        data: ''\n      }, {\n        data: 'id'\n      }, {\n        data: 'id'\n      }, {\n        data: 'full_name'\n      }, {\n        data: 'email'\n      }, {\n        data: 'start_date'\n      }, {\n        data: 'salary'\n      }, {\n        data: 'status'\n      }, {\n        data: ''\n      }],\n      columnDefs: [{\n        className: 'control',\n        orderable: false,\n        targets: 0,\n        responsivePriority: 3,\n        render: function render(data, type, full, meta) {\n          return '';\n        }\n      }, {\n        // For Checkboxes\n        targets: 1,\n        orderable: false,\n        render: function render() {\n          return '<input type=\"checkbox\" class=\"dt-checkboxes form-check-input\">';\n        },\n        checkboxes: {\n          selectAllRender: '<input type=\"checkbox\" class=\"form-check-input\">'\n        },\n        responsivePriority: 4\n      }, {\n        targets: 2,\n        visible: false\n      }, {\n        // Avatar image/badge, Name and post\n        targets: 3,\n        render: function render(data, type, full, meta) {\n          var $user_img = full['avatar'],\n            $name = full['full_name'],\n            $post = full['post'];\n          if ($user_img) {\n            // For Avatar image\n            var $output = '<img src=\"' + assetsPath + 'img/avatars/' + $user_img + '\" alt=\"Avatar\" class=\"rounded-circle\">';\n          } else {\n            // For Avatar badge\n            var stateNum = Math.floor(Math.random() * 6);\n            var states = ['success', 'danger', 'warning', 'info', 'dark', 'primary', 'secondary'];\n            var $state = states[stateNum],\n              $name = full['full_name'];\n            var $initials = $name.match(/\\b\\w/g) || [];\n            $initials = (($initials.shift() || '') + ($initials.pop() || '')).toUpperCase();\n            $output = '<span class=\"avatar-initial rounded-circle bg-label-' + $state + '\">' + $initials + '</span>';\n          }\n          // Creates full output for row\n          var $row_output = '<div class=\"d-flex justify-content-start align-items-center\">' + '<div class=\"avatar-wrapper\">' + '<div class=\"avatar me-2\">' + $output + '</div>' + '</div>' + '<div class=\"d-flex flex-column\">' + '<span class=\"emp_name text-truncate\">' + $name + '</span>' + '<small class=\"emp_post text-truncate text-muted\">' + $post + '</small>' + '</div>' + '</div>';\n          return $row_output;\n        },\n        responsivePriority: 5\n      }, {\n        responsivePriority: 1,\n        targets: 4\n      }, {\n        responsivePriority: 2,\n        targets: 6\n      }, {\n        // Label\n        targets: -2,\n        render: function render(data, type, full, meta) {\n          // var $rand_num = Math.floor(Math.random() * 5) + 1;\n          var $status_number = full['status'];\n          var $status = {\n            1: {\n              title: 'Current',\n              class: 'bg-label-primary'\n            },\n            2: {\n              title: 'Professional',\n              class: ' bg-label-success'\n            },\n            3: {\n              title: 'Rejected',\n              class: ' bg-label-danger'\n            },\n            4: {\n              title: 'Resigned',\n              class: ' bg-label-warning'\n            },\n            5: {\n              title: 'Applied',\n              class: ' bg-label-info'\n            }\n          };\n          if (typeof $status[$status_number] === 'undefined') {\n            return data;\n          }\n          return '<span class=\"badge ' + $status[$status_number].class + '\">' + $status[$status_number].title + '</span>';\n        }\n      }, {\n        // Actions\n        targets: -1,\n        title: 'Actions',\n        orderable: false,\n        render: function render(data, type, full, meta) {\n          return '<div class=\"d-inline-block\">' + '<a href=\"javascript:;\" class=\"btn btn-sm btn-icon dropdown-toggle hide-arrow\" data-bs-toggle=\"dropdown\"><i class=\"bx bx-dots-vertical-rounded\"></i></a>' + '<div class=\"dropdown-menu dropdown-menu-end m-0\">' + '<a href=\"javascript:;\" class=\"dropdown-item\">Details</a>' + '<a href=\"javascript:;\" class=\"dropdown-item\">Archive</a>' + '<div class=\"dropdown-divider\"></div>' + '<a href=\"javascript:;\" class=\"dropdown-item text-danger delete-record\">Delete</a>' + '</div>' + '</div>' + '<a href=\"javascript:;\" class=\"btn btn-sm btn-icon item-edit\"><i class=\"bx bxs-edit\"></i></a>';\n        }\n      }],\n      order: [[2, 'desc']],\n      dom: '<\"row\"<\"col-sm-12 col-md-6\"l><\"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end\"f>>t<\"row\"<\"col-sm-12 col-md-6\"i><\"col-sm-12 col-md-6\"p>>',\n      displayLength: 7,\n      lengthMenu: [7, 10, 25, 50, 75, 100],\n      responsive: {\n        details: {\n          display: $.fn.dataTable.Responsive.display.modal({\n            header: function header(row) {\n              var data = row.data();\n              return 'Details of ' + data['full_name'];\n            }\n          }),\n          type: 'column',\n          renderer: function renderer(api, rowIdx, columns) {\n            var data = $.map(columns, function (col, i) {\n              return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)\n              ? '<tr data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>' : '';\n            }).join('');\n            return data ? $('<table class=\"table\"/><tbody />').append(data) : false;\n          }\n        }\n      }\n    });\n    // Fixed header\n    if (window.Helpers.isNavbarFixed()) {\n      var navHeight = $('#layout-navbar').outerHeight();\n      new $.fn.dataTable.FixedHeader(dt_fixedheader).headerOffset(navHeight);\n    } else {\n      new $.fn.dataTable.FixedHeader(dt_fixedheader);\n    }\n  }\n\n  // FixedColumns\n  // --------------------------------------------------------------------\n\n  if (dt_fixedcolumns_table.length) {\n    var dt_fixedcolumns = dt_fixedcolumns_table.DataTable({\n      ajax: assetsPath + 'json/table-datatable.json',\n      columns: [{\n        data: 'full_name'\n      }, {\n        data: 'post'\n      }, {\n        data: 'email'\n      }, {\n        data: 'city'\n      }, {\n        data: 'start_date'\n      }, {\n        data: 'salary'\n      }, {\n        data: 'age'\n      }, {\n        data: 'experience'\n      }, {\n        data: 'status'\n      }, {\n        data: 'id'\n      }],\n      columnDefs: [{\n        // Label\n        targets: -2,\n        render: function render(data, type, full, meta) {\n          var $status_number = full['status'];\n          var $status = {\n            1: {\n              title: 'Current',\n              class: 'bg-label-primary'\n            },\n            2: {\n              title: 'Professional',\n              class: ' bg-label-success'\n            },\n            3: {\n              title: 'Rejected',\n              class: ' bg-label-danger'\n            },\n            4: {\n              title: 'Resigned',\n              class: ' bg-label-warning'\n            },\n            5: {\n              title: 'Applied',\n              class: ' bg-label-info'\n            }\n          };\n          if (typeof $status[$status_number] === 'undefined') {\n            return data;\n          }\n          return '<span class=\"badge ' + $status[$status_number].class + '\">' + $status[$status_number].title + '</span>';\n        }\n      }, {\n        // Actions\n        targets: -1,\n        title: 'Actions',\n        searchable: false,\n        orderable: false,\n        render: function render(data, type, full, meta) {\n          return '<div class=\"d-inline-block\">' + '<a href=\"javascript:;\" class=\"btn btn-sm btn-icon dropdown-toggle hide-arrow\" data-bs-toggle=\"dropdown\"><i class=\"bx bx-dots-vertical-rounded\"></i></a>' + '<div class=\"dropdown-menu dropdown-menu-end m-0\">' + '<a href=\"javascript:;\" class=\"dropdown-item\">Details</a>' + '<a href=\"javascript:;\" class=\"dropdown-item\">Archive</a>' + '<div class=\"dropdown-divider\"></div>' + '<a href=\"javascript:;\" class=\"dropdown-item text-danger delete-record\"></i>Delete</a>' + '</div>' + '</div>' + '<a href=\"javascript:;\" class=\"item-edit text-body\"><i class=\"bx bxs-edit\"></i></a>';\n        }\n      }],\n      dom: '<\"d-flex justify-content-between align-items-center row\"<\"col-sm-12 col-md-2 d-flex\"f><\"col-sm-12 col-md-10 d-none\"i>>t',\n      scrollY: 300,\n      scrollX: true,\n      scrollCollapse: true,\n      paging: false,\n      info: false,\n      // Fixed column option\n      fixedColumns: true,\n      initComplete: function initComplete(settings, json) {\n        // Add the mti-n1 class to the first row in tbody\n        dt_fixedcolumns_table.find('tbody tr:first').addClass('border-top-0');\n      }\n    });\n  }\n\n  // Select\n  // --------------------------------------------------------------------\n\n  if (dt_select_table.length) {\n    var dt_select = dt_select_table.DataTable({\n      ajax: assetsPath + 'json/table-datatable.json',\n      columns: [{\n        data: 'id'\n      }, {\n        data: 'full_name'\n      }, {\n        data: 'post'\n      }, {\n        data: 'email'\n      }, {\n        data: 'city'\n      }, {\n        data: 'start_date'\n      }, {\n        data: 'salary'\n      }, {\n        data: 'status'\n      }],\n      columnDefs: [{\n        // For Checkboxes\n        targets: 0,\n        searchable: false,\n        orderable: false,\n        render: function render() {\n          return '<input type=\"checkbox\" class=\"dt-checkboxes form-check-input\">';\n        },\n        checkboxes: {\n          selectRow: true,\n          selectAllRender: '<input type=\"checkbox\" class=\"form-check-input\">'\n        }\n      }, {\n        // Label\n        targets: -1,\n        render: function render(data, type, full, meta) {\n          var $status_number = full['status'];\n          var $status = {\n            1: {\n              title: 'Current',\n              class: 'bg-label-primary'\n            },\n            2: {\n              title: 'Professional',\n              class: ' bg-label-success'\n            },\n            3: {\n              title: 'Rejected',\n              class: ' bg-label-danger'\n            },\n            4: {\n              title: 'Resigned',\n              class: ' bg-label-warning'\n            },\n            5: {\n              title: 'Applied',\n              class: ' bg-label-info'\n            }\n          };\n          if (typeof $status[$status_number] === 'undefined') {\n            return data;\n          }\n          return '<span class=\"badge ' + $status[$status_number].class + '\">' + $status[$status_number].title + '</span>';\n        }\n      }],\n      order: [[1, 'desc']],\n      dom: '<\"row\"<\"col-sm-12 col-md-6\"l><\"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end\"f>><\"table-responsive\"t><\"row\"<\"col-sm-12 col-md-6\"i><\"col-sm-12 col-md-6\"p>>',\n      select: {\n        // Select style\n        style: 'multi'\n      }\n    });\n  }\n\n  // Filter form control to default size\n  // ? setTimeout used for multilingual table initialization\n  setTimeout(function () {\n    $('.dataTables_filter .form-control').removeClass('form-control-sm');\n    $('.dataTables_length .form-select').removeClass('form-select-sm');\n  }, 200);\n});\n\n//# sourceURL=webpack://Sneat/./static/js/tables-datatables-extensions.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/tables-datatables-extensions.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});