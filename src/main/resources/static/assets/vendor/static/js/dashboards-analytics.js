/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/dashboards-analytics.js":
/*!*******************************************!*\
  !*** ./static/js/dashboards-analytics.js ***!
  \*******************************************/
/***/ (function() {

eval("/**\n * Dashboard Analytics\n */\n\n\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n(function () {\n  var cardColor, headingColor, legendColor, labelColor, shadeColor, borderColor;\n  if (isDarkStyle) {\n    cardColor = config.colors_dark.cardColor;\n    headingColor = config.colors_dark.headingColor;\n    legendColor = config.colors_dark.bodyColor;\n    labelColor = config.colors_dark.textMuted;\n    borderColor = config.colors_dark.borderColor;\n  } else {\n    cardColor = config.colors.cardColor;\n    headingColor = config.colors.headingColor;\n    legendColor = config.colors.bodyColor;\n    labelColor = config.colors.textMuted;\n    borderColor = config.colors.borderColor;\n  }\n\n  // Order Area Chart\n  // --------------------------------------------------------------------\n  var orderAreaChartEl = document.querySelector('#orderChart'),\n    orderAreaChartConfig = {\n      chart: {\n        height: 80,\n        type: 'area',\n        toolbar: {\n          show: false\n        },\n        sparkline: {\n          enabled: true\n        }\n      },\n      markers: {\n        size: 6,\n        colors: 'transparent',\n        strokeColors: 'transparent',\n        strokeWidth: 4,\n        discrete: [{\n          fillColor: config.colors.white,\n          seriesIndex: 0,\n          dataPointIndex: 6,\n          strokeColor: config.colors.success,\n          strokeWidth: 2,\n          size: 6,\n          radius: 8\n        }],\n        hover: {\n          size: 7\n        }\n      },\n      grid: {\n        show: false,\n        padding: {\n          right: 8\n        }\n      },\n      colors: [config.colors.success],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: shadeColor,\n          shadeIntensity: 0.8,\n          opacityFrom: 0.8,\n          opacityTo: 0.25,\n          stops: [0, 85, 100]\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 2,\n        curve: 'smooth'\n      },\n      series: [{\n        data: [180, 175, 275, 140, 205, 190, 295]\n      }],\n      xaxis: {\n        show: false,\n        lines: {\n          show: false\n        },\n        labels: {\n          show: false\n        },\n        stroke: {\n          width: 0\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      yaxis: {\n        stroke: {\n          width: 0\n        },\n        show: false\n      }\n    };\n  if (_typeof(orderAreaChartEl) !== undefined && orderAreaChartEl !== null) {\n    var orderAreaChart = new ApexCharts(orderAreaChartEl, orderAreaChartConfig);\n    orderAreaChart.render();\n  }\n\n  // Total Revenue Report Chart - Bar Chart\n  // --------------------------------------------------------------------\n  var totalRevenueChartEl = document.querySelector('#totalRevenueChart'),\n    totalRevenueChartOptions = {\n      series: [{\n        name: '2021',\n        data: [18, 7, 15, 29, 18, 12, 9]\n      }, {\n        name: '2020',\n        data: [-13, -18, -9, -14, -5, -17, -15]\n      }],\n      chart: {\n        height: 300,\n        stacked: true,\n        type: 'bar',\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: '33%',\n          borderRadius: 12,\n          startingShape: 'rounded',\n          endingShape: 'rounded'\n        }\n      },\n      colors: [config.colors.primary, config.colors.info],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth',\n        width: 6,\n        lineCap: 'round',\n        colors: [cardColor]\n      },\n      legend: {\n        show: true,\n        horizontalAlign: 'left',\n        position: 'top',\n        markers: {\n          height: 8,\n          width: 8,\n          radius: 12,\n          offsetX: -3\n        },\n        labels: {\n          colors: legendColor\n        },\n        itemMargin: {\n          horizontal: 10\n        }\n      },\n      grid: {\n        borderColor: borderColor,\n        padding: {\n          top: 0,\n          bottom: -8,\n          left: 20,\n          right: 20\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n        labels: {\n          style: {\n            fontSize: '13px',\n            colors: labelColor\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            fontSize: '13px',\n            colors: labelColor\n          }\n        }\n      },\n      responsive: [{\n        breakpoint: 1700,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '32%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1580,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '35%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1440,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '42%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1300,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '48%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1200,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '40%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 1040,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 11,\n              columnWidth: '48%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 991,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '30%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 840,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '35%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 768,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '28%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 640,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '32%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 576,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '37%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 480,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '45%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 420,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '52%'\n            }\n          }\n        }\n      }, {\n        breakpoint: 380,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 10,\n              columnWidth: '60%'\n            }\n          }\n        }\n      }],\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(totalRevenueChartEl) !== undefined && totalRevenueChartEl !== null) {\n    var totalRevenueChart = new ApexCharts(totalRevenueChartEl, totalRevenueChartOptions);\n    totalRevenueChart.render();\n  }\n\n  // Growth Chart - Radial Bar Chart\n  // --------------------------------------------------------------------\n  var growthChartEl = document.querySelector('#growthChart'),\n    growthChartOptions = {\n      series: [78],\n      labels: ['Growth'],\n      chart: {\n        height: 240,\n        type: 'radialBar'\n      },\n      plotOptions: {\n        radialBar: {\n          size: 150,\n          offsetY: 10,\n          startAngle: -150,\n          endAngle: 150,\n          hollow: {\n            size: '55%'\n          },\n          track: {\n            background: cardColor,\n            strokeWidth: '100%'\n          },\n          dataLabels: {\n            name: {\n              offsetY: 15,\n              color: legendColor,\n              fontSize: '15px',\n              fontWeight: '500',\n              fontFamily: 'Public Sans'\n            },\n            value: {\n              offsetY: -25,\n              color: headingColor,\n              fontSize: '22px',\n              fontWeight: '500',\n              fontFamily: 'Public Sans'\n            }\n          }\n        }\n      },\n      colors: [config.colors.primary],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          shadeIntensity: 0.5,\n          gradientToColors: [config.colors.primary],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 0.6,\n          stops: [30, 70, 100]\n        }\n      },\n      stroke: {\n        dashArray: 5\n      },\n      grid: {\n        padding: {\n          top: -35,\n          bottom: -10\n        }\n      },\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(growthChartEl) !== undefined && growthChartEl !== null) {\n    var growthChart = new ApexCharts(growthChartEl, growthChartOptions);\n    growthChart.render();\n  }\n\n  // Revenue Bar Chart\n  // --------------------------------------------------------------------\n  var revenueBarChartEl = document.querySelector('#revenueChart'),\n    revenueBarChartConfig = {\n      chart: {\n        height: 80,\n        type: 'bar',\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          barHeight: '80%',\n          columnWidth: '75%',\n          startingShape: 'rounded',\n          endingShape: 'rounded',\n          borderRadius: 2,\n          distributed: true\n        }\n      },\n      grid: {\n        show: false,\n        padding: {\n          top: -20,\n          bottom: -12,\n          left: -10,\n          right: 0\n        }\n      },\n      colors: [config.colors_label.primary, config.colors_label.primary, config.colors_label.primary, config.colors_label.primary, config.colors.primary, config.colors_label.primary, config.colors_label.primary],\n      dataLabels: {\n        enabled: false\n      },\n      series: [{\n        data: [40, 95, 60, 45, 90, 50, 75]\n      }],\n      legend: {\n        show: false\n      },\n      xaxis: {\n        categories: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      }\n    };\n  if (_typeof(revenueBarChartEl) !== undefined && revenueBarChartEl !== null) {\n    var revenueBarChart = new ApexCharts(revenueBarChartEl, revenueBarChartConfig);\n    revenueBarChart.render();\n  }\n\n  // Profit Report Line Chart\n  // --------------------------------------------------------------------\n  var profileReportChartEl = document.querySelector('#profileReportChart'),\n    profileReportChartConfig = {\n      chart: {\n        height: 80,\n        // width: 175,\n        type: 'line',\n        toolbar: {\n          show: false\n        },\n        dropShadow: {\n          enabled: true,\n          top: 10,\n          left: 5,\n          blur: 3,\n          color: config.colors.warning,\n          opacity: 0.15\n        },\n        sparkline: {\n          enabled: true\n        }\n      },\n      grid: {\n        show: false,\n        padding: {\n          right: 8\n        }\n      },\n      colors: [config.colors.warning],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 5,\n        curve: 'smooth'\n      },\n      series: [{\n        data: [110, 270, 145, 245, 205, 285]\n      }],\n      xaxis: {\n        show: false,\n        lines: {\n          show: false\n        },\n        labels: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      yaxis: {\n        show: false\n      }\n    };\n  if (_typeof(profileReportChartEl) !== undefined && profileReportChartEl !== null) {\n    var profileReportChart = new ApexCharts(profileReportChartEl, profileReportChartConfig);\n    profileReportChart.render();\n  }\n\n  // Order Statistics Chart\n  // --------------------------------------------------------------------\n  var chartOrderStatistics = document.querySelector('#orderStatisticsChart'),\n    orderChartConfig = {\n      chart: {\n        height: 165,\n        width: 130,\n        type: 'donut'\n      },\n      labels: ['Electronic', 'Sports', 'Decor', 'Fashion'],\n      series: [85, 15, 50, 50],\n      colors: [config.colors.primary, config.colors.secondary, config.colors.info, config.colors.success],\n      stroke: {\n        width: 5,\n        colors: [cardColor]\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function formatter(val, opt) {\n          return parseInt(val) + '%';\n        }\n      },\n      legend: {\n        show: false\n      },\n      grid: {\n        padding: {\n          top: 0,\n          bottom: 0,\n          right: 15\n        }\n      },\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: '75%',\n            labels: {\n              show: true,\n              value: {\n                fontSize: '1.5rem',\n                fontFamily: 'Public Sans',\n                color: headingColor,\n                offsetY: -15,\n                formatter: function formatter(val) {\n                  return parseInt(val) + '%';\n                }\n              },\n              name: {\n                offsetY: 20,\n                fontFamily: 'Public Sans'\n              },\n              total: {\n                show: true,\n                fontSize: '0.8125rem',\n                color: legendColor,\n                label: 'Weekly',\n                formatter: function formatter(w) {\n                  return '38%';\n                }\n              }\n            }\n          }\n        }\n      }\n    };\n  if (_typeof(chartOrderStatistics) !== undefined && chartOrderStatistics !== null) {\n    var statisticsChart = new ApexCharts(chartOrderStatistics, orderChartConfig);\n    statisticsChart.render();\n  }\n\n  // Income Chart - Area chart\n  // --------------------------------------------------------------------\n  var incomeChartEl = document.querySelector('#incomeChart'),\n    incomeChartConfig = {\n      series: [{\n        data: [24, 21, 30, 22, 42, 26, 35, 29]\n      }],\n      chart: {\n        height: 215,\n        parentHeightOffset: 0,\n        parentWidthOffset: 0,\n        toolbar: {\n          show: false\n        },\n        type: 'area'\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 2,\n        curve: 'smooth'\n      },\n      legend: {\n        show: false\n      },\n      markers: {\n        size: 6,\n        colors: 'transparent',\n        strokeColors: 'transparent',\n        strokeWidth: 4,\n        discrete: [{\n          fillColor: config.colors.white,\n          seriesIndex: 0,\n          dataPointIndex: 7,\n          strokeColor: config.colors.primary,\n          strokeWidth: 2,\n          size: 6,\n          radius: 8\n        }],\n        hover: {\n          size: 7\n        }\n      },\n      colors: [config.colors.primary],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: shadeColor,\n          shadeIntensity: 0.6,\n          opacityFrom: 0.5,\n          opacityTo: 0.25,\n          stops: [0, 95, 100]\n        }\n      },\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 3,\n        padding: {\n          top: -20,\n          bottom: -8,\n          left: -10,\n          right: 8\n        }\n      },\n      xaxis: {\n        categories: ['', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          show: true,\n          style: {\n            fontSize: '13px',\n            colors: labelColor\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        },\n        min: 10,\n        max: 50,\n        tickAmount: 4\n      }\n    };\n  if (_typeof(incomeChartEl) !== undefined && incomeChartEl !== null) {\n    var incomeChart = new ApexCharts(incomeChartEl, incomeChartConfig);\n    incomeChart.render();\n  }\n\n  // Expenses Mini Chart - Radial Chart\n  // --------------------------------------------------------------------\n  var weeklyExpensesEl = document.querySelector('#expensesOfWeek'),\n    weeklyExpensesConfig = {\n      series: [65],\n      chart: {\n        width: 60,\n        height: 60,\n        type: 'radialBar'\n      },\n      plotOptions: {\n        radialBar: {\n          startAngle: 0,\n          endAngle: 360,\n          strokeWidth: '8',\n          hollow: {\n            margin: 2,\n            size: '45%'\n          },\n          track: {\n            strokeWidth: '50%',\n            background: borderColor\n          },\n          dataLabels: {\n            show: true,\n            name: {\n              show: false\n            },\n            value: {\n              formatter: function formatter(val) {\n                return '$' + parseInt(val);\n              },\n              offsetY: 5,\n              color: '#697a8d',\n              fontSize: '13px',\n              show: true\n            }\n          }\n        }\n      },\n      fill: {\n        type: 'solid',\n        colors: config.colors.primary\n      },\n      stroke: {\n        lineCap: 'round'\n      },\n      grid: {\n        padding: {\n          top: -10,\n          bottom: -15,\n          left: -10,\n          right: -10\n        }\n      },\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n  if (_typeof(weeklyExpensesEl) !== undefined && weeklyExpensesEl !== null) {\n    var weeklyExpenses = new ApexCharts(weeklyExpensesEl, weeklyExpensesConfig);\n    weeklyExpenses.render();\n  }\n})();\n\n//# sourceURL=webpack://Sneat/./static/js/dashboards-analytics.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/dashboards-analytics.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});