/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/wizard-ex-property-listing.js":
/*!*************************************************!*\
  !*** ./static/js/wizard-ex-property-listing.js ***!
  \*************************************************/
/***/ (function() {

eval("/**\n *  Form Wizard\n */\n\n\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n(function () {\n  // Init custom option check\n  window.Helpers.initCustomOptionCheck();\n  var flatpickrRange = document.querySelector('.flatpickr'),\n    phoneMask = document.querySelector('.contact-number-mask'),\n    plCountry = $('#plCountry'),\n    plFurnishingDetailsSuggestionEl = document.querySelector('#plFurnishingDetails');\n\n  // Phone Number Input Mask\n  if (phoneMask) {\n    new Cleave(phoneMask, {\n      phone: true,\n      phoneRegionCode: 'US'\n    });\n  }\n\n  // select2 (Country)\n\n  if (plCountry) {\n    plCountry.wrap('<div class=\"position-relative\"></div>');\n    plCountry.select2({\n      placeholder: 'Select country',\n      dropdownParent: plCountry.parent()\n    });\n  }\n  if (flatpickrRange) {\n    flatpickrRange.flatpickr();\n  }\n\n  // Tagify (Furnishing details)\n  var furnishingList = ['Fridge', 'TV', 'AC', 'WiFi', 'RO', 'Washing Machine', 'Sofa', 'Bed', 'Dining Table', 'Microwave', 'Cupboard'];\n  if (plFurnishingDetailsSuggestionEl) {\n    var plFurnishingDetailsSuggestion = new Tagify(plFurnishingDetailsSuggestionEl, {\n      whitelist: furnishingList,\n      maxTags: 10,\n      dropdown: {\n        maxItems: 20,\n        classname: 'tags-inline',\n        enabled: 0,\n        closeOnSelect: false\n      }\n    });\n  }\n\n  // Vertical Wizard\n  // --------------------------------------------------------------------\n\n  var wizardPropertyListing = document.querySelector('#wizard-property-listing');\n  if (_typeof(wizardPropertyListing) !== undefined && wizardPropertyListing !== null) {\n    // Wizard form\n    var wizardPropertyListingForm = wizardPropertyListing.querySelector('#wizard-property-listing-form');\n    // Wizard steps\n    var wizardPropertyListingFormStep1 = wizardPropertyListingForm.querySelector('#personal-details');\n    var wizardPropertyListingFormStep2 = wizardPropertyListingForm.querySelector('#property-details');\n    var wizardPropertyListingFormStep3 = wizardPropertyListingForm.querySelector('#property-features');\n    var wizardPropertyListingFormStep4 = wizardPropertyListingForm.querySelector('#property-area');\n    var wizardPropertyListingFormStep5 = wizardPropertyListingForm.querySelector('#price-details');\n    // Wizard next prev button\n    var wizardPropertyListingNext = [].slice.call(wizardPropertyListingForm.querySelectorAll('.btn-next'));\n    var wizardPropertyListingPrev = [].slice.call(wizardPropertyListingForm.querySelectorAll('.btn-prev'));\n    var validationStepper = new Stepper(wizardPropertyListing, {\n      linear: true\n    });\n\n    // Personal Details\n    var FormValidation1 = FormValidation.formValidation(wizardPropertyListingFormStep1, {\n      fields: {\n        // * Validate the fields here based on your requirements\n        plFirstName: {\n          validators: {\n            notEmpty: {\n              message: 'Please enter your first name'\n            }\n          }\n        },\n        plLastName: {\n          validators: {\n            notEmpty: {\n              message: 'Please enter your last name'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap5: new FormValidation.plugins.Bootstrap5({\n          // Use this for enabling/changing valid/invalid class\n          // eleInvalidClass: '',\n          eleValidClass: '',\n          rowSelector: '.col-sm-6'\n        }),\n        autoFocus: new FormValidation.plugins.AutoFocus(),\n        submitButton: new FormValidation.plugins.SubmitButton()\n      },\n      init: function init(instance) {\n        instance.on('plugins.message.placed', function (e) {\n          //* Move the error message out of the `input-group` element\n          if (e.element.parentElement.classList.contains('input-group')) {\n            e.element.parentElement.insertAdjacentElement('afterend', e.messageElement);\n          }\n        });\n      }\n    }).on('core.form.valid', function () {\n      // Jump to the next step when all fields in the current step are valid\n      validationStepper.next();\n    });\n\n    // Property Details\n    var FormValidation2 = FormValidation.formValidation(wizardPropertyListingFormStep2, {\n      fields: {\n        // * Validate the fields here based on your requirements\n\n        plPropertyType: {\n          validators: {\n            notEmpty: {\n              message: 'Please select property type'\n            }\n          }\n        },\n        plZipCode: {\n          validators: {\n            notEmpty: {\n              message: 'Please enter zip code'\n            },\n            stringLength: {\n              min: 4,\n              max: 10,\n              message: 'The zip code must be more than 4 and less than 10 characters long'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap5: new FormValidation.plugins.Bootstrap5({\n          // Use this for enabling/changing valid/invalid class\n          // eleInvalidClass: '',\n          eleValidClass: '',\n          rowSelector: function rowSelector(field, ele) {\n            // field is the field name & ele is the field element\n            switch (field) {\n              case 'plAddress':\n                return '.col-lg-12';\n              default:\n                return '.col-sm-6';\n            }\n          }\n        }),\n        autoFocus: new FormValidation.plugins.AutoFocus(),\n        submitButton: new FormValidation.plugins.SubmitButton()\n      }\n    }).on('core.form.valid', function () {\n      // Jump to the next step when all fields in the current step are valid\n      validationStepper.next();\n    });\n\n    // select2 (Property type)\n    var plPropertyType = $('#plPropertyType');\n    if (plPropertyType.length) {\n      plPropertyType.wrap('<div class=\"position-relative\"></div>');\n      plPropertyType.select2({\n        placeholder: 'Select property type',\n        dropdownParent: plPropertyType.parent()\n      }).on('change', function () {\n        // Revalidate the color field when an option is chosen\n        FormValidation2.revalidateField('plPropertyType');\n      });\n    }\n\n    // Property Features\n    var FormValidation3 = FormValidation.formValidation(wizardPropertyListingFormStep3, {\n      fields: {\n        // * Validate the fields here based on your requirements\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap5: new FormValidation.plugins.Bootstrap5({\n          // Use this for enabling/changing valid/invalid class\n          // eleInvalidClass: '',\n          eleValidClass: '',\n          rowSelector: '.col-sm-6'\n        }),\n        autoFocus: new FormValidation.plugins.AutoFocus(),\n        submitButton: new FormValidation.plugins.SubmitButton()\n      }\n    }).on('core.form.valid', function () {\n      validationStepper.next();\n    });\n\n    // Property Area\n    var FormValidation4 = FormValidation.formValidation(wizardPropertyListingFormStep4, {\n      fields: {\n        // * Validate the fields here based on your requirements\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap5: new FormValidation.plugins.Bootstrap5({\n          // Use this for enabling/changing valid/invalid class\n          // eleInvalidClass: '',\n          eleValidClass: '',\n          rowSelector: '.col-md-12'\n        }),\n        autoFocus: new FormValidation.plugins.AutoFocus(),\n        submitButton: new FormValidation.plugins.SubmitButton()\n      }\n    }).on('core.form.valid', function () {\n      // Jump to the next step when all fields in the current step are valid\n      validationStepper.next();\n    });\n\n    // Price Details\n    var FormValidation5 = FormValidation.formValidation(wizardPropertyListingFormStep5, {\n      fields: {\n        // * Validate the fields here based on your requirements\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap5: new FormValidation.plugins.Bootstrap5({\n          // Use this for enabling/changing valid/invalid class\n          // eleInvalidClass: '',\n          eleValidClass: '',\n          rowSelector: '.col-md-12'\n        }),\n        autoFocus: new FormValidation.plugins.AutoFocus(),\n        submitButton: new FormValidation.plugins.SubmitButton()\n      }\n    }).on('core.form.valid', function () {\n      // You can submit the form\n      // wizardPropertyListingForm.submit()\n      // or send the form data to server via an Ajax request\n      // To make the demo simple, I just placed an alert\n      alert('Submitted..!!');\n    });\n    wizardPropertyListingNext.forEach(function (item) {\n      item.addEventListener('click', function (event) {\n        // When click the Next button, we will validate the current step\n        switch (validationStepper._currentIndex) {\n          case 0:\n            FormValidation1.validate();\n            break;\n          case 1:\n            FormValidation2.validate();\n            break;\n          case 2:\n            FormValidation3.validate();\n            break;\n          case 3:\n            FormValidation4.validate();\n            break;\n          case 4:\n            FormValidation5.validate();\n            break;\n          default:\n            break;\n        }\n      });\n    });\n    wizardPropertyListingPrev.forEach(function (item) {\n      item.addEventListener('click', function (event) {\n        switch (validationStepper._currentIndex) {\n          case 4:\n            validationStepper.previous();\n            break;\n          case 3:\n            validationStepper.previous();\n            break;\n          case 2:\n            validationStepper.previous();\n            break;\n          case 1:\n            validationStepper.previous();\n            break;\n          case 0:\n          default:\n            break;\n        }\n      });\n    });\n  }\n})();\n\n//# sourceURL=webpack://Sneat/./static/js/wizard-ex-property-listing.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/wizard-ex-property-listing.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});