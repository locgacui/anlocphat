/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/app-access-roles.js":
/*!***************************************!*\
  !*** ./static/js/app-access-roles.js ***!
  \***************************************/
/***/ (function() {

eval("/**\n * App user list\n */\n\n\n\n// Datatable (jquery)\n$(function () {\n  var dtUserTable = $('.datatables-users'),\n    statusObj = {\n      1: {\n        title: 'Pending',\n        class: 'bg-label-warning'\n      },\n      2: {\n        title: 'Active',\n        class: 'bg-label-success'\n      },\n      3: {\n        title: 'Inactive',\n        class: 'bg-label-secondary'\n      }\n    };\n  var userView = 'app-user-view-account.html';\n\n  // Users List datatable\n  if (dtUserTable.length) {\n    dtUserTable.DataTable({\n      ajax: assetsPath + 'json/user-list.json',\n      // JSON file to add data\n      columns: [\n      // columns according to JSON\n      {\n        data: ''\n      }, {\n        data: 'full_name'\n      }, {\n        data: 'role'\n      }, {\n        data: 'current_plan'\n      }, {\n        data: 'billing'\n      }, {\n        data: 'status'\n      }, {\n        data: ''\n      }],\n      columnDefs: [{\n        // For Responsive\n        className: 'control',\n        orderable: false,\n        searchable: false,\n        responsivePriority: 2,\n        targets: 0,\n        render: function render(data, type, full, meta) {\n          return '';\n        }\n      }, {\n        // User full name and email\n        targets: 1,\n        responsivePriority: 4,\n        render: function render(data, type, full, meta) {\n          var $name = full['full_name'],\n            $email = full['email'],\n            $image = full['avatar'];\n          if ($image) {\n            // For Avatar image\n            var $output = '<img src=\"' + assetsPath + 'img/avatars/' + $image + '\" alt=\"Avatar\" class=\"rounded-circle\">';\n          } else {\n            // For Avatar badge\n            var stateNum = Math.floor(Math.random() * 6) + 1;\n            var states = ['success', 'danger', 'warning', 'info', 'dark', 'primary', 'secondary'];\n            var $state = states[stateNum],\n              $name = full['full_name'],\n              $initials = $name.match(/\\b\\w/g) || [];\n            $initials = (($initials.shift() || '') + ($initials.pop() || '')).toUpperCase();\n            $output = '<span class=\"avatar-initial rounded-circle bg-label-' + $state + '\">' + $initials + '</span>';\n          }\n          // Creates full output for row\n          var $row_output = '<div class=\"d-flex justify-content-left align-items-center\">' + '<div class=\"avatar-wrapper\">' + '<div class=\"avatar avatar-sm me-3\">' + $output + '</div>' + '</div>' + '<div class=\"d-flex flex-column\">' + '<a href=\"' + userView + '\" class=\"text-body text-truncate\"><span class=\"fw-medium\">' + $name + '</span></a>' + '<small class=\"text-muted\">@' + $email + '</small>' + '</div>' + '</div>';\n          return $row_output;\n        }\n      }, {\n        // User Role\n        targets: 2,\n        render: function render(data, type, full, meta) {\n          var $role = full['role'];\n          var roleBadgeObj = {\n            Subscriber: '<span class=\"badge badge-center rounded-pill bg-label-warning w-px-30 h-px-30 me-2\"><i class=\"bx bx-user bx-xs\"></i></span>',\n            Author: '<span class=\"badge badge-center rounded-pill bg-label-success w-px-30 h-px-30 me-2\"><i class=\"bx bx-cog bx-xs\"></i></span>',\n            Maintainer: '<span class=\"badge badge-center rounded-pill bg-label-primary w-px-30 h-px-30 me-2\"><i class=\"bx bx-pie-chart-alt bx-xs\"></i></span>',\n            Editor: '<span class=\"badge badge-center rounded-pill bg-label-info w-px-30 h-px-30 me-2\"><i class=\"bx bx-edit bx-xs\"></i></span>',\n            Admin: '<span class=\"badge badge-center rounded-pill bg-label-secondary w-px-30 h-px-30 me-2\"><i class=\"bx bx-mobile-alt bx-xs\"></i></span>'\n          };\n          return \"<span class='text-truncate d-flex align-items-center'>\" + roleBadgeObj[$role] + $role + '</span>';\n        }\n      }, {\n        // Plans\n        targets: 3,\n        render: function render(data, type, full, meta) {\n          var $plan = full['current_plan'];\n          return '<span class=\"fw-medium\">' + $plan + '</span>';\n        }\n      }, {\n        // User Status\n        targets: 5,\n        render: function render(data, type, full, meta) {\n          var $status = full['status'];\n          return '<span class=\"badge ' + statusObj[$status].class + '\">' + statusObj[$status].title + '</span>';\n        }\n      }, {\n        // Actions\n        targets: -1,\n        title: 'View',\n        searchable: false,\n        orderable: false,\n        render: function render(data, type, full, meta) {\n          return '<a href=\"' + userView + '\" class=\"btn btn-sm btn-icon\"><i class=\"bx bx-show-alt\"></i></a>';\n        }\n      }],\n      order: [[1, 'desc']],\n      dom: '<\"row mx-2\"' + '<\"col-sm-12 col-md-4 col-lg-6\" l>' + '<\"col-sm-12 col-md-8 col-lg-6\"<\"dt-action-buttons text-xl-end text-lg-start text-md-end text-start d-flex align-items-center justify-content-md-end justify-content-center align-items-center flex-sm-nowrap flex-wrap me-1\"<\"me-3\"f><\"user_role w-px-200 pb-3 pb-sm-0\">>>' + '>t' + '<\"row mx-2\"' + '<\"col-sm-12 col-md-6\"i>' + '<\"col-sm-12 col-md-6\"p>' + '>',\n      language: {\n        sLengthMenu: '_MENU_',\n        search: 'Search',\n        searchPlaceholder: 'Search..'\n      },\n      // For responsive popup\n      responsive: {\n        details: {\n          display: $.fn.dataTable.Responsive.display.modal({\n            header: function header(row) {\n              var data = row.data();\n              return 'Details of ' + data['full_name'];\n            }\n          }),\n          type: 'column',\n          renderer: function renderer(api, rowIdx, columns) {\n            var data = $.map(columns, function (col, i) {\n              return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)\n              ? '<tr data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>' : '';\n            }).join('');\n            return data ? $('<table class=\"table\"/><tbody />').append(data) : false;\n          }\n        }\n      },\n      initComplete: function initComplete() {\n        // Adding role filter once table initialized\n        this.api().columns(2).every(function () {\n          var column = this;\n          var select = $('<select id=\"UserRole\" class=\"form-select text-capitalize\"><option value=\"\"> Select Role </option></select>').appendTo('.user_role').on('change', function () {\n            var val = $.fn.dataTable.util.escapeRegex($(this).val());\n            column.search(val ? '^' + val + '$' : '', true, false).draw();\n          });\n          column.data().unique().sort().each(function (d, j) {\n            select.append('<option value=\"' + d + '\" class=\"text-capitalize\">' + d + '</option>');\n          });\n        });\n      }\n    });\n  }\n\n  // Filter form control to default size\n  // ? setTimeout used for multilingual table initialization\n  setTimeout(function () {\n    $('.dataTables_filter .form-control').removeClass('form-control-sm');\n    $('.dataTables_length .form-select').removeClass('form-select-sm');\n  }, 300);\n});\n(function () {\n  // On edit role click, update text\n  var roleEditList = document.querySelectorAll('.role-edit-modal'),\n    roleAdd = document.querySelector('.add-new-role'),\n    roleTitle = document.querySelector('.role-title');\n  roleAdd.onclick = function () {\n    roleTitle.innerHTML = 'Add New Role'; // reset text\n  };\n  if (roleEditList) {\n    roleEditList.forEach(function (roleEditEl) {\n      roleEditEl.onclick = function () {\n        roleTitle.innerHTML = 'Edit Role'; // reset text\n      };\n    });\n  }\n})();\n\n//# sourceURL=webpack://Sneat/./static/js/app-access-roles.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/app-access-roles.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});